require('./sourcemap-register.js');(()=>{var __webpack_modules__={9483:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){if(n===undefined)n=a;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[a]}})}:function(e,t,a,n){if(n===undefined)n=a;e[n]=t[a]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var a in e)if(a!=="default"&&Object.hasOwnProperty.call(e,a))n(t,e,a);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.issue=t.issueCommand=void 0;const p=r(a(2037));const d=a(2994);function issueCommand(e,t,a){const n=new Command(e,t,a);process.stdout.write(n.toString()+p.EOL)}t.issueCommand=issueCommand;function issue(e,t=""){issueCommand(e,{},t)}t.issue=issue;const s="::";class Command{constructor(e,t,a){if(!e){e="missing.command"}this.command=e;this.properties=t;this.message=a}toString(){let e=s+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let t=true;for(const a in this.properties){if(this.properties.hasOwnProperty(a)){const n=this.properties[a];if(n){if(t){t=false}else{e+=","}e+=`${a}=${escapeProperty(n)}`}}}}e+=`${s}${escapeData(this.message)}`;return e}}function escapeData(e){return d.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return d.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},7733:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){if(n===undefined)n=a;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[a]}})}:function(e,t,a,n){if(n===undefined)n=a;e[n]=t[a]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var a in e)if(a!=="default"&&Object.hasOwnProperty.call(e,a))n(t,e,a);i(t,e);return t};var p=this&&this.__awaiter||function(e,t,a,n){function adopt(e){return e instanceof a?e:new a((function(t){t(e)}))}return new(a||(a=Promise))((function(a,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n["throw"](e))}catch(e){i(e)}}function step(e){e.done?a(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.getIDToken=t.getState=t.saveState=t.group=t.endGroup=t.startGroup=t.info=t.notice=t.warning=t.error=t.debug=t.isDebug=t.setFailed=t.setCommandEcho=t.setOutput=t.getBooleanInput=t.getMultilineInput=t.getInput=t.addPath=t.setSecret=t.exportVariable=t.ExitCode=void 0;const d=a(9483);const s=a(8541);const o=a(2994);const l=r(a(2037));const u=r(a(1017));const c=a(2422);var m;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(m=t.ExitCode||(t.ExitCode={}));function exportVariable(e,t){const a=o.toCommandValue(t);process.env[e]=a;const n=process.env["GITHUB_ENV"]||"";if(n){return s.issueFileCommand("ENV",s.prepareKeyValueMessage(e,t))}d.issueCommand("set-env",{name:e},a)}t.exportVariable=exportVariable;function setSecret(e){d.issueCommand("add-mask",{},e)}t.setSecret=setSecret;function addPath(e){const t=process.env["GITHUB_PATH"]||"";if(t){s.issueFileCommand("PATH",e)}else{d.issueCommand("add-path",{},e)}process.env["PATH"]=`${e}${u.delimiter}${process.env["PATH"]}`}t.addPath=addPath;function getInput(e,t){const a=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(t&&t.required&&!a){throw new Error(`Input required and not supplied: ${e}`)}if(t&&t.trimWhitespace===false){return a}return a.trim()}t.getInput=getInput;function getMultilineInput(e,t){const a=getInput(e,t).split("\n").filter((e=>e!==""));if(t&&t.trimWhitespace===false){return a}return a.map((e=>e.trim()))}t.getMultilineInput=getMultilineInput;function getBooleanInput(e,t){const a=["true","True","TRUE"];const n=["false","False","FALSE"];const i=getInput(e,t);if(a.includes(i))return true;if(n.includes(i))return false;throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${e}\n`+`Support boolean input list: \`true | True | TRUE | false | False | FALSE\``)}t.getBooleanInput=getBooleanInput;function setOutput(e,t){const a=process.env["GITHUB_OUTPUT"]||"";if(a){return s.issueFileCommand("OUTPUT",s.prepareKeyValueMessage(e,t))}process.stdout.write(l.EOL);d.issueCommand("set-output",{name:e},o.toCommandValue(t))}t.setOutput=setOutput;function setCommandEcho(e){d.issue("echo",e?"on":"off")}t.setCommandEcho=setCommandEcho;function setFailed(e){process.exitCode=m.Failure;error(e)}t.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}t.isDebug=isDebug;function debug(e){d.issueCommand("debug",{},e)}t.debug=debug;function error(e,t={}){d.issueCommand("error",o.toCommandProperties(t),e instanceof Error?e.toString():e)}t.error=error;function warning(e,t={}){d.issueCommand("warning",o.toCommandProperties(t),e instanceof Error?e.toString():e)}t.warning=warning;function notice(e,t={}){d.issueCommand("notice",o.toCommandProperties(t),e instanceof Error?e.toString():e)}t.notice=notice;function info(e){process.stdout.write(e+l.EOL)}t.info=info;function startGroup(e){d.issue("group",e)}t.startGroup=startGroup;function endGroup(){d.issue("endgroup")}t.endGroup=endGroup;function group(e,t){return p(this,void 0,void 0,(function*(){startGroup(e);let a;try{a=yield t()}finally{endGroup()}return a}))}t.group=group;function saveState(e,t){const a=process.env["GITHUB_STATE"]||"";if(a){return s.issueFileCommand("STATE",s.prepareKeyValueMessage(e,t))}d.issueCommand("save-state",{name:e},o.toCommandValue(t))}t.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}t.getState=getState;function getIDToken(e){return p(this,void 0,void 0,(function*(){return yield c.OidcClient.getIDToken(e)}))}t.getIDToken=getIDToken;var f=a(513);Object.defineProperty(t,"summary",{enumerable:true,get:function(){return f.summary}});var v=a(513);Object.defineProperty(t,"markdownSummary",{enumerable:true,get:function(){return v.markdownSummary}});var h=a(3084);Object.defineProperty(t,"toPosixPath",{enumerable:true,get:function(){return h.toPosixPath}});Object.defineProperty(t,"toWin32Path",{enumerable:true,get:function(){return h.toWin32Path}});Object.defineProperty(t,"toPlatformPath",{enumerable:true,get:function(){return h.toPlatformPath}})},8541:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){if(n===undefined)n=a;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[a]}})}:function(e,t,a,n){if(n===undefined)n=a;e[n]=t[a]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var a in e)if(a!=="default"&&Object.hasOwnProperty.call(e,a))n(t,e,a);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.prepareKeyValueMessage=t.issueFileCommand=void 0;const p=r(a(7147));const d=r(a(2037));const s=a(2033);const o=a(2994);function issueFileCommand(e,t){const a=process.env[`GITHUB_${e}`];if(!a){throw new Error(`Unable to find environment variable for file command ${e}`)}if(!p.existsSync(a)){throw new Error(`Missing file at path: ${a}`)}p.appendFileSync(a,`${o.toCommandValue(t)}${d.EOL}`,{encoding:"utf8"})}t.issueFileCommand=issueFileCommand;function prepareKeyValueMessage(e,t){const a=`ghadelimiter_${s.v4()}`;const n=o.toCommandValue(t);if(e.includes(a)){throw new Error(`Unexpected input: name should not contain the delimiter "${a}"`)}if(n.includes(a)){throw new Error(`Unexpected input: value should not contain the delimiter "${a}"`)}return`${e}<<${a}${d.EOL}${n}${d.EOL}${a}`}t.prepareKeyValueMessage=prepareKeyValueMessage},2422:function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){function adopt(e){return e instanceof a?e:new a((function(t){t(e)}))}return new(a||(a=Promise))((function(a,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n["throw"](e))}catch(e){i(e)}}function step(e){e.done?a(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.OidcClient=void 0;const i=a(7794);const r=a(4610);const p=a(7733);class OidcClient{static createHttpClient(e=true,t=10){const a={allowRetries:e,maxRetries:t};return new i.HttpClient("actions/oidc-client",[new r.BearerCredentialHandler(OidcClient.getRequestToken())],a)}static getRequestToken(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable")}return e}static getIDTokenUrl(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable")}return e}static getCall(e){var t;return n(this,void 0,void 0,(function*(){const a=OidcClient.createHttpClient();const n=yield a.getJson(e).catch((e=>{throw new Error(`Failed to get ID Token. \n \n        Error Code : ${e.statusCode}\n \n        Error Message: ${e.result.message}`)}));const i=(t=n.result)===null||t===void 0?void 0:t.value;if(!i){throw new Error("Response json body do not have ID Token field")}return i}))}static getIDToken(e){return n(this,void 0,void 0,(function*(){try{let t=OidcClient.getIDTokenUrl();if(e){const a=encodeURIComponent(e);t=`${t}&audience=${a}`}p.debug(`ID token url is ${t}`);const a=yield OidcClient.getCall(t);p.setSecret(a);return a}catch(e){throw new Error(`Error message: ${e.message}`)}}))}}t.OidcClient=OidcClient},3084:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){if(n===undefined)n=a;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[a]}})}:function(e,t,a,n){if(n===undefined)n=a;e[n]=t[a]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var a in e)if(a!=="default"&&Object.hasOwnProperty.call(e,a))n(t,e,a);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.toPlatformPath=t.toWin32Path=t.toPosixPath=void 0;const p=r(a(1017));function toPosixPath(e){return e.replace(/[\\]/g,"/")}t.toPosixPath=toPosixPath;function toWin32Path(e){return e.replace(/[/]/g,"\\")}t.toWin32Path=toWin32Path;function toPlatformPath(e){return e.replace(/[/\\]/g,p.sep)}t.toPlatformPath=toPlatformPath},513:function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){function adopt(e){return e instanceof a?e:new a((function(t){t(e)}))}return new(a||(a=Promise))((function(a,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n["throw"](e))}catch(e){i(e)}}function step(e){e.done?a(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.summary=t.markdownSummary=t.SUMMARY_DOCS_URL=t.SUMMARY_ENV_VAR=void 0;const i=a(2037);const r=a(7147);const{access:p,appendFile:d,writeFile:s}=r.promises;t.SUMMARY_ENV_VAR="GITHUB_STEP_SUMMARY";t.SUMMARY_DOCS_URL="https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";class Summary{constructor(){this._buffer=""}filePath(){return n(this,void 0,void 0,(function*(){if(this._filePath){return this._filePath}const e=process.env[t.SUMMARY_ENV_VAR];if(!e){throw new Error(`Unable to find environment variable for $${t.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`)}try{yield p(e,r.constants.R_OK|r.constants.W_OK)}catch(t){throw new Error(`Unable to access summary file: '${e}'. Check if the file has correct read/write permissions.`)}this._filePath=e;return this._filePath}))}wrap(e,t,a={}){const n=Object.entries(a).map((([e,t])=>` ${e}="${t}"`)).join("");if(!t){return`<${e}${n}>`}return`<${e}${n}>${t}</${e}>`}write(e){return n(this,void 0,void 0,(function*(){const t=!!(e===null||e===void 0?void 0:e.overwrite);const a=yield this.filePath();const n=t?s:d;yield n(a,this._buffer,{encoding:"utf8"});return this.emptyBuffer()}))}clear(){return n(this,void 0,void 0,(function*(){return this.emptyBuffer().write({overwrite:true})}))}stringify(){return this._buffer}isEmptyBuffer(){return this._buffer.length===0}emptyBuffer(){this._buffer="";return this}addRaw(e,t=false){this._buffer+=e;return t?this.addEOL():this}addEOL(){return this.addRaw(i.EOL)}addCodeBlock(e,t){const a=Object.assign({},t&&{lang:t});const n=this.wrap("pre",this.wrap("code",e),a);return this.addRaw(n).addEOL()}addList(e,t=false){const a=t?"ol":"ul";const n=e.map((e=>this.wrap("li",e))).join("");const i=this.wrap(a,n);return this.addRaw(i).addEOL()}addTable(e){const t=e.map((e=>{const t=e.map((e=>{if(typeof e==="string"){return this.wrap("td",e)}const{header:t,data:a,colspan:n,rowspan:i}=e;const r=t?"th":"td";const p=Object.assign(Object.assign({},n&&{colspan:n}),i&&{rowspan:i});return this.wrap(r,a,p)})).join("");return this.wrap("tr",t)})).join("");const a=this.wrap("table",t);return this.addRaw(a).addEOL()}addDetails(e,t){const a=this.wrap("details",this.wrap("summary",e)+t);return this.addRaw(a).addEOL()}addImage(e,t,a){const{width:n,height:i}=a||{};const r=Object.assign(Object.assign({},n&&{width:n}),i&&{height:i});const p=this.wrap("img",null,Object.assign({src:e,alt:t},r));return this.addRaw(p).addEOL()}addHeading(e,t){const a=`h${t}`;const n=["h1","h2","h3","h4","h5","h6"].includes(a)?a:"h1";const i=this.wrap(n,e);return this.addRaw(i).addEOL()}addSeparator(){const e=this.wrap("hr",null);return this.addRaw(e).addEOL()}addBreak(){const e=this.wrap("br",null);return this.addRaw(e).addEOL()}addQuote(e,t){const a=Object.assign({},t&&{cite:t});const n=this.wrap("blockquote",e,a);return this.addRaw(n).addEOL()}addLink(e,t){const a=this.wrap("a",e,{href:t});return this.addRaw(a).addEOL()}}const o=new Summary;t.markdownSummary=o;t.summary=o},2994:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.toCommandProperties=t.toCommandValue=void 0;function toCommandValue(e){if(e===null||e===undefined){return""}else if(typeof e==="string"||e instanceof String){return e}return JSON.stringify(e)}t.toCommandValue=toCommandValue;function toCommandProperties(e){if(!Object.keys(e).length){return{}}return{title:e.title,file:e.file,line:e.startLine,endLine:e.endLine,col:e.startColumn,endColumn:e.endColumn}}t.toCommandProperties=toCommandProperties},4610:function(e,t){"use strict";var a=this&&this.__awaiter||function(e,t,a,n){function adopt(e){return e instanceof a?e:new a((function(t){t(e)}))}return new(a||(a=Promise))((function(a,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n["throw"](e))}catch(e){i(e)}}function step(e){e.done?a(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.PersonalAccessTokenCredentialHandler=t.BearerCredentialHandler=t.BasicCredentialHandler=void 0;class BasicCredentialHandler{constructor(e,t){this.username=e;this.password=t}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`}canHandleAuthentication(){return false}handleAuthentication(){return a(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.BasicCredentialHandler=BasicCredentialHandler;class BearerCredentialHandler{constructor(e){this.token=e}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Bearer ${this.token}`}canHandleAuthentication(){return false}handleAuthentication(){return a(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.BearerCredentialHandler=BearerCredentialHandler;class PersonalAccessTokenCredentialHandler{constructor(e){this.token=e}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`}canHandleAuthentication(){return false}handleAuthentication(){return a(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.PersonalAccessTokenCredentialHandler=PersonalAccessTokenCredentialHandler},7794:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){if(n===undefined)n=a;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[a]}})}:function(e,t,a,n){if(n===undefined)n=a;e[n]=t[a]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var a in e)if(a!=="default"&&Object.hasOwnProperty.call(e,a))n(t,e,a);i(t,e);return t};var p=this&&this.__awaiter||function(e,t,a,n){function adopt(e){return e instanceof a?e:new a((function(t){t(e)}))}return new(a||(a=Promise))((function(a,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n["throw"](e))}catch(e){i(e)}}function step(e){e.done?a(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.HttpClient=t.isHttps=t.HttpClientResponse=t.HttpClientError=t.getProxyUrl=t.MediaTypes=t.Headers=t.HttpCodes=void 0;const d=r(a(3685));const s=r(a(5687));const o=r(a(1116));const l=r(a(4249));var u;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(u=t.HttpCodes||(t.HttpCodes={}));var c;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(c=t.Headers||(t.Headers={}));var m;(function(e){e["ApplicationJson"]="application/json"})(m=t.MediaTypes||(t.MediaTypes={}));function getProxyUrl(e){const t=o.getProxyUrl(new URL(e));return t?t.href:""}t.getProxyUrl=getProxyUrl;const f=[u.MovedPermanently,u.ResourceMoved,u.SeeOther,u.TemporaryRedirect,u.PermanentRedirect];const v=[u.BadGateway,u.ServiceUnavailable,u.GatewayTimeout];const h=["OPTIONS","GET","DELETE","HEAD"];const y=10;const T=5;class HttpClientError extends Error{constructor(e,t){super(e);this.name="HttpClientError";this.statusCode=t;Object.setPrototypeOf(this,HttpClientError.prototype)}}t.HttpClientError=HttpClientError;class HttpClientResponse{constructor(e){this.message=e}readBody(){return p(this,void 0,void 0,(function*(){return new Promise((e=>p(this,void 0,void 0,(function*(){let t=Buffer.alloc(0);this.message.on("data",(e=>{t=Buffer.concat([t,e])}));this.message.on("end",(()=>{e(t.toString())}))}))))}))}}t.HttpClientResponse=HttpClientResponse;function isHttps(e){const t=new URL(e);return t.protocol==="https:"}t.isHttps=isHttps;class HttpClient{constructor(e,t,a){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=t||[];this.requestOptions=a;if(a){if(a.ignoreSslError!=null){this._ignoreSslError=a.ignoreSslError}this._socketTimeout=a.socketTimeout;if(a.allowRedirects!=null){this._allowRedirects=a.allowRedirects}if(a.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=a.allowRedirectDowngrade}if(a.maxRedirects!=null){this._maxRedirects=Math.max(a.maxRedirects,0)}if(a.keepAlive!=null){this._keepAlive=a.keepAlive}if(a.allowRetries!=null){this._allowRetries=a.allowRetries}if(a.maxRetries!=null){this._maxRetries=a.maxRetries}}}options(e,t){return p(this,void 0,void 0,(function*(){return this.request("OPTIONS",e,null,t||{})}))}get(e,t){return p(this,void 0,void 0,(function*(){return this.request("GET",e,null,t||{})}))}del(e,t){return p(this,void 0,void 0,(function*(){return this.request("DELETE",e,null,t||{})}))}post(e,t,a){return p(this,void 0,void 0,(function*(){return this.request("POST",e,t,a||{})}))}patch(e,t,a){return p(this,void 0,void 0,(function*(){return this.request("PATCH",e,t,a||{})}))}put(e,t,a){return p(this,void 0,void 0,(function*(){return this.request("PUT",e,t,a||{})}))}head(e,t){return p(this,void 0,void 0,(function*(){return this.request("HEAD",e,null,t||{})}))}sendStream(e,t,a,n){return p(this,void 0,void 0,(function*(){return this.request(e,t,a,n)}))}getJson(e,t={}){return p(this,void 0,void 0,(function*(){t[c.Accept]=this._getExistingOrDefaultHeader(t,c.Accept,m.ApplicationJson);const a=yield this.get(e,t);return this._processResponse(a,this.requestOptions)}))}postJson(e,t,a={}){return p(this,void 0,void 0,(function*(){const n=JSON.stringify(t,null,2);a[c.Accept]=this._getExistingOrDefaultHeader(a,c.Accept,m.ApplicationJson);a[c.ContentType]=this._getExistingOrDefaultHeader(a,c.ContentType,m.ApplicationJson);const i=yield this.post(e,n,a);return this._processResponse(i,this.requestOptions)}))}putJson(e,t,a={}){return p(this,void 0,void 0,(function*(){const n=JSON.stringify(t,null,2);a[c.Accept]=this._getExistingOrDefaultHeader(a,c.Accept,m.ApplicationJson);a[c.ContentType]=this._getExistingOrDefaultHeader(a,c.ContentType,m.ApplicationJson);const i=yield this.put(e,n,a);return this._processResponse(i,this.requestOptions)}))}patchJson(e,t,a={}){return p(this,void 0,void 0,(function*(){const n=JSON.stringify(t,null,2);a[c.Accept]=this._getExistingOrDefaultHeader(a,c.Accept,m.ApplicationJson);a[c.ContentType]=this._getExistingOrDefaultHeader(a,c.ContentType,m.ApplicationJson);const i=yield this.patch(e,n,a);return this._processResponse(i,this.requestOptions)}))}request(e,t,a,n){return p(this,void 0,void 0,(function*(){if(this._disposed){throw new Error("Client has already been disposed.")}const i=new URL(t);let r=this._prepareRequest(e,i,n);const p=this._allowRetries&&h.includes(e)?this._maxRetries+1:1;let d=0;let s;do{s=yield this.requestRaw(r,a);if(s&&s.message&&s.message.statusCode===u.Unauthorized){let e;for(const t of this.handlers){if(t.canHandleAuthentication(s)){e=t;break}}if(e){return e.handleAuthentication(this,r,a)}else{return s}}let t=this._maxRedirects;while(s.message.statusCode&&f.includes(s.message.statusCode)&&this._allowRedirects&&t>0){const p=s.message.headers["location"];if(!p){break}const d=new URL(p);if(i.protocol==="https:"&&i.protocol!==d.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}yield s.readBody();if(d.hostname!==i.hostname){for(const e in n){if(e.toLowerCase()==="authorization"){delete n[e]}}}r=this._prepareRequest(e,d,n);s=yield this.requestRaw(r,a);t--}if(!s.message.statusCode||!v.includes(s.message.statusCode)){return s}d+=1;if(d<p){yield s.readBody();yield this._performExponentialBackoff(d)}}while(d<p);return s}))}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,t){return p(this,void 0,void 0,(function*(){return new Promise(((a,n)=>{function callbackForResult(e,t){if(e){n(e)}else if(!t){n(new Error("Unknown error"))}else{a(t)}}this.requestRawWithCallback(e,t,callbackForResult)}))}))}requestRawWithCallback(e,t,a){if(typeof t==="string"){if(!e.options.headers){e.options.headers={}}e.options.headers["Content-Length"]=Buffer.byteLength(t,"utf8")}let n=false;function handleResult(e,t){if(!n){n=true;a(e,t)}}const i=e.httpModule.request(e.options,(e=>{const t=new HttpClientResponse(e);handleResult(undefined,t)}));let r;i.on("socket",(e=>{r=e}));i.setTimeout(this._socketTimeout||3*6e4,(()=>{if(r){r.end()}handleResult(new Error(`Request timeout: ${e.options.path}`))}));i.on("error",(function(e){handleResult(e)}));if(t&&typeof t==="string"){i.write(t,"utf8")}if(t&&typeof t!=="string"){t.on("close",(function(){i.end()}));t.pipe(i)}else{i.end()}}getAgent(e){const t=new URL(e);return this._getAgent(t)}_prepareRequest(e,t,a){const n={};n.parsedUrl=t;const i=n.parsedUrl.protocol==="https:";n.httpModule=i?s:d;const r=i?443:80;n.options={};n.options.host=n.parsedUrl.hostname;n.options.port=n.parsedUrl.port?parseInt(n.parsedUrl.port):r;n.options.path=(n.parsedUrl.pathname||"")+(n.parsedUrl.search||"");n.options.method=e;n.options.headers=this._mergeHeaders(a);if(this.userAgent!=null){n.options.headers["user-agent"]=this.userAgent}n.options.agent=this._getAgent(n.parsedUrl);if(this.handlers){for(const e of this.handlers){e.prepareRequest(n.options)}}return n}_mergeHeaders(e){if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},lowercaseKeys(this.requestOptions.headers),lowercaseKeys(e||{}))}return lowercaseKeys(e||{})}_getExistingOrDefaultHeader(e,t,a){let n;if(this.requestOptions&&this.requestOptions.headers){n=lowercaseKeys(this.requestOptions.headers)[t]}return e[t]||n||a}_getAgent(e){let t;const a=o.getProxyUrl(e);const n=a&&a.hostname;if(this._keepAlive&&n){t=this._proxyAgent}if(this._keepAlive&&!n){t=this._agent}if(t){return t}const i=e.protocol==="https:";let r=100;if(this.requestOptions){r=this.requestOptions.maxSockets||d.globalAgent.maxSockets}if(a&&a.hostname){const e={maxSockets:r,keepAlive:this._keepAlive,proxy:Object.assign(Object.assign({},(a.username||a.password)&&{proxyAuth:`${a.username}:${a.password}`}),{host:a.hostname,port:a.port})};let n;const p=a.protocol==="https:";if(i){n=p?l.httpsOverHttps:l.httpsOverHttp}else{n=p?l.httpOverHttps:l.httpOverHttp}t=n(e);this._proxyAgent=t}if(this._keepAlive&&!t){const e={keepAlive:this._keepAlive,maxSockets:r};t=i?new s.Agent(e):new d.Agent(e);this._agent=t}if(!t){t=i?s.globalAgent:d.globalAgent}if(i&&this._ignoreSslError){t.options=Object.assign(t.options||{},{rejectUnauthorized:false})}return t}_performExponentialBackoff(e){return p(this,void 0,void 0,(function*(){e=Math.min(y,e);const t=T*Math.pow(2,e);return new Promise((e=>setTimeout((()=>e()),t)))}))}_processResponse(e,t){return p(this,void 0,void 0,(function*(){return new Promise(((a,n)=>p(this,void 0,void 0,(function*(){const i=e.message.statusCode||0;const r={statusCode:i,result:null,headers:{}};if(i===u.NotFound){a(r)}function dateTimeDeserializer(e,t){if(typeof t==="string"){const e=new Date(t);if(!isNaN(e.valueOf())){return e}}return t}let p;let d;try{d=yield e.readBody();if(d&&d.length>0){if(t&&t.deserializeDates){p=JSON.parse(d,dateTimeDeserializer)}else{p=JSON.parse(d)}r.result=p}r.headers=e.message.headers}catch(e){}if(i>299){let e;if(p&&p.message){e=p.message}else if(d&&d.length>0){e=d}else{e=`Failed request: (${i})`}const t=new HttpClientError(e,i);t.result=r.result;n(t)}else{a(r)}}))))}))}}t.HttpClient=HttpClient;const lowercaseKeys=e=>Object.keys(e).reduce(((t,a)=>(t[a.toLowerCase()]=e[a],t)),{})},1116:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.checkBypass=t.getProxyUrl=void 0;function getProxyUrl(e){const t=e.protocol==="https:";if(checkBypass(e)){return undefined}const a=(()=>{if(t){return process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{return process.env["http_proxy"]||process.env["HTTP_PROXY"]}})();if(a){return new URL(a)}else{return undefined}}t.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}const t=e.hostname;if(isLoopbackAddress(t)){return true}const a=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!a){return false}let n;if(e.port){n=Number(e.port)}else if(e.protocol==="http:"){n=80}else if(e.protocol==="https:"){n=443}const i=[e.hostname.toUpperCase()];if(typeof n==="number"){i.push(`${i[0]}:${n}`)}for(const e of a.split(",").map((e=>e.trim().toUpperCase())).filter((e=>e))){if(e==="*"||i.some((t=>t===e||t.endsWith(`.${e}`)||e.startsWith(".")&&t.endsWith(`${e}`)))){return true}}return false}t.checkBypass=checkBypass;function isLoopbackAddress(e){const t=e.toLowerCase();return t==="localhost"||t.startsWith("127.")||t.startsWith("[::1]")||t.startsWith("[0:0:0:0:0:0:0:1]")}},1248:(e,t,a)=>{const n=a(187);const i=n.default||n;const fetch=function(e,t){if(/^\/\//.test(e)){e="https:"+e}return i.call(this,e,t)};fetch.ponyfill=true;e.exports=t=fetch;t.fetch=fetch;t.Headers=n.Headers;t.Request=n.Request;t.Response=n.Response;t["default"]=fetch},3919:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.GraphQLError=void 0;t.formatError=formatError;t.printError=printError;var n=a(1589);var i=a(4068);var r=a(3993);function toNormalizedOptions(e){const t=e[0];if(t==null||"kind"in t||"length"in t){return{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}}return t}class GraphQLError extends Error{constructor(e,...t){var a,r,p;const{nodes:d,source:s,positions:o,path:l,originalError:u,extensions:c}=toNormalizedOptions(t);super(e);this.name="GraphQLError";this.path=l!==null&&l!==void 0?l:undefined;this.originalError=u!==null&&u!==void 0?u:undefined;this.nodes=undefinedIfEmpty(Array.isArray(d)?d:d?[d]:undefined);const m=undefinedIfEmpty((a=this.nodes)===null||a===void 0?void 0:a.map((e=>e.loc)).filter((e=>e!=null)));this.source=s!==null&&s!==void 0?s:m===null||m===void 0?void 0:(r=m[0])===null||r===void 0?void 0:r.source;this.positions=o!==null&&o!==void 0?o:m===null||m===void 0?void 0:m.map((e=>e.start));this.locations=o&&s?o.map((e=>(0,i.getLocation)(s,e))):m===null||m===void 0?void 0:m.map((e=>(0,i.getLocation)(e.source,e.start)));const f=(0,n.isObjectLike)(u===null||u===void 0?void 0:u.extensions)?u===null||u===void 0?void 0:u.extensions:undefined;this.extensions=(p=c!==null&&c!==void 0?c:f)!==null&&p!==void 0?p:Object.create(null);Object.defineProperties(this,{message:{writable:true,enumerable:true},name:{enumerable:false},nodes:{enumerable:false},source:{enumerable:false},positions:{enumerable:false},originalError:{enumerable:false}});if(u!==null&&u!==void 0&&u.stack){Object.defineProperty(this,"stack",{value:u.stack,writable:true,configurable:true})}else if(Error.captureStackTrace){Error.captureStackTrace(this,GraphQLError)}else{Object.defineProperty(this,"stack",{value:Error().stack,writable:true,configurable:true})}}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let e=this.message;if(this.nodes){for(const t of this.nodes){if(t.loc){e+="\n\n"+(0,r.printLocation)(t.loc)}}}else if(this.source&&this.locations){for(const t of this.locations){e+="\n\n"+(0,r.printSourceLocation)(this.source,t)}}return e}toJSON(){const e={message:this.message};if(this.locations!=null){e.locations=this.locations}if(this.path!=null){e.path=this.path}if(this.extensions!=null&&Object.keys(this.extensions).length>0){e.extensions=this.extensions}return e}}t.GraphQLError=GraphQLError;function undefinedIfEmpty(e){return e===undefined||e.length===0?undefined:e}function printError(e){return e.toString()}function formatError(e){return e.toJSON()}},5854:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"GraphQLError",{enumerable:true,get:function(){return n.GraphQLError}});Object.defineProperty(t,"formatError",{enumerable:true,get:function(){return n.formatError}});Object.defineProperty(t,"locatedError",{enumerable:true,get:function(){return r.locatedError}});Object.defineProperty(t,"printError",{enumerable:true,get:function(){return n.printError}});Object.defineProperty(t,"syntaxError",{enumerable:true,get:function(){return i.syntaxError}});var n=a(3919);var i=a(183);var r=a(8350)},8350:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.locatedError=locatedError;var n=a(8084);var i=a(3919);function locatedError(e,t,a){var r;const p=(0,n.toError)(e);if(isLocatedGraphQLError(p)){return p}return new i.GraphQLError(p.message,{nodes:(r=p.nodes)!==null&&r!==void 0?r:t,source:p.source,positions:p.positions,path:a,originalError:p})}function isLocatedGraphQLError(e){return Array.isArray(e.path)}},183:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.syntaxError=syntaxError;var n=a(3919);function syntaxError(e,t,a){return new n.GraphQLError(`Syntax Error: ${a}`,{source:e,positions:[t]})}},2396:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.collectFields=collectFields;t.collectSubfields=collectSubfields;var n=a(5223);var i=a(2739);var r=a(1426);var p=a(9944);var d=a(1173);function collectFields(e,t,a,n,i){const r=new Map;collectFieldsImpl(e,t,a,n,i,r,new Set);return r}function collectSubfields(e,t,a,n,i){const r=new Map;const p=new Set;for(const d of i){if(d.selectionSet){collectFieldsImpl(e,t,a,n,d.selectionSet,r,p)}}return r}function collectFieldsImpl(e,t,a,i,r,p,d){for(const s of r.selections){switch(s.kind){case n.Kind.FIELD:{if(!shouldIncludeNode(a,s)){continue}const e=getFieldEntryKey(s);const t=p.get(e);if(t!==undefined){t.push(s)}else{p.set(e,[s])}break}case n.Kind.INLINE_FRAGMENT:{if(!shouldIncludeNode(a,s)||!doesFragmentConditionMatch(e,s,i)){continue}collectFieldsImpl(e,t,a,i,s.selectionSet,p,d);break}case n.Kind.FRAGMENT_SPREAD:{const n=s.name.value;if(d.has(n)||!shouldIncludeNode(a,s)){continue}d.add(n);const r=t[n];if(!r||!doesFragmentConditionMatch(e,r,i)){continue}collectFieldsImpl(e,t,a,i,r.selectionSet,p,d);break}}}}function shouldIncludeNode(e,t){const a=(0,d.getDirectiveValues)(r.GraphQLSkipDirective,t,e);if((a===null||a===void 0?void 0:a.if)===true){return false}const n=(0,d.getDirectiveValues)(r.GraphQLIncludeDirective,t,e);if((n===null||n===void 0?void 0:n.if)===false){return false}return true}function doesFragmentConditionMatch(e,t,a){const n=t.typeCondition;if(!n){return true}const r=(0,p.typeFromAST)(e,n);if(r===a){return true}if((0,i.isAbstractType)(r)){return e.isSubType(r,a)}return false}function getFieldEntryKey(e){return e.alias?e.alias.value:e.name.value}},2921:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.assertValidExecutionArguments=assertValidExecutionArguments;t.buildExecutionContext=buildExecutionContext;t.buildResolveInfo=buildResolveInfo;t.defaultTypeResolver=t.defaultFieldResolver=void 0;t.execute=execute;t.executeSync=executeSync;t.getFieldDef=getFieldDef;var n=a(3387);var i=a(6767);var r=a(8479);var p=a(7405);var d=a(1589);var s=a(6527);var o=a(5090);var l=a(3380);var u=a(4301);var c=a(5357);var m=a(3919);var f=a(8350);var v=a(9622);var h=a(5223);var y=a(2739);var T=a(6040);var b=a(3622);var g=a(2396);var N=a(1173);const _=(0,o.memoize3)(((e,t,a)=>(0,g.collectSubfields)(e.schema,e.fragments,e.variableValues,t,a)));function execute(e){arguments.length<2||(0,n.devAssert)(false,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:t,document:a,variableValues:i,rootValue:r}=e;assertValidExecutionArguments(t,a,i);const p=buildExecutionContext(e);if(!("schema"in p)){return{errors:p}}try{const{operation:e}=p;const t=executeOperation(p,e,r);if((0,s.isPromise)(t)){return t.then((e=>buildResponse(e,p.errors)),(e=>{p.errors.push(e);return buildResponse(null,p.errors)}))}return buildResponse(t,p.errors)}catch(e){p.errors.push(e);return buildResponse(null,p.errors)}}function executeSync(e){const t=execute(e);if((0,s.isPromise)(t)){throw new Error("GraphQL execution failed to complete synchronously.")}return t}function buildResponse(e,t){return t.length===0?{data:e}:{errors:t,data:e}}function assertValidExecutionArguments(e,t,a){t||(0,n.devAssert)(false,"Must provide document.");(0,b.assertValidSchema)(e);a==null||(0,d.isObjectLike)(a)||(0,n.devAssert)(false,"Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.")}function buildExecutionContext(e){var t,a;const{schema:n,document:i,rootValue:r,contextValue:p,variableValues:d,operationName:s,fieldResolver:o,typeResolver:l,subscribeFieldResolver:u}=e;let c;const f=Object.create(null);for(const e of i.definitions){switch(e.kind){case h.Kind.OPERATION_DEFINITION:if(s==null){if(c!==undefined){return[new m.GraphQLError("Must provide operation name if query contains multiple operations.")]}c=e}else if(((t=e.name)===null||t===void 0?void 0:t.value)===s){c=e}break;case h.Kind.FRAGMENT_DEFINITION:f[e.name.value]=e;break;default:}}if(!c){if(s!=null){return[new m.GraphQLError(`Unknown operation named "${s}".`)]}return[new m.GraphQLError("Must provide an operation.")]}const v=(a=c.variableDefinitions)!==null&&a!==void 0?a:[];const y=(0,N.getVariableValues)(n,v,d!==null&&d!==void 0?d:{},{maxErrors:50});if(y.errors){return y.errors}return{schema:n,fragments:f,rootValue:r,contextValue:p,operation:c,variableValues:y.coerced,fieldResolver:o!==null&&o!==void 0?o:defaultFieldResolver,typeResolver:l!==null&&l!==void 0?l:defaultTypeResolver,subscribeFieldResolver:u!==null&&u!==void 0?u:defaultFieldResolver,errors:[]}}function executeOperation(e,t,a){const n=e.schema.getRootType(t.operation);if(n==null){throw new m.GraphQLError(`Schema is not configured to execute ${t.operation} operation.`,{nodes:t})}const i=(0,g.collectFields)(e.schema,e.fragments,e.variableValues,n,t.selectionSet);const r=undefined;switch(t.operation){case v.OperationTypeNode.QUERY:return executeFields(e,n,a,r,i);case v.OperationTypeNode.MUTATION:return executeFieldsSerially(e,n,a,r,i);case v.OperationTypeNode.SUBSCRIPTION:return executeFields(e,n,a,r,i)}}function executeFieldsSerially(e,t,a,n,i){return(0,c.promiseReduce)(i.entries(),((i,[r,p])=>{const d=(0,l.addPath)(n,r,t.name);const o=executeField(e,t,a,p,d);if(o===undefined){return i}if((0,s.isPromise)(o)){return o.then((e=>{i[r]=e;return i}))}i[r]=o;return i}),Object.create(null))}function executeFields(e,t,a,n,i){const r=Object.create(null);let p=false;try{for(const[d,o]of i.entries()){const i=(0,l.addPath)(n,d,t.name);const u=executeField(e,t,a,o,i);if(u!==undefined){r[d]=u;if((0,s.isPromise)(u)){p=true}}}}catch(e){if(p){return(0,u.promiseForObject)(r).finally((()=>{throw e}))}throw e}if(!p){return r}return(0,u.promiseForObject)(r)}function executeField(e,t,a,n,i){var r;const p=getFieldDef(e.schema,t,n[0]);if(!p){return}const d=p.type;const o=(r=p.resolve)!==null&&r!==void 0?r:e.fieldResolver;const u=buildResolveInfo(e,p,n,t,i);try{const t=(0,N.getArgumentValues)(p,n[0],e.variableValues);const r=e.contextValue;const c=o(a,t,r,u);let m;if((0,s.isPromise)(c)){m=c.then((t=>completeValue(e,d,n,u,i,t)))}else{m=completeValue(e,d,n,u,i,c)}if((0,s.isPromise)(m)){return m.then(undefined,(t=>{const a=(0,f.locatedError)(t,n,(0,l.pathToArray)(i));return handleFieldError(a,d,e)}))}return m}catch(t){const a=(0,f.locatedError)(t,n,(0,l.pathToArray)(i));return handleFieldError(a,d,e)}}function buildResolveInfo(e,t,a,n,i){return{fieldName:t.name,fieldNodes:a,returnType:t.type,parentType:n,path:i,schema:e.schema,fragments:e.fragments,rootValue:e.rootValue,operation:e.operation,variableValues:e.variableValues}}function handleFieldError(e,t,a){if((0,y.isNonNullType)(t)){throw e}a.errors.push(e);return null}function completeValue(e,t,a,n,p,d){if(d instanceof Error){throw d}if((0,y.isNonNullType)(t)){const i=completeValue(e,t.ofType,a,n,p,d);if(i===null){throw new Error(`Cannot return null for non-nullable field ${n.parentType.name}.${n.fieldName}.`)}return i}if(d==null){return null}if((0,y.isListType)(t)){return completeListValue(e,t,a,n,p,d)}if((0,y.isLeafType)(t)){return completeLeafValue(t,d)}if((0,y.isAbstractType)(t)){return completeAbstractValue(e,t,a,n,p,d)}if((0,y.isObjectType)(t)){return completeObjectValue(e,t,a,n,p,d)}false||(0,r.invariant)(false,"Cannot complete value of unexpected output type: "+(0,i.inspect)(t))}function completeListValue(e,t,a,n,i,r){if(!(0,p.isIterableObject)(r)){throw new m.GraphQLError(`Expected Iterable, but did not find one for field "${n.parentType.name}.${n.fieldName}".`)}const d=t.ofType;let o=false;const u=Array.from(r,((t,r)=>{const p=(0,l.addPath)(i,r,undefined);try{let i;if((0,s.isPromise)(t)){i=t.then((t=>completeValue(e,d,a,n,p,t)))}else{i=completeValue(e,d,a,n,p,t)}if((0,s.isPromise)(i)){o=true;return i.then(undefined,(t=>{const n=(0,f.locatedError)(t,a,(0,l.pathToArray)(p));return handleFieldError(n,d,e)}))}return i}catch(t){const n=(0,f.locatedError)(t,a,(0,l.pathToArray)(p));return handleFieldError(n,d,e)}}));return o?Promise.all(u):u}function completeLeafValue(e,t){const a=e.serialize(t);if(a==null){throw new Error(`Expected \`${(0,i.inspect)(e)}.serialize(${(0,i.inspect)(t)})\` to `+`return non-nullable value, returned: ${(0,i.inspect)(a)}`)}return a}function completeAbstractValue(e,t,a,n,i,r){var p;const d=(p=t.resolveType)!==null&&p!==void 0?p:e.typeResolver;const o=e.contextValue;const l=d(r,o,n,t);if((0,s.isPromise)(l)){return l.then((p=>completeObjectValue(e,ensureValidRuntimeType(p,e,t,a,n,r),a,n,i,r)))}return completeObjectValue(e,ensureValidRuntimeType(l,e,t,a,n,r),a,n,i,r)}function ensureValidRuntimeType(e,t,a,n,r,p){if(e==null){throw new m.GraphQLError(`Abstract type "${a.name}" must resolve to an Object type at runtime for field "${r.parentType.name}.${r.fieldName}". Either the "${a.name}" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.`,n)}if((0,y.isObjectType)(e)){throw new m.GraphQLError("Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.")}if(typeof e!=="string"){throw new m.GraphQLError(`Abstract type "${a.name}" must resolve to an Object type at runtime for field "${r.parentType.name}.${r.fieldName}" with `+`value ${(0,i.inspect)(p)}, received "${(0,i.inspect)(e)}".`)}const d=t.schema.getType(e);if(d==null){throw new m.GraphQLError(`Abstract type "${a.name}" was resolved to a type "${e}" that does not exist inside the schema.`,{nodes:n})}if(!(0,y.isObjectType)(d)){throw new m.GraphQLError(`Abstract type "${a.name}" was resolved to a non-object type "${e}".`,{nodes:n})}if(!t.schema.isSubType(a,d)){throw new m.GraphQLError(`Runtime Object type "${d.name}" is not a possible type for "${a.name}".`,{nodes:n})}return d}function completeObjectValue(e,t,a,n,i,r){const p=_(e,t,a);if(t.isTypeOf){const d=t.isTypeOf(r,e.contextValue,n);if((0,s.isPromise)(d)){return d.then((n=>{if(!n){throw invalidReturnTypeError(t,r,a)}return executeFields(e,t,r,i,p)}))}if(!d){throw invalidReturnTypeError(t,r,a)}}return executeFields(e,t,r,i,p)}function invalidReturnTypeError(e,t,a){return new m.GraphQLError(`Expected value of type "${e.name}" but got: ${(0,i.inspect)(t)}.`,{nodes:a})}const defaultTypeResolver=function(e,t,a,n){if((0,d.isObjectLike)(e)&&typeof e.__typename==="string"){return e.__typename}const i=a.schema.getPossibleTypes(n);const r=[];for(let n=0;n<i.length;n++){const p=i[n];if(p.isTypeOf){const i=p.isTypeOf(e,t,a);if((0,s.isPromise)(i)){r[n]=i}else if(i){return p.name}}}if(r.length){return Promise.all(r).then((e=>{for(let t=0;t<e.length;t++){if(e[t]){return i[t].name}}}))}};t.defaultTypeResolver=defaultTypeResolver;const defaultFieldResolver=function(e,t,a,n){if((0,d.isObjectLike)(e)||typeof e==="function"){const i=e[n.fieldName];if(typeof i==="function"){return e[n.fieldName](t,a,n)}return i}};t.defaultFieldResolver=defaultFieldResolver;function getFieldDef(e,t,a){const n=a.name.value;if(n===T.SchemaMetaFieldDef.name&&e.getQueryType()===t){return T.SchemaMetaFieldDef}else if(n===T.TypeMetaFieldDef.name&&e.getQueryType()===t){return T.TypeMetaFieldDef}else if(n===T.TypeNameMetaFieldDef.name){return T.TypeNameMetaFieldDef}return t.getFields()[n]}},6467:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"createSourceEventStream",{enumerable:true,get:function(){return r.createSourceEventStream}});Object.defineProperty(t,"defaultFieldResolver",{enumerable:true,get:function(){return i.defaultFieldResolver}});Object.defineProperty(t,"defaultTypeResolver",{enumerable:true,get:function(){return i.defaultTypeResolver}});Object.defineProperty(t,"execute",{enumerable:true,get:function(){return i.execute}});Object.defineProperty(t,"executeSync",{enumerable:true,get:function(){return i.executeSync}});Object.defineProperty(t,"getArgumentValues",{enumerable:true,get:function(){return p.getArgumentValues}});Object.defineProperty(t,"getDirectiveValues",{enumerable:true,get:function(){return p.getDirectiveValues}});Object.defineProperty(t,"getVariableValues",{enumerable:true,get:function(){return p.getVariableValues}});Object.defineProperty(t,"responsePathAsArray",{enumerable:true,get:function(){return n.pathToArray}});Object.defineProperty(t,"subscribe",{enumerable:true,get:function(){return r.subscribe}});var n=a(3380);var i=a(2921);var r=a(7322);var p=a(1173)},4234:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.mapAsyncIterator=mapAsyncIterator;function mapAsyncIterator(e,t){const a=e[Symbol.asyncIterator]();async function mapResult(e){if(e.done){return e}try{return{value:await t(e.value),done:false}}catch(e){if(typeof a.return==="function"){try{await a.return()}catch(e){}}throw e}}return{async next(){return mapResult(await a.next())},async return(){return typeof a.return==="function"?mapResult(await a.return()):{value:undefined,done:true}},async throw(e){if(typeof a.throw==="function"){return mapResult(await a.throw(e))}throw e},[Symbol.asyncIterator](){return this}}}},7322:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.createSourceEventStream=createSourceEventStream;t.subscribe=subscribe;var n=a(3387);var i=a(6767);var r=a(4443);var p=a(3380);var d=a(3919);var s=a(8350);var o=a(2396);var l=a(2921);var u=a(4234);var c=a(1173);async function subscribe(e){arguments.length<2||(0,n.devAssert)(false,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const t=await createSourceEventStream(e);if(!(0,r.isAsyncIterable)(t)){return t}const mapSourceToResponse=t=>(0,l.execute)({...e,rootValue:t});return(0,u.mapAsyncIterator)(t,mapSourceToResponse)}function toNormalizedArgs(e){const t=e[0];if(t&&"document"in t){return t}return{schema:t,document:e[1],rootValue:e[2],contextValue:e[3],variableValues:e[4],operationName:e[5],subscribeFieldResolver:e[6]}}async function createSourceEventStream(...e){const t=toNormalizedArgs(e);const{schema:a,document:n,variableValues:p}=t;(0,l.assertValidExecutionArguments)(a,n,p);const s=(0,l.buildExecutionContext)(t);if(!("schema"in s)){return{errors:s}}try{const e=await executeSubscription(s);if(!(0,r.isAsyncIterable)(e)){throw new Error("Subscription field must return Async Iterable. "+`Received: ${(0,i.inspect)(e)}.`)}return e}catch(e){if(e instanceof d.GraphQLError){return{errors:[e]}}throw e}}async function executeSubscription(e){const{schema:t,fragments:a,operation:n,variableValues:i,rootValue:r}=e;const u=t.getSubscriptionType();if(u==null){throw new d.GraphQLError("Schema is not configured to execute subscription operation.",{nodes:n})}const m=(0,o.collectFields)(t,a,i,u,n.selectionSet);const[f,v]=[...m.entries()][0];const h=(0,l.getFieldDef)(t,u,v[0]);if(!h){const e=v[0].name.value;throw new d.GraphQLError(`The subscription field "${e}" is not defined.`,{nodes:v})}const y=(0,p.addPath)(undefined,f,u.name);const T=(0,l.buildResolveInfo)(e,h,v,u,y);try{var b;const t=(0,c.getArgumentValues)(h,v[0],i);const a=e.contextValue;const n=(b=h.subscribe)!==null&&b!==void 0?b:e.subscribeFieldResolver;const p=await n(r,t,a,T);if(p instanceof Error){throw p}return p}catch(e){throw(0,s.locatedError)(e,v,(0,p.pathToArray)(y))}}},1173:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getArgumentValues=getArgumentValues;t.getDirectiveValues=getDirectiveValues;t.getVariableValues=getVariableValues;var n=a(6767);var i=a(52);var r=a(7468);var p=a(3919);var d=a(5223);var s=a(4359);var o=a(2739);var l=a(3326);var u=a(9944);var c=a(5394);function getVariableValues(e,t,a,n){const i=[];const r=n===null||n===void 0?void 0:n.maxErrors;try{const n=coerceVariableValues(e,t,a,(e=>{if(r!=null&&i.length>=r){throw new p.GraphQLError("Too many errors processing variables, error limit reached. Execution aborted.")}i.push(e)}));if(i.length===0){return{coerced:n}}}catch(e){i.push(e)}return{errors:i}}function coerceVariableValues(e,t,a,i){const d={};for(const m of t){const t=m.variable.name.value;const f=(0,u.typeFromAST)(e,m.type);if(!(0,o.isInputType)(f)){const e=(0,s.print)(m.type);i(new p.GraphQLError(`Variable "$${t}" expected value of type "${e}" which cannot be used as an input type.`,{nodes:m.type}));continue}if(!hasOwnProperty(a,t)){if(m.defaultValue){d[t]=(0,c.valueFromAST)(m.defaultValue,f)}else if((0,o.isNonNullType)(f)){const e=(0,n.inspect)(f);i(new p.GraphQLError(`Variable "$${t}" of required type "${e}" was not provided.`,{nodes:m}))}continue}const v=a[t];if(v===null&&(0,o.isNonNullType)(f)){const e=(0,n.inspect)(f);i(new p.GraphQLError(`Variable "$${t}" of non-null type "${e}" must not be null.`,{nodes:m}));continue}d[t]=(0,l.coerceInputValue)(v,f,((e,a,d)=>{let s=`Variable "$${t}" got invalid value `+(0,n.inspect)(a);if(e.length>0){s+=` at "${t}${(0,r.printPathArray)(e)}"`}i(new p.GraphQLError(s+"; "+d.message,{nodes:m,originalError:d}))}))}return d}function getArgumentValues(e,t,a){var r;const l={};const u=(r=t.arguments)!==null&&r!==void 0?r:[];const m=(0,i.keyMap)(u,(e=>e.name.value));for(const i of e.args){const e=i.name;const r=i.type;const u=m[e];if(!u){if(i.defaultValue!==undefined){l[e]=i.defaultValue}else if((0,o.isNonNullType)(r)){throw new p.GraphQLError(`Argument "${e}" of required type "${(0,n.inspect)(r)}" `+"was not provided.",{nodes:t})}continue}const f=u.value;let v=f.kind===d.Kind.NULL;if(f.kind===d.Kind.VARIABLE){const t=f.name.value;if(a==null||!hasOwnProperty(a,t)){if(i.defaultValue!==undefined){l[e]=i.defaultValue}else if((0,o.isNonNullType)(r)){throw new p.GraphQLError(`Argument "${e}" of required type "${(0,n.inspect)(r)}" `+`was provided the variable "$${t}" which was not provided a runtime value.`,{nodes:f})}continue}v=a[t]==null}if(v&&(0,o.isNonNullType)(r)){throw new p.GraphQLError(`Argument "${e}" of non-null type "${(0,n.inspect)(r)}" `+"must not be null.",{nodes:f})}const h=(0,c.valueFromAST)(f,r,a);if(h===undefined){throw new p.GraphQLError(`Argument "${e}" has invalid value ${(0,s.print)(f)}.`,{nodes:f})}l[e]=h}return l}function getDirectiveValues(e,t,a){var n;const i=(n=t.directives)===null||n===void 0?void 0:n.find((t=>t.name.value===e.name));if(i){return getArgumentValues(e,i,a)}}function hasOwnProperty(e,t){return Object.prototype.hasOwnProperty.call(e,t)}},762:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.graphql=graphql;t.graphqlSync=graphqlSync;var n=a(3387);var i=a(6527);var r=a(6639);var p=a(3622);var d=a(8376);var s=a(2921);function graphql(e){return new Promise((t=>t(graphqlImpl(e))))}function graphqlSync(e){const t=graphqlImpl(e);if((0,i.isPromise)(t)){throw new Error("GraphQL execution failed to complete synchronously.")}return t}function graphqlImpl(e){arguments.length<2||(0,n.devAssert)(false,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:t,source:a,rootValue:i,contextValue:o,variableValues:l,operationName:u,fieldResolver:c,typeResolver:m}=e;const f=(0,p.validateSchema)(t);if(f.length>0){return{errors:f}}let v;try{v=(0,r.parse)(a)}catch(e){return{errors:[e]}}const h=(0,d.validate)(t,v);if(h.length>0){return{errors:h}}return(0,s.execute)({schema:t,document:v,rootValue:i,contextValue:o,variableValues:l,operationName:u,fieldResolver:c,typeResolver:m})}},1320:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"BREAK",{enumerable:true,get:function(){return p.BREAK}});Object.defineProperty(t,"BreakingChangeType",{enumerable:true,get:function(){return l.BreakingChangeType}});Object.defineProperty(t,"DEFAULT_DEPRECATION_REASON",{enumerable:true,get:function(){return r.DEFAULT_DEPRECATION_REASON}});Object.defineProperty(t,"DangerousChangeType",{enumerable:true,get:function(){return l.DangerousChangeType}});Object.defineProperty(t,"DirectiveLocation",{enumerable:true,get:function(){return p.DirectiveLocation}});Object.defineProperty(t,"ExecutableDefinitionsRule",{enumerable:true,get:function(){return s.ExecutableDefinitionsRule}});Object.defineProperty(t,"FieldsOnCorrectTypeRule",{enumerable:true,get:function(){return s.FieldsOnCorrectTypeRule}});Object.defineProperty(t,"FragmentsOnCompositeTypesRule",{enumerable:true,get:function(){return s.FragmentsOnCompositeTypesRule}});Object.defineProperty(t,"GRAPHQL_MAX_INT",{enumerable:true,get:function(){return r.GRAPHQL_MAX_INT}});Object.defineProperty(t,"GRAPHQL_MIN_INT",{enumerable:true,get:function(){return r.GRAPHQL_MIN_INT}});Object.defineProperty(t,"GraphQLBoolean",{enumerable:true,get:function(){return r.GraphQLBoolean}});Object.defineProperty(t,"GraphQLDeprecatedDirective",{enumerable:true,get:function(){return r.GraphQLDeprecatedDirective}});Object.defineProperty(t,"GraphQLDirective",{enumerable:true,get:function(){return r.GraphQLDirective}});Object.defineProperty(t,"GraphQLEnumType",{enumerable:true,get:function(){return r.GraphQLEnumType}});Object.defineProperty(t,"GraphQLError",{enumerable:true,get:function(){return o.GraphQLError}});Object.defineProperty(t,"GraphQLFloat",{enumerable:true,get:function(){return r.GraphQLFloat}});Object.defineProperty(t,"GraphQLID",{enumerable:true,get:function(){return r.GraphQLID}});Object.defineProperty(t,"GraphQLIncludeDirective",{enumerable:true,get:function(){return r.GraphQLIncludeDirective}});Object.defineProperty(t,"GraphQLInputObjectType",{enumerable:true,get:function(){return r.GraphQLInputObjectType}});Object.defineProperty(t,"GraphQLInt",{enumerable:true,get:function(){return r.GraphQLInt}});Object.defineProperty(t,"GraphQLInterfaceType",{enumerable:true,get:function(){return r.GraphQLInterfaceType}});Object.defineProperty(t,"GraphQLList",{enumerable:true,get:function(){return r.GraphQLList}});Object.defineProperty(t,"GraphQLNonNull",{enumerable:true,get:function(){return r.GraphQLNonNull}});Object.defineProperty(t,"GraphQLObjectType",{enumerable:true,get:function(){return r.GraphQLObjectType}});Object.defineProperty(t,"GraphQLScalarType",{enumerable:true,get:function(){return r.GraphQLScalarType}});Object.defineProperty(t,"GraphQLSchema",{enumerable:true,get:function(){return r.GraphQLSchema}});Object.defineProperty(t,"GraphQLSkipDirective",{enumerable:true,get:function(){return r.GraphQLSkipDirective}});Object.defineProperty(t,"GraphQLSpecifiedByDirective",{enumerable:true,get:function(){return r.GraphQLSpecifiedByDirective}});Object.defineProperty(t,"GraphQLString",{enumerable:true,get:function(){return r.GraphQLString}});Object.defineProperty(t,"GraphQLUnionType",{enumerable:true,get:function(){return r.GraphQLUnionType}});Object.defineProperty(t,"Kind",{enumerable:true,get:function(){return p.Kind}});Object.defineProperty(t,"KnownArgumentNamesRule",{enumerable:true,get:function(){return s.KnownArgumentNamesRule}});Object.defineProperty(t,"KnownDirectivesRule",{enumerable:true,get:function(){return s.KnownDirectivesRule}});Object.defineProperty(t,"KnownFragmentNamesRule",{enumerable:true,get:function(){return s.KnownFragmentNamesRule}});Object.defineProperty(t,"KnownTypeNamesRule",{enumerable:true,get:function(){return s.KnownTypeNamesRule}});Object.defineProperty(t,"Lexer",{enumerable:true,get:function(){return p.Lexer}});Object.defineProperty(t,"Location",{enumerable:true,get:function(){return p.Location}});Object.defineProperty(t,"LoneAnonymousOperationRule",{enumerable:true,get:function(){return s.LoneAnonymousOperationRule}});Object.defineProperty(t,"LoneSchemaDefinitionRule",{enumerable:true,get:function(){return s.LoneSchemaDefinitionRule}});Object.defineProperty(t,"NoDeprecatedCustomRule",{enumerable:true,get:function(){return s.NoDeprecatedCustomRule}});Object.defineProperty(t,"NoFragmentCyclesRule",{enumerable:true,get:function(){return s.NoFragmentCyclesRule}});Object.defineProperty(t,"NoSchemaIntrospectionCustomRule",{enumerable:true,get:function(){return s.NoSchemaIntrospectionCustomRule}});Object.defineProperty(t,"NoUndefinedVariablesRule",{enumerable:true,get:function(){return s.NoUndefinedVariablesRule}});Object.defineProperty(t,"NoUnusedFragmentsRule",{enumerable:true,get:function(){return s.NoUnusedFragmentsRule}});Object.defineProperty(t,"NoUnusedVariablesRule",{enumerable:true,get:function(){return s.NoUnusedVariablesRule}});Object.defineProperty(t,"OperationTypeNode",{enumerable:true,get:function(){return p.OperationTypeNode}});Object.defineProperty(t,"OverlappingFieldsCanBeMergedRule",{enumerable:true,get:function(){return s.OverlappingFieldsCanBeMergedRule}});Object.defineProperty(t,"PossibleFragmentSpreadsRule",{enumerable:true,get:function(){return s.PossibleFragmentSpreadsRule}});Object.defineProperty(t,"PossibleTypeExtensionsRule",{enumerable:true,get:function(){return s.PossibleTypeExtensionsRule}});Object.defineProperty(t,"ProvidedRequiredArgumentsRule",{enumerable:true,get:function(){return s.ProvidedRequiredArgumentsRule}});Object.defineProperty(t,"ScalarLeafsRule",{enumerable:true,get:function(){return s.ScalarLeafsRule}});Object.defineProperty(t,"SchemaMetaFieldDef",{enumerable:true,get:function(){return r.SchemaMetaFieldDef}});Object.defineProperty(t,"SingleFieldSubscriptionsRule",{enumerable:true,get:function(){return s.SingleFieldSubscriptionsRule}});Object.defineProperty(t,"Source",{enumerable:true,get:function(){return p.Source}});Object.defineProperty(t,"Token",{enumerable:true,get:function(){return p.Token}});Object.defineProperty(t,"TokenKind",{enumerable:true,get:function(){return p.TokenKind}});Object.defineProperty(t,"TypeInfo",{enumerable:true,get:function(){return l.TypeInfo}});Object.defineProperty(t,"TypeKind",{enumerable:true,get:function(){return r.TypeKind}});Object.defineProperty(t,"TypeMetaFieldDef",{enumerable:true,get:function(){return r.TypeMetaFieldDef}});Object.defineProperty(t,"TypeNameMetaFieldDef",{enumerable:true,get:function(){return r.TypeNameMetaFieldDef}});Object.defineProperty(t,"UniqueArgumentDefinitionNamesRule",{enumerable:true,get:function(){return s.UniqueArgumentDefinitionNamesRule}});Object.defineProperty(t,"UniqueArgumentNamesRule",{enumerable:true,get:function(){return s.UniqueArgumentNamesRule}});Object.defineProperty(t,"UniqueDirectiveNamesRule",{enumerable:true,get:function(){return s.UniqueDirectiveNamesRule}});Object.defineProperty(t,"UniqueDirectivesPerLocationRule",{enumerable:true,get:function(){return s.UniqueDirectivesPerLocationRule}});Object.defineProperty(t,"UniqueEnumValueNamesRule",{enumerable:true,get:function(){return s.UniqueEnumValueNamesRule}});Object.defineProperty(t,"UniqueFieldDefinitionNamesRule",{enumerable:true,get:function(){return s.UniqueFieldDefinitionNamesRule}});Object.defineProperty(t,"UniqueFragmentNamesRule",{enumerable:true,get:function(){return s.UniqueFragmentNamesRule}});Object.defineProperty(t,"UniqueInputFieldNamesRule",{enumerable:true,get:function(){return s.UniqueInputFieldNamesRule}});Object.defineProperty(t,"UniqueOperationNamesRule",{enumerable:true,get:function(){return s.UniqueOperationNamesRule}});Object.defineProperty(t,"UniqueOperationTypesRule",{enumerable:true,get:function(){return s.UniqueOperationTypesRule}});Object.defineProperty(t,"UniqueTypeNamesRule",{enumerable:true,get:function(){return s.UniqueTypeNamesRule}});Object.defineProperty(t,"UniqueVariableNamesRule",{enumerable:true,get:function(){return s.UniqueVariableNamesRule}});Object.defineProperty(t,"ValidationContext",{enumerable:true,get:function(){return s.ValidationContext}});Object.defineProperty(t,"ValuesOfCorrectTypeRule",{enumerable:true,get:function(){return s.ValuesOfCorrectTypeRule}});Object.defineProperty(t,"VariablesAreInputTypesRule",{enumerable:true,get:function(){return s.VariablesAreInputTypesRule}});Object.defineProperty(t,"VariablesInAllowedPositionRule",{enumerable:true,get:function(){return s.VariablesInAllowedPositionRule}});Object.defineProperty(t,"__Directive",{enumerable:true,get:function(){return r.__Directive}});Object.defineProperty(t,"__DirectiveLocation",{enumerable:true,get:function(){return r.__DirectiveLocation}});Object.defineProperty(t,"__EnumValue",{enumerable:true,get:function(){return r.__EnumValue}});Object.defineProperty(t,"__Field",{enumerable:true,get:function(){return r.__Field}});Object.defineProperty(t,"__InputValue",{enumerable:true,get:function(){return r.__InputValue}});Object.defineProperty(t,"__Schema",{enumerable:true,get:function(){return r.__Schema}});Object.defineProperty(t,"__Type",{enumerable:true,get:function(){return r.__Type}});Object.defineProperty(t,"__TypeKind",{enumerable:true,get:function(){return r.__TypeKind}});Object.defineProperty(t,"assertAbstractType",{enumerable:true,get:function(){return r.assertAbstractType}});Object.defineProperty(t,"assertCompositeType",{enumerable:true,get:function(){return r.assertCompositeType}});Object.defineProperty(t,"assertDirective",{enumerable:true,get:function(){return r.assertDirective}});Object.defineProperty(t,"assertEnumType",{enumerable:true,get:function(){return r.assertEnumType}});Object.defineProperty(t,"assertEnumValueName",{enumerable:true,get:function(){return r.assertEnumValueName}});Object.defineProperty(t,"assertInputObjectType",{enumerable:true,get:function(){return r.assertInputObjectType}});Object.defineProperty(t,"assertInputType",{enumerable:true,get:function(){return r.assertInputType}});Object.defineProperty(t,"assertInterfaceType",{enumerable:true,get:function(){return r.assertInterfaceType}});Object.defineProperty(t,"assertLeafType",{enumerable:true,get:function(){return r.assertLeafType}});Object.defineProperty(t,"assertListType",{enumerable:true,get:function(){return r.assertListType}});Object.defineProperty(t,"assertName",{enumerable:true,get:function(){return r.assertName}});Object.defineProperty(t,"assertNamedType",{enumerable:true,get:function(){return r.assertNamedType}});Object.defineProperty(t,"assertNonNullType",{enumerable:true,get:function(){return r.assertNonNullType}});Object.defineProperty(t,"assertNullableType",{enumerable:true,get:function(){return r.assertNullableType}});Object.defineProperty(t,"assertObjectType",{enumerable:true,get:function(){return r.assertObjectType}});Object.defineProperty(t,"assertOutputType",{enumerable:true,get:function(){return r.assertOutputType}});Object.defineProperty(t,"assertScalarType",{enumerable:true,get:function(){return r.assertScalarType}});Object.defineProperty(t,"assertSchema",{enumerable:true,get:function(){return r.assertSchema}});Object.defineProperty(t,"assertType",{enumerable:true,get:function(){return r.assertType}});Object.defineProperty(t,"assertUnionType",{enumerable:true,get:function(){return r.assertUnionType}});Object.defineProperty(t,"assertValidName",{enumerable:true,get:function(){return l.assertValidName}});Object.defineProperty(t,"assertValidSchema",{enumerable:true,get:function(){return r.assertValidSchema}});Object.defineProperty(t,"assertWrappingType",{enumerable:true,get:function(){return r.assertWrappingType}});Object.defineProperty(t,"astFromValue",{enumerable:true,get:function(){return l.astFromValue}});Object.defineProperty(t,"buildASTSchema",{enumerable:true,get:function(){return l.buildASTSchema}});Object.defineProperty(t,"buildClientSchema",{enumerable:true,get:function(){return l.buildClientSchema}});Object.defineProperty(t,"buildSchema",{enumerable:true,get:function(){return l.buildSchema}});Object.defineProperty(t,"coerceInputValue",{enumerable:true,get:function(){return l.coerceInputValue}});Object.defineProperty(t,"concatAST",{enumerable:true,get:function(){return l.concatAST}});Object.defineProperty(t,"createSourceEventStream",{enumerable:true,get:function(){return d.createSourceEventStream}});Object.defineProperty(t,"defaultFieldResolver",{enumerable:true,get:function(){return d.defaultFieldResolver}});Object.defineProperty(t,"defaultTypeResolver",{enumerable:true,get:function(){return d.defaultTypeResolver}});Object.defineProperty(t,"doTypesOverlap",{enumerable:true,get:function(){return l.doTypesOverlap}});Object.defineProperty(t,"execute",{enumerable:true,get:function(){return d.execute}});Object.defineProperty(t,"executeSync",{enumerable:true,get:function(){return d.executeSync}});Object.defineProperty(t,"extendSchema",{enumerable:true,get:function(){return l.extendSchema}});Object.defineProperty(t,"findBreakingChanges",{enumerable:true,get:function(){return l.findBreakingChanges}});Object.defineProperty(t,"findDangerousChanges",{enumerable:true,get:function(){return l.findDangerousChanges}});Object.defineProperty(t,"formatError",{enumerable:true,get:function(){return o.formatError}});Object.defineProperty(t,"getArgumentValues",{enumerable:true,get:function(){return d.getArgumentValues}});Object.defineProperty(t,"getDirectiveValues",{enumerable:true,get:function(){return d.getDirectiveValues}});Object.defineProperty(t,"getEnterLeaveForKind",{enumerable:true,get:function(){return p.getEnterLeaveForKind}});Object.defineProperty(t,"getIntrospectionQuery",{enumerable:true,get:function(){return l.getIntrospectionQuery}});Object.defineProperty(t,"getLocation",{enumerable:true,get:function(){return p.getLocation}});Object.defineProperty(t,"getNamedType",{enumerable:true,get:function(){return r.getNamedType}});Object.defineProperty(t,"getNullableType",{enumerable:true,get:function(){return r.getNullableType}});Object.defineProperty(t,"getOperationAST",{enumerable:true,get:function(){return l.getOperationAST}});Object.defineProperty(t,"getOperationRootType",{enumerable:true,get:function(){return l.getOperationRootType}});Object.defineProperty(t,"getVariableValues",{enumerable:true,get:function(){return d.getVariableValues}});Object.defineProperty(t,"getVisitFn",{enumerable:true,get:function(){return p.getVisitFn}});Object.defineProperty(t,"graphql",{enumerable:true,get:function(){return i.graphql}});Object.defineProperty(t,"graphqlSync",{enumerable:true,get:function(){return i.graphqlSync}});Object.defineProperty(t,"introspectionFromSchema",{enumerable:true,get:function(){return l.introspectionFromSchema}});Object.defineProperty(t,"introspectionTypes",{enumerable:true,get:function(){return r.introspectionTypes}});Object.defineProperty(t,"isAbstractType",{enumerable:true,get:function(){return r.isAbstractType}});Object.defineProperty(t,"isCompositeType",{enumerable:true,get:function(){return r.isCompositeType}});Object.defineProperty(t,"isConstValueNode",{enumerable:true,get:function(){return p.isConstValueNode}});Object.defineProperty(t,"isDefinitionNode",{enumerable:true,get:function(){return p.isDefinitionNode}});Object.defineProperty(t,"isDirective",{enumerable:true,get:function(){return r.isDirective}});Object.defineProperty(t,"isEnumType",{enumerable:true,get:function(){return r.isEnumType}});Object.defineProperty(t,"isEqualType",{enumerable:true,get:function(){return l.isEqualType}});Object.defineProperty(t,"isExecutableDefinitionNode",{enumerable:true,get:function(){return p.isExecutableDefinitionNode}});Object.defineProperty(t,"isInputObjectType",{enumerable:true,get:function(){return r.isInputObjectType}});Object.defineProperty(t,"isInputType",{enumerable:true,get:function(){return r.isInputType}});Object.defineProperty(t,"isInterfaceType",{enumerable:true,get:function(){return r.isInterfaceType}});Object.defineProperty(t,"isIntrospectionType",{enumerable:true,get:function(){return r.isIntrospectionType}});Object.defineProperty(t,"isLeafType",{enumerable:true,get:function(){return r.isLeafType}});Object.defineProperty(t,"isListType",{enumerable:true,get:function(){return r.isListType}});Object.defineProperty(t,"isNamedType",{enumerable:true,get:function(){return r.isNamedType}});Object.defineProperty(t,"isNonNullType",{enumerable:true,get:function(){return r.isNonNullType}});Object.defineProperty(t,"isNullableType",{enumerable:true,get:function(){return r.isNullableType}});Object.defineProperty(t,"isObjectType",{enumerable:true,get:function(){return r.isObjectType}});Object.defineProperty(t,"isOutputType",{enumerable:true,get:function(){return r.isOutputType}});Object.defineProperty(t,"isRequiredArgument",{enumerable:true,get:function(){return r.isRequiredArgument}});Object.defineProperty(t,"isRequiredInputField",{enumerable:true,get:function(){return r.isRequiredInputField}});Object.defineProperty(t,"isScalarType",{enumerable:true,get:function(){return r.isScalarType}});Object.defineProperty(t,"isSchema",{enumerable:true,get:function(){return r.isSchema}});Object.defineProperty(t,"isSelectionNode",{enumerable:true,get:function(){return p.isSelectionNode}});Object.defineProperty(t,"isSpecifiedDirective",{enumerable:true,get:function(){return r.isSpecifiedDirective}});Object.defineProperty(t,"isSpecifiedScalarType",{enumerable:true,get:function(){return r.isSpecifiedScalarType}});Object.defineProperty(t,"isType",{enumerable:true,get:function(){return r.isType}});Object.defineProperty(t,"isTypeDefinitionNode",{enumerable:true,get:function(){return p.isTypeDefinitionNode}});Object.defineProperty(t,"isTypeExtensionNode",{enumerable:true,get:function(){return p.isTypeExtensionNode}});Object.defineProperty(t,"isTypeNode",{enumerable:true,get:function(){return p.isTypeNode}});Object.defineProperty(t,"isTypeSubTypeOf",{enumerable:true,get:function(){return l.isTypeSubTypeOf}});Object.defineProperty(t,"isTypeSystemDefinitionNode",{enumerable:true,get:function(){return p.isTypeSystemDefinitionNode}});Object.defineProperty(t,"isTypeSystemExtensionNode",{enumerable:true,get:function(){return p.isTypeSystemExtensionNode}});Object.defineProperty(t,"isUnionType",{enumerable:true,get:function(){return r.isUnionType}});Object.defineProperty(t,"isValidNameError",{enumerable:true,get:function(){return l.isValidNameError}});Object.defineProperty(t,"isValueNode",{enumerable:true,get:function(){return p.isValueNode}});Object.defineProperty(t,"isWrappingType",{enumerable:true,get:function(){return r.isWrappingType}});Object.defineProperty(t,"lexicographicSortSchema",{enumerable:true,get:function(){return l.lexicographicSortSchema}});Object.defineProperty(t,"locatedError",{enumerable:true,get:function(){return o.locatedError}});Object.defineProperty(t,"parse",{enumerable:true,get:function(){return p.parse}});Object.defineProperty(t,"parseConstValue",{enumerable:true,get:function(){return p.parseConstValue}});Object.defineProperty(t,"parseType",{enumerable:true,get:function(){return p.parseType}});Object.defineProperty(t,"parseValue",{enumerable:true,get:function(){return p.parseValue}});Object.defineProperty(t,"print",{enumerable:true,get:function(){return p.print}});Object.defineProperty(t,"printError",{enumerable:true,get:function(){return o.printError}});Object.defineProperty(t,"printIntrospectionSchema",{enumerable:true,get:function(){return l.printIntrospectionSchema}});Object.defineProperty(t,"printLocation",{enumerable:true,get:function(){return p.printLocation}});Object.defineProperty(t,"printSchema",{enumerable:true,get:function(){return l.printSchema}});Object.defineProperty(t,"printSourceLocation",{enumerable:true,get:function(){return p.printSourceLocation}});Object.defineProperty(t,"printType",{enumerable:true,get:function(){return l.printType}});Object.defineProperty(t,"resolveObjMapThunk",{enumerable:true,get:function(){return r.resolveObjMapThunk}});Object.defineProperty(t,"resolveReadonlyArrayThunk",{enumerable:true,get:function(){return r.resolveReadonlyArrayThunk}});Object.defineProperty(t,"responsePathAsArray",{enumerable:true,get:function(){return d.responsePathAsArray}});Object.defineProperty(t,"separateOperations",{enumerable:true,get:function(){return l.separateOperations}});Object.defineProperty(t,"specifiedDirectives",{enumerable:true,get:function(){return r.specifiedDirectives}});Object.defineProperty(t,"specifiedRules",{enumerable:true,get:function(){return s.specifiedRules}});Object.defineProperty(t,"specifiedScalarTypes",{enumerable:true,get:function(){return r.specifiedScalarTypes}});Object.defineProperty(t,"stripIgnoredCharacters",{enumerable:true,get:function(){return l.stripIgnoredCharacters}});Object.defineProperty(t,"subscribe",{enumerable:true,get:function(){return d.subscribe}});Object.defineProperty(t,"syntaxError",{enumerable:true,get:function(){return o.syntaxError}});Object.defineProperty(t,"typeFromAST",{enumerable:true,get:function(){return l.typeFromAST}});Object.defineProperty(t,"validate",{enumerable:true,get:function(){return s.validate}});Object.defineProperty(t,"validateSchema",{enumerable:true,get:function(){return r.validateSchema}});Object.defineProperty(t,"valueFromAST",{enumerable:true,get:function(){return l.valueFromAST}});Object.defineProperty(t,"valueFromASTUntyped",{enumerable:true,get:function(){return l.valueFromASTUntyped}});Object.defineProperty(t,"version",{enumerable:true,get:function(){return n.version}});Object.defineProperty(t,"versionInfo",{enumerable:true,get:function(){return n.versionInfo}});Object.defineProperty(t,"visit",{enumerable:true,get:function(){return p.visit}});Object.defineProperty(t,"visitInParallel",{enumerable:true,get:function(){return p.visitInParallel}});Object.defineProperty(t,"visitWithTypeInfo",{enumerable:true,get:function(){return l.visitWithTypeInfo}});var n=a(1373);var i=a(762);var r=a(553);var p=a(5170);var d=a(6467);var s=a(2841);var o=a(5854);var l=a(7245)},3380:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.addPath=addPath;t.pathToArray=pathToArray;function addPath(e,t,a){return{prev:e,key:t,typename:a}}function pathToArray(e){const t=[];let a=e;while(a){t.push(a.key);a=a.prev}return t.reverse()}},3387:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.devAssert=devAssert;function devAssert(e,t){const a=Boolean(e);if(!a){throw new Error(t)}}},277:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.didYouMean=didYouMean;const a=5;function didYouMean(e,t){const[n,i]=t?[e,t]:[undefined,e];let r=" Did you mean ";if(n){r+=n+" "}const p=i.map((e=>`"${e}"`));switch(p.length){case 0:return"";case 1:return r+p[0]+"?";case 2:return r+p[0]+" or "+p[1]+"?"}const d=p.slice(0,a);const s=d.pop();return r+d.join(", ")+", or "+s+"?"}},9734:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.groupBy=groupBy;function groupBy(e,t){const a=new Map;for(const n of e){const e=t(n);const i=a.get(e);if(i===undefined){a.set(e,[n])}else{i.push(n)}}return a}},494:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.identityFunc=identityFunc;function identityFunc(e){return e}},6767:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.inspect=inspect;const a=10;const n=2;function inspect(e){return formatValue(e,[])}function formatValue(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return formatObjectValue(e,t);default:return String(e)}}function formatObjectValue(e,t){if(e===null){return"null"}if(t.includes(e)){return"[Circular]"}const a=[...t,e];if(isJSONable(e)){const t=e.toJSON();if(t!==e){return typeof t==="string"?t:formatValue(t,a)}}else if(Array.isArray(e)){return formatArray(e,a)}return formatObject(e,a)}function isJSONable(e){return typeof e.toJSON==="function"}function formatObject(e,t){const a=Object.entries(e);if(a.length===0){return"{}"}if(t.length>n){return"["+getObjectTag(e)+"]"}const i=a.map((([e,a])=>e+": "+formatValue(a,t)));return"{ "+i.join(", ")+" }"}function formatArray(e,t){if(e.length===0){return"[]"}if(t.length>n){return"[Array]"}const i=Math.min(a,e.length);const r=e.length-i;const p=[];for(let a=0;a<i;++a){p.push(formatValue(e[a],t))}if(r===1){p.push("... 1 more item")}else if(r>1){p.push(`... ${r} more items`)}return"["+p.join(", ")+"]"}function getObjectTag(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(t==="Object"&&typeof e.constructor==="function"){const t=e.constructor.name;if(typeof t==="string"&&t!==""){return t}}return t}},2219:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.instanceOf=void 0;var n=a(6767);const i=globalThis.process&&globalThis.process.env.NODE_ENV==="production"?function instanceOf(e,t){return e instanceof t}:function instanceOf(e,t){if(e instanceof t){return true}if(typeof e==="object"&&e!==null){var a;const i=t.prototype[Symbol.toStringTag];const r=Symbol.toStringTag in e?e[Symbol.toStringTag]:(a=e.constructor)===null||a===void 0?void 0:a.name;if(i===r){const t=(0,n.inspect)(e);throw new Error(`Cannot use ${i} "${t}" from another module or realm.\n\nEnsure that there is only one instance of "graphql" in the node_modules\ndirectory. If different versions of "graphql" are the dependencies of other\nrelied on modules, use "resolutions" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate "graphql" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`)}}return false};t.instanceOf=i},8479:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.invariant=invariant;function invariant(e,t){const a=Boolean(e);if(!a){throw new Error(t!=null?t:"Unexpected invariant triggered.")}}},4443:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isAsyncIterable=isAsyncIterable;function isAsyncIterable(e){return typeof(e===null||e===void 0?void 0:e[Symbol.asyncIterator])==="function"}},7405:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isIterableObject=isIterableObject;function isIterableObject(e){return typeof e==="object"&&typeof(e===null||e===void 0?void 0:e[Symbol.iterator])==="function"}},1589:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isObjectLike=isObjectLike;function isObjectLike(e){return typeof e=="object"&&e!==null}},6527:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isPromise=isPromise;function isPromise(e){return typeof(e===null||e===void 0?void 0:e.then)==="function"}},52:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.keyMap=keyMap;function keyMap(e,t){const a=Object.create(null);for(const n of e){a[t(n)]=n}return a}},1154:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.keyValMap=keyValMap;function keyValMap(e,t,a){const n=Object.create(null);for(const i of e){n[t(i)]=a(i)}return n}},5193:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.mapValue=mapValue;function mapValue(e,t){const a=Object.create(null);for(const n of Object.keys(e)){a[n]=t(e[n],n)}return a}},5090:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.memoize3=memoize3;function memoize3(e){let t;return function memoized(a,n,i){if(t===undefined){t=new WeakMap}let r=t.get(a);if(r===undefined){r=new WeakMap;t.set(a,r)}let p=r.get(n);if(p===undefined){p=new WeakMap;r.set(n,p)}let d=p.get(i);if(d===undefined){d=e(a,n,i);p.set(i,d)}return d}}},6413:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.naturalCompare=naturalCompare;function naturalCompare(e,t){let n=0;let i=0;while(n<e.length&&i<t.length){let r=e.charCodeAt(n);let p=t.charCodeAt(i);if(isDigit(r)&&isDigit(p)){let d=0;do{++n;d=d*10+r-a;r=e.charCodeAt(n)}while(isDigit(r)&&d>0);let s=0;do{++i;s=s*10+p-a;p=t.charCodeAt(i)}while(isDigit(p)&&s>0);if(d<s){return-1}if(d>s){return 1}}else{if(r<p){return-1}if(r>p){return 1}++n;++i}}return e.length-t.length}const a=48;const n=57;function isDigit(e){return!isNaN(e)&&a<=e&&e<=n}},7468:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.printPathArray=printPathArray;function printPathArray(e){return e.map((e=>typeof e==="number"?"["+e.toString()+"]":"."+e)).join("")}},4301:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.promiseForObject=promiseForObject;function promiseForObject(e){return Promise.all(Object.values(e)).then((t=>{const a=Object.create(null);for(const[n,i]of Object.keys(e).entries()){a[i]=t[n]}return a}))}},5357:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.promiseReduce=promiseReduce;var n=a(6527);function promiseReduce(e,t,a){let i=a;for(const a of e){i=(0,n.isPromise)(i)?i.then((e=>t(e,a))):t(i,a)}return i}},1664:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.suggestionList=suggestionList;var n=a(6413);function suggestionList(e,t){const a=Object.create(null);const i=new LexicalDistance(e);const r=Math.floor(e.length*.4)+1;for(const e of t){const t=i.measure(e,r);if(t!==undefined){a[e]=t}}return Object.keys(a).sort(((e,t)=>{const i=a[e]-a[t];return i!==0?i:(0,n.naturalCompare)(e,t)}))}class LexicalDistance{constructor(e){this._input=e;this._inputLowerCase=e.toLowerCase();this._inputArray=stringToArray(this._inputLowerCase);this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}measure(e,t){if(this._input===e){return 0}const a=e.toLowerCase();if(this._inputLowerCase===a){return 1}let n=stringToArray(a);let i=this._inputArray;if(n.length<i.length){const e=n;n=i;i=e}const r=n.length;const p=i.length;if(r-p>t){return undefined}const d=this._rows;for(let e=0;e<=p;e++){d[0][e]=e}for(let e=1;e<=r;e++){const a=d[(e-1)%3];const r=d[e%3];let s=r[0]=e;for(let t=1;t<=p;t++){const p=n[e-1]===i[t-1]?0:1;let o=Math.min(a[t]+1,r[t-1]+1,a[t-1]+p);if(e>1&&t>1&&n[e-1]===i[t-2]&&n[e-2]===i[t-1]){const a=d[(e-2)%3][t-2];o=Math.min(o,a+1)}if(o<s){s=o}r[t]=o}if(s>t){return undefined}}const s=d[r%3][p];return s<=t?s:undefined}}function stringToArray(e){const t=e.length;const a=new Array(t);for(let n=0;n<t;++n){a[n]=e.charCodeAt(n)}return a}},8084:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.toError=toError;var n=a(6767);function toError(e){return e instanceof Error?e:new NonErrorThrown(e)}class NonErrorThrown extends Error{constructor(e){super("Unexpected error value: "+(0,n.inspect)(e));this.name="NonErrorThrown";this.thrownValue=e}}},3937:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.toObjMap=toObjMap;function toObjMap(e){if(e==null){return Object.create(null)}if(Object.getPrototypeOf(e)===null){return e}const t=Object.create(null);for(const[a,n]of Object.entries(e)){t[a]=n}return t}},9622:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Token=t.QueryDocumentKeys=t.OperationTypeNode=t.Location=void 0;t.isNode=isNode;class Location{constructor(e,t,a){this.start=e.start;this.end=t.end;this.startToken=e;this.endToken=t;this.source=a}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}t.Location=Location;class Token{constructor(e,t,a,n,i,r){this.kind=e;this.start=t;this.end=a;this.line=n;this.column=i;this.value=r;this.prev=null;this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}t.Token=Token;const a={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]};t.QueryDocumentKeys=a;const n=new Set(Object.keys(a));function isNode(e){const t=e===null||e===void 0?void 0:e.kind;return typeof t==="string"&&n.has(t)}var i;t.OperationTypeNode=i;(function(e){e["QUERY"]="query";e["MUTATION"]="mutation";e["SUBSCRIPTION"]="subscription"})(i||(t.OperationTypeNode=i={}))},2900:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.dedentBlockStringLines=dedentBlockStringLines;t.isPrintableAsBlockString=isPrintableAsBlockString;t.printBlockString=printBlockString;var n=a(6793);function dedentBlockStringLines(e){var t;let a=Number.MAX_SAFE_INTEGER;let n=null;let i=-1;for(let t=0;t<e.length;++t){var r;const p=e[t];const d=leadingWhitespace(p);if(d===p.length){continue}n=(r=n)!==null&&r!==void 0?r:t;i=t;if(t!==0&&d<a){a=d}}return e.map(((e,t)=>t===0?e:e.slice(a))).slice((t=n)!==null&&t!==void 0?t:0,i+1)}function leadingWhitespace(e){let t=0;while(t<e.length&&(0,n.isWhiteSpace)(e.charCodeAt(t))){++t}return t}function isPrintableAsBlockString(e){if(e===""){return true}let t=true;let a=false;let n=true;let i=false;for(let r=0;r<e.length;++r){switch(e.codePointAt(r)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:return false;case 13:return false;case 10:if(t&&!i){return false}i=true;t=true;a=false;break;case 9:case 32:a||(a=t);break;default:n&&(n=a);t=false}}if(t){return false}if(n&&i){return false}return true}function printBlockString(e,t){const a=e.replace(/"""/g,'\\"""');const i=a.split(/\r\n|[\n\r]/g);const r=i.length===1;const p=i.length>1&&i.slice(1).every((e=>e.length===0||(0,n.isWhiteSpace)(e.charCodeAt(0))));const d=a.endsWith('\\"""');const s=e.endsWith('"')&&!d;const o=e.endsWith("\\");const l=s||o;const u=!(t!==null&&t!==void 0&&t.minimize)&&(!r||e.length>70||l||p||d);let c="";const m=r&&(0,n.isWhiteSpace)(e.charCodeAt(0));if(u&&!m||p){c+="\n"}c+=a;if(u||l){c+="\n"}return'"""'+c+'"""'}},6793:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isDigit=isDigit;t.isLetter=isLetter;t.isNameContinue=isNameContinue;t.isNameStart=isNameStart;t.isWhiteSpace=isWhiteSpace;function isWhiteSpace(e){return e===9||e===32}function isDigit(e){return e>=48&&e<=57}function isLetter(e){return e>=97&&e<=122||e>=65&&e<=90}function isNameStart(e){return isLetter(e)||e===95}function isNameContinue(e){return isLetter(e)||isDigit(e)||e===95}},3134:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.DirectiveLocation=void 0;var a;t.DirectiveLocation=a;(function(e){e["QUERY"]="QUERY";e["MUTATION"]="MUTATION";e["SUBSCRIPTION"]="SUBSCRIPTION";e["FIELD"]="FIELD";e["FRAGMENT_DEFINITION"]="FRAGMENT_DEFINITION";e["FRAGMENT_SPREAD"]="FRAGMENT_SPREAD";e["INLINE_FRAGMENT"]="INLINE_FRAGMENT";e["VARIABLE_DEFINITION"]="VARIABLE_DEFINITION";e["SCHEMA"]="SCHEMA";e["SCALAR"]="SCALAR";e["OBJECT"]="OBJECT";e["FIELD_DEFINITION"]="FIELD_DEFINITION";e["ARGUMENT_DEFINITION"]="ARGUMENT_DEFINITION";e["INTERFACE"]="INTERFACE";e["UNION"]="UNION";e["ENUM"]="ENUM";e["ENUM_VALUE"]="ENUM_VALUE";e["INPUT_OBJECT"]="INPUT_OBJECT";e["INPUT_FIELD_DEFINITION"]="INPUT_FIELD_DEFINITION"})(a||(t.DirectiveLocation=a={}))},5170:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"BREAK",{enumerable:true,get:function(){return u.BREAK}});Object.defineProperty(t,"DirectiveLocation",{enumerable:true,get:function(){return f.DirectiveLocation}});Object.defineProperty(t,"Kind",{enumerable:true,get:function(){return p.Kind}});Object.defineProperty(t,"Lexer",{enumerable:true,get:function(){return s.Lexer}});Object.defineProperty(t,"Location",{enumerable:true,get:function(){return c.Location}});Object.defineProperty(t,"OperationTypeNode",{enumerable:true,get:function(){return c.OperationTypeNode}});Object.defineProperty(t,"Source",{enumerable:true,get:function(){return n.Source}});Object.defineProperty(t,"Token",{enumerable:true,get:function(){return c.Token}});Object.defineProperty(t,"TokenKind",{enumerable:true,get:function(){return d.TokenKind}});Object.defineProperty(t,"getEnterLeaveForKind",{enumerable:true,get:function(){return u.getEnterLeaveForKind}});Object.defineProperty(t,"getLocation",{enumerable:true,get:function(){return i.getLocation}});Object.defineProperty(t,"getVisitFn",{enumerable:true,get:function(){return u.getVisitFn}});Object.defineProperty(t,"isConstValueNode",{enumerable:true,get:function(){return m.isConstValueNode}});Object.defineProperty(t,"isDefinitionNode",{enumerable:true,get:function(){return m.isDefinitionNode}});Object.defineProperty(t,"isExecutableDefinitionNode",{enumerable:true,get:function(){return m.isExecutableDefinitionNode}});Object.defineProperty(t,"isSelectionNode",{enumerable:true,get:function(){return m.isSelectionNode}});Object.defineProperty(t,"isTypeDefinitionNode",{enumerable:true,get:function(){return m.isTypeDefinitionNode}});Object.defineProperty(t,"isTypeExtensionNode",{enumerable:true,get:function(){return m.isTypeExtensionNode}});Object.defineProperty(t,"isTypeNode",{enumerable:true,get:function(){return m.isTypeNode}});Object.defineProperty(t,"isTypeSystemDefinitionNode",{enumerable:true,get:function(){return m.isTypeSystemDefinitionNode}});Object.defineProperty(t,"isTypeSystemExtensionNode",{enumerable:true,get:function(){return m.isTypeSystemExtensionNode}});Object.defineProperty(t,"isValueNode",{enumerable:true,get:function(){return m.isValueNode}});Object.defineProperty(t,"parse",{enumerable:true,get:function(){return o.parse}});Object.defineProperty(t,"parseConstValue",{enumerable:true,get:function(){return o.parseConstValue}});Object.defineProperty(t,"parseType",{enumerable:true,get:function(){return o.parseType}});Object.defineProperty(t,"parseValue",{enumerable:true,get:function(){return o.parseValue}});Object.defineProperty(t,"print",{enumerable:true,get:function(){return l.print}});Object.defineProperty(t,"printLocation",{enumerable:true,get:function(){return r.printLocation}});Object.defineProperty(t,"printSourceLocation",{enumerable:true,get:function(){return r.printSourceLocation}});Object.defineProperty(t,"visit",{enumerable:true,get:function(){return u.visit}});Object.defineProperty(t,"visitInParallel",{enumerable:true,get:function(){return u.visitInParallel}});var n=a(752);var i=a(4068);var r=a(3993);var p=a(5223);var d=a(1557);var s=a(3325);var o=a(6639);var l=a(4359);var u=a(6586);var c=a(9622);var m=a(2617);var f=a(3134)},5223:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Kind=void 0;var a;t.Kind=a;(function(e){e["NAME"]="Name";e["DOCUMENT"]="Document";e["OPERATION_DEFINITION"]="OperationDefinition";e["VARIABLE_DEFINITION"]="VariableDefinition";e["SELECTION_SET"]="SelectionSet";e["FIELD"]="Field";e["ARGUMENT"]="Argument";e["FRAGMENT_SPREAD"]="FragmentSpread";e["INLINE_FRAGMENT"]="InlineFragment";e["FRAGMENT_DEFINITION"]="FragmentDefinition";e["VARIABLE"]="Variable";e["INT"]="IntValue";e["FLOAT"]="FloatValue";e["STRING"]="StringValue";e["BOOLEAN"]="BooleanValue";e["NULL"]="NullValue";e["ENUM"]="EnumValue";e["LIST"]="ListValue";e["OBJECT"]="ObjectValue";e["OBJECT_FIELD"]="ObjectField";e["DIRECTIVE"]="Directive";e["NAMED_TYPE"]="NamedType";e["LIST_TYPE"]="ListType";e["NON_NULL_TYPE"]="NonNullType";e["SCHEMA_DEFINITION"]="SchemaDefinition";e["OPERATION_TYPE_DEFINITION"]="OperationTypeDefinition";e["SCALAR_TYPE_DEFINITION"]="ScalarTypeDefinition";e["OBJECT_TYPE_DEFINITION"]="ObjectTypeDefinition";e["FIELD_DEFINITION"]="FieldDefinition";e["INPUT_VALUE_DEFINITION"]="InputValueDefinition";e["INTERFACE_TYPE_DEFINITION"]="InterfaceTypeDefinition";e["UNION_TYPE_DEFINITION"]="UnionTypeDefinition";e["ENUM_TYPE_DEFINITION"]="EnumTypeDefinition";e["ENUM_VALUE_DEFINITION"]="EnumValueDefinition";e["INPUT_OBJECT_TYPE_DEFINITION"]="InputObjectTypeDefinition";e["DIRECTIVE_DEFINITION"]="DirectiveDefinition";e["SCHEMA_EXTENSION"]="SchemaExtension";e["SCALAR_TYPE_EXTENSION"]="ScalarTypeExtension";e["OBJECT_TYPE_EXTENSION"]="ObjectTypeExtension";e["INTERFACE_TYPE_EXTENSION"]="InterfaceTypeExtension";e["UNION_TYPE_EXTENSION"]="UnionTypeExtension";e["ENUM_TYPE_EXTENSION"]="EnumTypeExtension";e["INPUT_OBJECT_TYPE_EXTENSION"]="InputObjectTypeExtension"})(a||(t.Kind=a={}))},3325:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Lexer=void 0;t.isPunctuatorTokenKind=isPunctuatorTokenKind;var n=a(183);var i=a(9622);var r=a(2900);var p=a(6793);var d=a(1557);class Lexer{constructor(e){const t=new i.Token(d.TokenKind.SOF,0,0,0,0);this.source=e;this.lastToken=t;this.token=t;this.line=1;this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){this.lastToken=this.token;const e=this.token=this.lookahead();return e}lookahead(){let e=this.token;if(e.kind!==d.TokenKind.EOF){do{if(e.next){e=e.next}else{const t=readNextToken(this,e.end);e.next=t;t.prev=e;e=t}}while(e.kind===d.TokenKind.COMMENT)}return e}}t.Lexer=Lexer;function isPunctuatorTokenKind(e){return e===d.TokenKind.BANG||e===d.TokenKind.DOLLAR||e===d.TokenKind.AMP||e===d.TokenKind.PAREN_L||e===d.TokenKind.PAREN_R||e===d.TokenKind.SPREAD||e===d.TokenKind.COLON||e===d.TokenKind.EQUALS||e===d.TokenKind.AT||e===d.TokenKind.BRACKET_L||e===d.TokenKind.BRACKET_R||e===d.TokenKind.BRACE_L||e===d.TokenKind.PIPE||e===d.TokenKind.BRACE_R}function isUnicodeScalarValue(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function isSupplementaryCodePoint(e,t){return isLeadingSurrogate(e.charCodeAt(t))&&isTrailingSurrogate(e.charCodeAt(t+1))}function isLeadingSurrogate(e){return e>=55296&&e<=56319}function isTrailingSurrogate(e){return e>=56320&&e<=57343}function printCodePointAt(e,t){const a=e.source.body.codePointAt(t);if(a===undefined){return d.TokenKind.EOF}else if(a>=32&&a<=126){const e=String.fromCodePoint(a);return e==='"'?"'\"'":`"${e}"`}return"U+"+a.toString(16).toUpperCase().padStart(4,"0")}function createToken(e,t,a,n,r){const p=e.line;const d=1+a-e.lineStart;return new i.Token(t,a,n,p,d,r)}function readNextToken(e,t){const a=e.source.body;const i=a.length;let r=t;while(r<i){const t=a.charCodeAt(r);switch(t){case 65279:case 9:case 32:case 44:++r;continue;case 10:++r;++e.line;e.lineStart=r;continue;case 13:if(a.charCodeAt(r+1)===10){r+=2}else{++r}++e.line;e.lineStart=r;continue;case 35:return readComment(e,r);case 33:return createToken(e,d.TokenKind.BANG,r,r+1);case 36:return createToken(e,d.TokenKind.DOLLAR,r,r+1);case 38:return createToken(e,d.TokenKind.AMP,r,r+1);case 40:return createToken(e,d.TokenKind.PAREN_L,r,r+1);case 41:return createToken(e,d.TokenKind.PAREN_R,r,r+1);case 46:if(a.charCodeAt(r+1)===46&&a.charCodeAt(r+2)===46){return createToken(e,d.TokenKind.SPREAD,r,r+3)}break;case 58:return createToken(e,d.TokenKind.COLON,r,r+1);case 61:return createToken(e,d.TokenKind.EQUALS,r,r+1);case 64:return createToken(e,d.TokenKind.AT,r,r+1);case 91:return createToken(e,d.TokenKind.BRACKET_L,r,r+1);case 93:return createToken(e,d.TokenKind.BRACKET_R,r,r+1);case 123:return createToken(e,d.TokenKind.BRACE_L,r,r+1);case 124:return createToken(e,d.TokenKind.PIPE,r,r+1);case 125:return createToken(e,d.TokenKind.BRACE_R,r,r+1);case 34:if(a.charCodeAt(r+1)===34&&a.charCodeAt(r+2)===34){return readBlockString(e,r)}return readString(e,r)}if((0,p.isDigit)(t)||t===45){return readNumber(e,r,t)}if((0,p.isNameStart)(t)){return readName(e,r)}throw(0,n.syntaxError)(e.source,r,t===39?"Unexpected single quote character ('), did you mean to use a double quote (\")?":isUnicodeScalarValue(t)||isSupplementaryCodePoint(a,r)?`Unexpected character: ${printCodePointAt(e,r)}.`:`Invalid character: ${printCodePointAt(e,r)}.`)}return createToken(e,d.TokenKind.EOF,i,i)}function readComment(e,t){const a=e.source.body;const n=a.length;let i=t+1;while(i<n){const e=a.charCodeAt(i);if(e===10||e===13){break}if(isUnicodeScalarValue(e)){++i}else if(isSupplementaryCodePoint(a,i)){i+=2}else{break}}return createToken(e,d.TokenKind.COMMENT,t,i,a.slice(t+1,i))}function readNumber(e,t,a){const i=e.source.body;let r=t;let s=a;let o=false;if(s===45){s=i.charCodeAt(++r)}if(s===48){s=i.charCodeAt(++r);if((0,p.isDigit)(s)){throw(0,n.syntaxError)(e.source,r,`Invalid number, unexpected digit after 0: ${printCodePointAt(e,r)}.`)}}else{r=readDigits(e,r,s);s=i.charCodeAt(r)}if(s===46){o=true;s=i.charCodeAt(++r);r=readDigits(e,r,s);s=i.charCodeAt(r)}if(s===69||s===101){o=true;s=i.charCodeAt(++r);if(s===43||s===45){s=i.charCodeAt(++r)}r=readDigits(e,r,s);s=i.charCodeAt(r)}if(s===46||(0,p.isNameStart)(s)){throw(0,n.syntaxError)(e.source,r,`Invalid number, expected digit but got: ${printCodePointAt(e,r)}.`)}return createToken(e,o?d.TokenKind.FLOAT:d.TokenKind.INT,t,r,i.slice(t,r))}function readDigits(e,t,a){if(!(0,p.isDigit)(a)){throw(0,n.syntaxError)(e.source,t,`Invalid number, expected digit but got: ${printCodePointAt(e,t)}.`)}const i=e.source.body;let r=t+1;while((0,p.isDigit)(i.charCodeAt(r))){++r}return r}function readString(e,t){const a=e.source.body;const i=a.length;let r=t+1;let p=r;let s="";while(r<i){const i=a.charCodeAt(r);if(i===34){s+=a.slice(p,r);return createToken(e,d.TokenKind.STRING,t,r+1,s)}if(i===92){s+=a.slice(p,r);const t=a.charCodeAt(r+1)===117?a.charCodeAt(r+2)===123?readEscapedUnicodeVariableWidth(e,r):readEscapedUnicodeFixedWidth(e,r):readEscapedCharacter(e,r);s+=t.value;r+=t.size;p=r;continue}if(i===10||i===13){break}if(isUnicodeScalarValue(i)){++r}else if(isSupplementaryCodePoint(a,r)){r+=2}else{throw(0,n.syntaxError)(e.source,r,`Invalid character within String: ${printCodePointAt(e,r)}.`)}}throw(0,n.syntaxError)(e.source,r,"Unterminated string.")}function readEscapedUnicodeVariableWidth(e,t){const a=e.source.body;let i=0;let r=3;while(r<12){const e=a.charCodeAt(t+r++);if(e===125){if(r<5||!isUnicodeScalarValue(i)){break}return{value:String.fromCodePoint(i),size:r}}i=i<<4|readHexDigit(e);if(i<0){break}}throw(0,n.syntaxError)(e.source,t,`Invalid Unicode escape sequence: "${a.slice(t,t+r)}".`)}function readEscapedUnicodeFixedWidth(e,t){const a=e.source.body;const i=read16BitHexCode(a,t+2);if(isUnicodeScalarValue(i)){return{value:String.fromCodePoint(i),size:6}}if(isLeadingSurrogate(i)){if(a.charCodeAt(t+6)===92&&a.charCodeAt(t+7)===117){const e=read16BitHexCode(a,t+8);if(isTrailingSurrogate(e)){return{value:String.fromCodePoint(i,e),size:12}}}}throw(0,n.syntaxError)(e.source,t,`Invalid Unicode escape sequence: "${a.slice(t,t+6)}".`)}function read16BitHexCode(e,t){return readHexDigit(e.charCodeAt(t))<<12|readHexDigit(e.charCodeAt(t+1))<<8|readHexDigit(e.charCodeAt(t+2))<<4|readHexDigit(e.charCodeAt(t+3))}function readHexDigit(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function readEscapedCharacter(e,t){const a=e.source.body;const i=a.charCodeAt(t+1);switch(i){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:"\n",size:2};case 114:return{value:"\r",size:2};case 116:return{value:"\t",size:2}}throw(0,n.syntaxError)(e.source,t,`Invalid character escape sequence: "${a.slice(t,t+2)}".`)}function readBlockString(e,t){const a=e.source.body;const i=a.length;let p=e.lineStart;let s=t+3;let o=s;let l="";const u=[];while(s<i){const i=a.charCodeAt(s);if(i===34&&a.charCodeAt(s+1)===34&&a.charCodeAt(s+2)===34){l+=a.slice(o,s);u.push(l);const n=createToken(e,d.TokenKind.BLOCK_STRING,t,s+3,(0,r.dedentBlockStringLines)(u).join("\n"));e.line+=u.length-1;e.lineStart=p;return n}if(i===92&&a.charCodeAt(s+1)===34&&a.charCodeAt(s+2)===34&&a.charCodeAt(s+3)===34){l+=a.slice(o,s);o=s+1;s+=4;continue}if(i===10||i===13){l+=a.slice(o,s);u.push(l);if(i===13&&a.charCodeAt(s+1)===10){s+=2}else{++s}l="";o=s;p=s;continue}if(isUnicodeScalarValue(i)){++s}else if(isSupplementaryCodePoint(a,s)){s+=2}else{throw(0,n.syntaxError)(e.source,s,`Invalid character within String: ${printCodePointAt(e,s)}.`)}}throw(0,n.syntaxError)(e.source,s,"Unterminated string.")}function readName(e,t){const a=e.source.body;const n=a.length;let i=t+1;while(i<n){const e=a.charCodeAt(i);if((0,p.isNameContinue)(e)){++i}else{break}}return createToken(e,d.TokenKind.NAME,t,i,a.slice(t,i))}},4068:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getLocation=getLocation;var n=a(8479);const i=/\r\n|[\n\r]/g;function getLocation(e,t){let a=0;let r=1;for(const p of e.body.matchAll(i)){typeof p.index==="number"||(0,n.invariant)(false);if(p.index>=t){break}a=p.index+p[0].length;r+=1}return{line:r,column:t+1-a}}},6639:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Parser=void 0;t.parse=parse;t.parseConstValue=parseConstValue;t.parseType=parseType;t.parseValue=parseValue;var n=a(183);var i=a(9622);var r=a(3134);var p=a(5223);var d=a(3325);var s=a(752);var o=a(1557);function parse(e,t){const a=new Parser(e,t);return a.parseDocument()}function parseValue(e,t){const a=new Parser(e,t);a.expectToken(o.TokenKind.SOF);const n=a.parseValueLiteral(false);a.expectToken(o.TokenKind.EOF);return n}function parseConstValue(e,t){const a=new Parser(e,t);a.expectToken(o.TokenKind.SOF);const n=a.parseConstValueLiteral();a.expectToken(o.TokenKind.EOF);return n}function parseType(e,t){const a=new Parser(e,t);a.expectToken(o.TokenKind.SOF);const n=a.parseTypeReference();a.expectToken(o.TokenKind.EOF);return n}class Parser{constructor(e,t={}){const a=(0,s.isSource)(e)?e:new s.Source(e);this._lexer=new d.Lexer(a);this._options=t;this._tokenCounter=0}parseName(){const e=this.expectToken(o.TokenKind.NAME);return this.node(e,{kind:p.Kind.NAME,value:e.value})}parseDocument(){return this.node(this._lexer.token,{kind:p.Kind.DOCUMENT,definitions:this.many(o.TokenKind.SOF,this.parseDefinition,o.TokenKind.EOF)})}parseDefinition(){if(this.peek(o.TokenKind.BRACE_L)){return this.parseOperationDefinition()}const e=this.peekDescription();const t=e?this._lexer.lookahead():this._lexer.token;if(t.kind===o.TokenKind.NAME){switch(t.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(e){throw(0,n.syntaxError)(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.")}switch(t.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(t)}parseOperationDefinition(){const e=this._lexer.token;if(this.peek(o.TokenKind.BRACE_L)){return this.node(e,{kind:p.Kind.OPERATION_DEFINITION,operation:i.OperationTypeNode.QUERY,name:undefined,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()})}const t=this.parseOperationType();let a;if(this.peek(o.TokenKind.NAME)){a=this.parseName()}return this.node(e,{kind:p.Kind.OPERATION_DEFINITION,operation:t,name:a,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(false),selectionSet:this.parseSelectionSet()})}parseOperationType(){const e=this.expectToken(o.TokenKind.NAME);switch(e.value){case"query":return i.OperationTypeNode.QUERY;case"mutation":return i.OperationTypeNode.MUTATION;case"subscription":return i.OperationTypeNode.SUBSCRIPTION}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(o.TokenKind.PAREN_L,this.parseVariableDefinition,o.TokenKind.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:p.Kind.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(o.TokenKind.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(o.TokenKind.EQUALS)?this.parseConstValueLiteral():undefined,directives:this.parseConstDirectives()})}parseVariable(){const e=this._lexer.token;this.expectToken(o.TokenKind.DOLLAR);return this.node(e,{kind:p.Kind.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:p.Kind.SELECTION_SET,selections:this.many(o.TokenKind.BRACE_L,this.parseSelection,o.TokenKind.BRACE_R)})}parseSelection(){return this.peek(o.TokenKind.SPREAD)?this.parseFragment():this.parseField()}parseField(){const e=this._lexer.token;const t=this.parseName();let a;let n;if(this.expectOptionalToken(o.TokenKind.COLON)){a=t;n=this.parseName()}else{n=t}return this.node(e,{kind:p.Kind.FIELD,alias:a,name:n,arguments:this.parseArguments(false),directives:this.parseDirectives(false),selectionSet:this.peek(o.TokenKind.BRACE_L)?this.parseSelectionSet():undefined})}parseArguments(e){const t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(o.TokenKind.PAREN_L,t,o.TokenKind.PAREN_R)}parseArgument(e=false){const t=this._lexer.token;const a=this.parseName();this.expectToken(o.TokenKind.COLON);return this.node(t,{kind:p.Kind.ARGUMENT,name:a,value:this.parseValueLiteral(e)})}parseConstArgument(){return this.parseArgument(true)}parseFragment(){const e=this._lexer.token;this.expectToken(o.TokenKind.SPREAD);const t=this.expectOptionalKeyword("on");if(!t&&this.peek(o.TokenKind.NAME)){return this.node(e,{kind:p.Kind.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(false)})}return this.node(e,{kind:p.Kind.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():undefined,directives:this.parseDirectives(false),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const e=this._lexer.token;this.expectKeyword("fragment");if(this._options.allowLegacyFragmentVariables===true){return this.node(e,{kind:p.Kind.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(false),selectionSet:this.parseSelectionSet()})}return this.node(e,{kind:p.Kind.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(false),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if(this._lexer.token.value==="on"){throw this.unexpected()}return this.parseName()}parseValueLiteral(e){const t=this._lexer.token;switch(t.kind){case o.TokenKind.BRACKET_L:return this.parseList(e);case o.TokenKind.BRACE_L:return this.parseObject(e);case o.TokenKind.INT:this.advanceLexer();return this.node(t,{kind:p.Kind.INT,value:t.value});case o.TokenKind.FLOAT:this.advanceLexer();return this.node(t,{kind:p.Kind.FLOAT,value:t.value});case o.TokenKind.STRING:case o.TokenKind.BLOCK_STRING:return this.parseStringLiteral();case o.TokenKind.NAME:this.advanceLexer();switch(t.value){case"true":return this.node(t,{kind:p.Kind.BOOLEAN,value:true});case"false":return this.node(t,{kind:p.Kind.BOOLEAN,value:false});case"null":return this.node(t,{kind:p.Kind.NULL});default:return this.node(t,{kind:p.Kind.ENUM,value:t.value})}case o.TokenKind.DOLLAR:if(e){this.expectToken(o.TokenKind.DOLLAR);if(this._lexer.token.kind===o.TokenKind.NAME){const e=this._lexer.token.value;throw(0,n.syntaxError)(this._lexer.source,t.start,`Unexpected variable "$${e}" in constant value.`)}else{throw this.unexpected(t)}}return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(true)}parseStringLiteral(){const e=this._lexer.token;this.advanceLexer();return this.node(e,{kind:p.Kind.STRING,value:e.value,block:e.kind===o.TokenKind.BLOCK_STRING})}parseList(e){const item=()=>this.parseValueLiteral(e);return this.node(this._lexer.token,{kind:p.Kind.LIST,values:this.any(o.TokenKind.BRACKET_L,item,o.TokenKind.BRACKET_R)})}parseObject(e){const item=()=>this.parseObjectField(e);return this.node(this._lexer.token,{kind:p.Kind.OBJECT,fields:this.any(o.TokenKind.BRACE_L,item,o.TokenKind.BRACE_R)})}parseObjectField(e){const t=this._lexer.token;const a=this.parseName();this.expectToken(o.TokenKind.COLON);return this.node(t,{kind:p.Kind.OBJECT_FIELD,name:a,value:this.parseValueLiteral(e)})}parseDirectives(e){const t=[];while(this.peek(o.TokenKind.AT)){t.push(this.parseDirective(e))}return t}parseConstDirectives(){return this.parseDirectives(true)}parseDirective(e){const t=this._lexer.token;this.expectToken(o.TokenKind.AT);return this.node(t,{kind:p.Kind.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e)})}parseTypeReference(){const e=this._lexer.token;let t;if(this.expectOptionalToken(o.TokenKind.BRACKET_L)){const a=this.parseTypeReference();this.expectToken(o.TokenKind.BRACKET_R);t=this.node(e,{kind:p.Kind.LIST_TYPE,type:a})}else{t=this.parseNamedType()}if(this.expectOptionalToken(o.TokenKind.BANG)){return this.node(e,{kind:p.Kind.NON_NULL_TYPE,type:t})}return t}parseNamedType(){return this.node(this._lexer.token,{kind:p.Kind.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(o.TokenKind.STRING)||this.peek(o.TokenKind.BLOCK_STRING)}parseDescription(){if(this.peekDescription()){return this.parseStringLiteral()}}parseSchemaDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("schema");const a=this.parseConstDirectives();const n=this.many(o.TokenKind.BRACE_L,this.parseOperationTypeDefinition,o.TokenKind.BRACE_R);return this.node(e,{kind:p.Kind.SCHEMA_DEFINITION,description:t,directives:a,operationTypes:n})}parseOperationTypeDefinition(){const e=this._lexer.token;const t=this.parseOperationType();this.expectToken(o.TokenKind.COLON);const a=this.parseNamedType();return this.node(e,{kind:p.Kind.OPERATION_TYPE_DEFINITION,operation:t,type:a})}parseScalarTypeDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("scalar");const a=this.parseName();const n=this.parseConstDirectives();return this.node(e,{kind:p.Kind.SCALAR_TYPE_DEFINITION,description:t,name:a,directives:n})}parseObjectTypeDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("type");const a=this.parseName();const n=this.parseImplementsInterfaces();const i=this.parseConstDirectives();const r=this.parseFieldsDefinition();return this.node(e,{kind:p.Kind.OBJECT_TYPE_DEFINITION,description:t,name:a,interfaces:n,directives:i,fields:r})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(o.TokenKind.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(o.TokenKind.BRACE_L,this.parseFieldDefinition,o.TokenKind.BRACE_R)}parseFieldDefinition(){const e=this._lexer.token;const t=this.parseDescription();const a=this.parseName();const n=this.parseArgumentDefs();this.expectToken(o.TokenKind.COLON);const i=this.parseTypeReference();const r=this.parseConstDirectives();return this.node(e,{kind:p.Kind.FIELD_DEFINITION,description:t,name:a,arguments:n,type:i,directives:r})}parseArgumentDefs(){return this.optionalMany(o.TokenKind.PAREN_L,this.parseInputValueDef,o.TokenKind.PAREN_R)}parseInputValueDef(){const e=this._lexer.token;const t=this.parseDescription();const a=this.parseName();this.expectToken(o.TokenKind.COLON);const n=this.parseTypeReference();let i;if(this.expectOptionalToken(o.TokenKind.EQUALS)){i=this.parseConstValueLiteral()}const r=this.parseConstDirectives();return this.node(e,{kind:p.Kind.INPUT_VALUE_DEFINITION,description:t,name:a,type:n,defaultValue:i,directives:r})}parseInterfaceTypeDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("interface");const a=this.parseName();const n=this.parseImplementsInterfaces();const i=this.parseConstDirectives();const r=this.parseFieldsDefinition();return this.node(e,{kind:p.Kind.INTERFACE_TYPE_DEFINITION,description:t,name:a,interfaces:n,directives:i,fields:r})}parseUnionTypeDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("union");const a=this.parseName();const n=this.parseConstDirectives();const i=this.parseUnionMemberTypes();return this.node(e,{kind:p.Kind.UNION_TYPE_DEFINITION,description:t,name:a,directives:n,types:i})}parseUnionMemberTypes(){return this.expectOptionalToken(o.TokenKind.EQUALS)?this.delimitedMany(o.TokenKind.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("enum");const a=this.parseName();const n=this.parseConstDirectives();const i=this.parseEnumValuesDefinition();return this.node(e,{kind:p.Kind.ENUM_TYPE_DEFINITION,description:t,name:a,directives:n,values:i})}parseEnumValuesDefinition(){return this.optionalMany(o.TokenKind.BRACE_L,this.parseEnumValueDefinition,o.TokenKind.BRACE_R)}parseEnumValueDefinition(){const e=this._lexer.token;const t=this.parseDescription();const a=this.parseEnumValueName();const n=this.parseConstDirectives();return this.node(e,{kind:p.Kind.ENUM_VALUE_DEFINITION,description:t,name:a,directives:n})}parseEnumValueName(){if(this._lexer.token.value==="true"||this._lexer.token.value==="false"||this._lexer.token.value==="null"){throw(0,n.syntaxError)(this._lexer.source,this._lexer.token.start,`${getTokenDesc(this._lexer.token)} is reserved and cannot be used for an enum value.`)}return this.parseName()}parseInputObjectTypeDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("input");const a=this.parseName();const n=this.parseConstDirectives();const i=this.parseInputFieldsDefinition();return this.node(e,{kind:p.Kind.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:a,directives:n,fields:i})}parseInputFieldsDefinition(){return this.optionalMany(o.TokenKind.BRACE_L,this.parseInputValueDef,o.TokenKind.BRACE_R)}parseTypeSystemExtension(){const e=this._lexer.lookahead();if(e.kind===o.TokenKind.NAME){switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}}throw this.unexpected(e)}parseSchemaExtension(){const e=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("schema");const t=this.parseConstDirectives();const a=this.optionalMany(o.TokenKind.BRACE_L,this.parseOperationTypeDefinition,o.TokenKind.BRACE_R);if(t.length===0&&a.length===0){throw this.unexpected()}return this.node(e,{kind:p.Kind.SCHEMA_EXTENSION,directives:t,operationTypes:a})}parseScalarTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("scalar");const t=this.parseName();const a=this.parseConstDirectives();if(a.length===0){throw this.unexpected()}return this.node(e,{kind:p.Kind.SCALAR_TYPE_EXTENSION,name:t,directives:a})}parseObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("type");const t=this.parseName();const a=this.parseImplementsInterfaces();const n=this.parseConstDirectives();const i=this.parseFieldsDefinition();if(a.length===0&&n.length===0&&i.length===0){throw this.unexpected()}return this.node(e,{kind:p.Kind.OBJECT_TYPE_EXTENSION,name:t,interfaces:a,directives:n,fields:i})}parseInterfaceTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("interface");const t=this.parseName();const a=this.parseImplementsInterfaces();const n=this.parseConstDirectives();const i=this.parseFieldsDefinition();if(a.length===0&&n.length===0&&i.length===0){throw this.unexpected()}return this.node(e,{kind:p.Kind.INTERFACE_TYPE_EXTENSION,name:t,interfaces:a,directives:n,fields:i})}parseUnionTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("union");const t=this.parseName();const a=this.parseConstDirectives();const n=this.parseUnionMemberTypes();if(a.length===0&&n.length===0){throw this.unexpected()}return this.node(e,{kind:p.Kind.UNION_TYPE_EXTENSION,name:t,directives:a,types:n})}parseEnumTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("enum");const t=this.parseName();const a=this.parseConstDirectives();const n=this.parseEnumValuesDefinition();if(a.length===0&&n.length===0){throw this.unexpected()}return this.node(e,{kind:p.Kind.ENUM_TYPE_EXTENSION,name:t,directives:a,values:n})}parseInputObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("input");const t=this.parseName();const a=this.parseConstDirectives();const n=this.parseInputFieldsDefinition();if(a.length===0&&n.length===0){throw this.unexpected()}return this.node(e,{kind:p.Kind.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:a,fields:n})}parseDirectiveDefinition(){const e=this._lexer.token;const t=this.parseDescription();this.expectKeyword("directive");this.expectToken(o.TokenKind.AT);const a=this.parseName();const n=this.parseArgumentDefs();const i=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const r=this.parseDirectiveLocations();return this.node(e,{kind:p.Kind.DIRECTIVE_DEFINITION,description:t,name:a,arguments:n,repeatable:i,locations:r})}parseDirectiveLocations(){return this.delimitedMany(o.TokenKind.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const e=this._lexer.token;const t=this.parseName();if(Object.prototype.hasOwnProperty.call(r.DirectiveLocation,t.value)){return t}throw this.unexpected(e)}node(e,t){if(this._options.noLocation!==true){t.loc=new i.Location(e,this._lexer.lastToken,this._lexer.source)}return t}peek(e){return this._lexer.token.kind===e}expectToken(e){const t=this._lexer.token;if(t.kind===e){this.advanceLexer();return t}throw(0,n.syntaxError)(this._lexer.source,t.start,`Expected ${getTokenKindDesc(e)}, found ${getTokenDesc(t)}.`)}expectOptionalToken(e){const t=this._lexer.token;if(t.kind===e){this.advanceLexer();return true}return false}expectKeyword(e){const t=this._lexer.token;if(t.kind===o.TokenKind.NAME&&t.value===e){this.advanceLexer()}else{throw(0,n.syntaxError)(this._lexer.source,t.start,`Expected "${e}", found ${getTokenDesc(t)}.`)}}expectOptionalKeyword(e){const t=this._lexer.token;if(t.kind===o.TokenKind.NAME&&t.value===e){this.advanceLexer();return true}return false}unexpected(e){const t=e!==null&&e!==void 0?e:this._lexer.token;return(0,n.syntaxError)(this._lexer.source,t.start,`Unexpected ${getTokenDesc(t)}.`)}any(e,t,a){this.expectToken(e);const n=[];while(!this.expectOptionalToken(a)){n.push(t.call(this))}return n}optionalMany(e,t,a){if(this.expectOptionalToken(e)){const e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(a));return e}return[]}many(e,t,a){this.expectToken(e);const n=[];do{n.push(t.call(this))}while(!this.expectOptionalToken(a));return n}delimitedMany(e,t){this.expectOptionalToken(e);const a=[];do{a.push(t.call(this))}while(this.expectOptionalToken(e));return a}advanceLexer(){const{maxTokens:e}=this._options;const t=this._lexer.advance();if(e!==undefined&&t.kind!==o.TokenKind.EOF){++this._tokenCounter;if(this._tokenCounter>e){throw(0,n.syntaxError)(this._lexer.source,t.start,`Document contains more that ${e} tokens. Parsing aborted.`)}}}}t.Parser=Parser;function getTokenDesc(e){const t=e.value;return getTokenKindDesc(e.kind)+(t!=null?` "${t}"`:"")}function getTokenKindDesc(e){return(0,d.isPunctuatorTokenKind)(e)?`"${e}"`:e}},2617:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isConstValueNode=isConstValueNode;t.isDefinitionNode=isDefinitionNode;t.isExecutableDefinitionNode=isExecutableDefinitionNode;t.isSelectionNode=isSelectionNode;t.isTypeDefinitionNode=isTypeDefinitionNode;t.isTypeExtensionNode=isTypeExtensionNode;t.isTypeNode=isTypeNode;t.isTypeSystemDefinitionNode=isTypeSystemDefinitionNode;t.isTypeSystemExtensionNode=isTypeSystemExtensionNode;t.isValueNode=isValueNode;var n=a(5223);function isDefinitionNode(e){return isExecutableDefinitionNode(e)||isTypeSystemDefinitionNode(e)||isTypeSystemExtensionNode(e)}function isExecutableDefinitionNode(e){return e.kind===n.Kind.OPERATION_DEFINITION||e.kind===n.Kind.FRAGMENT_DEFINITION}function isSelectionNode(e){return e.kind===n.Kind.FIELD||e.kind===n.Kind.FRAGMENT_SPREAD||e.kind===n.Kind.INLINE_FRAGMENT}function isValueNode(e){return e.kind===n.Kind.VARIABLE||e.kind===n.Kind.INT||e.kind===n.Kind.FLOAT||e.kind===n.Kind.STRING||e.kind===n.Kind.BOOLEAN||e.kind===n.Kind.NULL||e.kind===n.Kind.ENUM||e.kind===n.Kind.LIST||e.kind===n.Kind.OBJECT}function isConstValueNode(e){return isValueNode(e)&&(e.kind===n.Kind.LIST?e.values.some(isConstValueNode):e.kind===n.Kind.OBJECT?e.fields.some((e=>isConstValueNode(e.value))):e.kind!==n.Kind.VARIABLE)}function isTypeNode(e){return e.kind===n.Kind.NAMED_TYPE||e.kind===n.Kind.LIST_TYPE||e.kind===n.Kind.NON_NULL_TYPE}function isTypeSystemDefinitionNode(e){return e.kind===n.Kind.SCHEMA_DEFINITION||isTypeDefinitionNode(e)||e.kind===n.Kind.DIRECTIVE_DEFINITION}function isTypeDefinitionNode(e){return e.kind===n.Kind.SCALAR_TYPE_DEFINITION||e.kind===n.Kind.OBJECT_TYPE_DEFINITION||e.kind===n.Kind.INTERFACE_TYPE_DEFINITION||e.kind===n.Kind.UNION_TYPE_DEFINITION||e.kind===n.Kind.ENUM_TYPE_DEFINITION||e.kind===n.Kind.INPUT_OBJECT_TYPE_DEFINITION}function isTypeSystemExtensionNode(e){return e.kind===n.Kind.SCHEMA_EXTENSION||isTypeExtensionNode(e)}function isTypeExtensionNode(e){return e.kind===n.Kind.SCALAR_TYPE_EXTENSION||e.kind===n.Kind.OBJECT_TYPE_EXTENSION||e.kind===n.Kind.INTERFACE_TYPE_EXTENSION||e.kind===n.Kind.UNION_TYPE_EXTENSION||e.kind===n.Kind.ENUM_TYPE_EXTENSION||e.kind===n.Kind.INPUT_OBJECT_TYPE_EXTENSION}},3993:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.printLocation=printLocation;t.printSourceLocation=printSourceLocation;var n=a(4068);function printLocation(e){return printSourceLocation(e.source,(0,n.getLocation)(e.source,e.start))}function printSourceLocation(e,t){const a=e.locationOffset.column-1;const n="".padStart(a)+e.body;const i=t.line-1;const r=e.locationOffset.line-1;const p=t.line+r;const d=t.line===1?a:0;const s=t.column+d;const o=`${e.name}:${p}:${s}\n`;const l=n.split(/\r\n|[\n\r]/g);const u=l[i];if(u.length>120){const e=Math.floor(s/80);const t=s%80;const a=[];for(let e=0;e<u.length;e+=80){a.push(u.slice(e,e+80))}return o+printPrefixedLines([[`${p} |`,a[0]],...a.slice(1,e+1).map((e=>["|",e])),["|","^".padStart(t)],["|",a[e+1]]])}return o+printPrefixedLines([[`${p-1} |`,l[i-1]],[`${p} |`,u],["|","^".padStart(s)],[`${p+1} |`,l[i+1]]])}function printPrefixedLines(e){const t=e.filter((([e,t])=>t!==undefined));const a=Math.max(...t.map((([e])=>e.length)));return t.map((([e,t])=>e.padStart(a)+(t?" "+t:""))).join("\n")}},7490:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.printString=printString;function printString(e){return`"${e.replace(a,escapedReplacer)}"`}const a=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function escapedReplacer(e){return n[e.charCodeAt(0)]}const n=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"]},4359:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.print=print;var n=a(2900);var i=a(7490);var r=a(6586);function print(e){return(0,r.visit)(e,d)}const p=80;const d={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>join(e.definitions,"\n\n")},OperationDefinition:{leave(e){const t=wrap("(",join(e.variableDefinitions,", "),")");const a=join([e.operation,join([e.name,t]),join(e.directives," ")]," ");return(a==="query"?"":a+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:a,directives:n})=>e+": "+t+wrap(" = ",a)+wrap(" ",join(n," "))},SelectionSet:{leave:({selections:e})=>block(e)},Field:{leave({alias:e,name:t,arguments:a,directives:n,selectionSet:i}){const r=wrap("",e,": ")+t;let d=r+wrap("(",join(a,", "),")");if(d.length>p){d=r+wrap("(\n",indent(join(a,"\n")),"\n)")}return join([d,join(n," "),i]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+wrap(" ",join(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:a})=>join(["...",wrap("on ",e),join(t," "),a]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:a,directives:n,selectionSet:i})=>`fragment ${e}${wrap("(",join(a,", "),")")} `+`on ${t} ${wrap("",join(n," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?(0,n.printBlockString)(e):(0,i.printString)(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+join(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+join(e,", ")+"}"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+wrap("(",join(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:a})=>wrap("",e,"\n")+join(["schema",join(t," "),block(a)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:a})=>wrap("",e,"\n")+join(["scalar",t,join(a," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:a,directives:n,fields:i})=>wrap("",e,"\n")+join(["type",t,wrap("implements ",join(a," & ")),join(n," "),block(i)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:a,type:n,directives:i})=>wrap("",e,"\n")+t+(hasMultilineItems(a)?wrap("(\n",indent(join(a,"\n")),"\n)"):wrap("(",join(a,", "),")"))+": "+n+wrap(" ",join(i," "))},InputValueDefinition:{leave:({description:e,name:t,type:a,defaultValue:n,directives:i})=>wrap("",e,"\n")+join([t+": "+a,wrap("= ",n),join(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:a,directives:n,fields:i})=>wrap("",e,"\n")+join(["interface",t,wrap("implements ",join(a," & ")),join(n," "),block(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:a,types:n})=>wrap("",e,"\n")+join(["union",t,join(a," "),wrap("= ",join(n," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:a,values:n})=>wrap("",e,"\n")+join(["enum",t,join(a," "),block(n)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:a})=>wrap("",e,"\n")+join([t,join(a," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:a,fields:n})=>wrap("",e,"\n")+join(["input",t,join(a," "),block(n)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:a,repeatable:n,locations:i})=>wrap("",e,"\n")+"directive @"+t+(hasMultilineItems(a)?wrap("(\n",indent(join(a,"\n")),"\n)"):wrap("(",join(a,", "),")"))+(n?" repeatable":"")+" on "+join(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>join(["extend schema",join(e," "),block(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>join(["extend scalar",e,join(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:a,fields:n})=>join(["extend type",e,wrap("implements ",join(t," & ")),join(a," "),block(n)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:a,fields:n})=>join(["extend interface",e,wrap("implements ",join(t," & ")),join(a," "),block(n)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:a})=>join(["extend union",e,join(t," "),wrap("= ",join(a," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:a})=>join(["extend enum",e,join(t," "),block(a)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:a})=>join(["extend input",e,join(t," "),block(a)]," ")}};function join(e,t=""){var a;return(a=e===null||e===void 0?void 0:e.filter((e=>e)).join(t))!==null&&a!==void 0?a:""}function block(e){return wrap("{\n",indent(join(e,"\n")),"\n}")}function wrap(e,t,a=""){return t!=null&&t!==""?e+t+a:""}function indent(e){return wrap("  ",e.replace(/\n/g,"\n  "))}function hasMultilineItems(e){var t;return(t=e===null||e===void 0?void 0:e.some((e=>e.includes("\n"))))!==null&&t!==void 0?t:false}},752:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Source=void 0;t.isSource=isSource;var n=a(3387);var i=a(6767);var r=a(2219);class Source{constructor(e,t="GraphQL request",a={line:1,column:1}){typeof e==="string"||(0,n.devAssert)(false,`Body must be a string. Received: ${(0,i.inspect)(e)}.`);this.body=e;this.name=t;this.locationOffset=a;this.locationOffset.line>0||(0,n.devAssert)(false,"line in locationOffset is 1-indexed and must be positive.");this.locationOffset.column>0||(0,n.devAssert)(false,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}t.Source=Source;function isSource(e){return(0,r.instanceOf)(e,Source)}},1557:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.TokenKind=void 0;var a;t.TokenKind=a;(function(e){e["SOF"]="<SOF>";e["EOF"]="<EOF>";e["BANG"]="!";e["DOLLAR"]="$";e["AMP"]="&";e["PAREN_L"]="(";e["PAREN_R"]=")";e["SPREAD"]="...";e["COLON"]=":";e["EQUALS"]="=";e["AT"]="@";e["BRACKET_L"]="[";e["BRACKET_R"]="]";e["BRACE_L"]="{";e["PIPE"]="|";e["BRACE_R"]="}";e["NAME"]="Name";e["INT"]="Int";e["FLOAT"]="Float";e["STRING"]="String";e["BLOCK_STRING"]="BlockString";e["COMMENT"]="Comment"})(a||(t.TokenKind=a={}))},6586:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.BREAK=void 0;t.getEnterLeaveForKind=getEnterLeaveForKind;t.getVisitFn=getVisitFn;t.visit=visit;t.visitInParallel=visitInParallel;var n=a(3387);var i=a(6767);var r=a(9622);var p=a(5223);const d=Object.freeze({});t.BREAK=d;function visit(e,t,a=r.QueryDocumentKeys){const s=new Map;for(const e of Object.values(p.Kind)){s.set(e,getEnterLeaveForKind(t,e))}let o=undefined;let l=Array.isArray(e);let u=[e];let c=-1;let m=[];let f=e;let v=undefined;let h=undefined;const y=[];const T=[];do{c++;const e=c===u.length;const p=e&&m.length!==0;if(e){v=T.length===0?undefined:y[y.length-1];f=h;h=T.pop();if(p){if(l){f=f.slice();let e=0;for(const[t,a]of m){const n=t-e;if(a===null){f.splice(n,1);e++}else{f[n]=a}}}else{f=Object.defineProperties({},Object.getOwnPropertyDescriptors(f));for(const[e,t]of m){f[e]=t}}}c=o.index;u=o.keys;m=o.edits;l=o.inArray;o=o.prev}else if(h){v=l?c:u[c];f=h[v];if(f===null||f===undefined){continue}y.push(v)}let _;if(!Array.isArray(f)){var b,g;(0,r.isNode)(f)||(0,n.devAssert)(false,`Invalid AST Node: ${(0,i.inspect)(f)}.`);const a=e?(b=s.get(f.kind))===null||b===void 0?void 0:b.leave:(g=s.get(f.kind))===null||g===void 0?void 0:g.enter;_=a===null||a===void 0?void 0:a.call(t,f,v,h,y,T);if(_===d){break}if(_===false){if(!e){y.pop();continue}}else if(_!==undefined){m.push([v,_]);if(!e){if((0,r.isNode)(_)){f=_}else{y.pop();continue}}}}if(_===undefined&&p){m.push([v,f])}if(e){y.pop()}else{var N;o={inArray:l,index:c,keys:u,edits:m,prev:o};l=Array.isArray(f);u=l?f:(N=a[f.kind])!==null&&N!==void 0?N:[];c=-1;m=[];if(h){T.push(h)}h=f}}while(o!==undefined);if(m.length!==0){return m[m.length-1][1]}return e}function visitInParallel(e){const t=new Array(e.length).fill(null);const a=Object.create(null);for(const n of Object.values(p.Kind)){let i=false;const r=new Array(e.length).fill(undefined);const p=new Array(e.length).fill(undefined);for(let t=0;t<e.length;++t){const{enter:a,leave:d}=getEnterLeaveForKind(e[t],n);i||(i=a!=null||d!=null);r[t]=a;p[t]=d}if(!i){continue}const s={enter(...a){const n=a[0];for(let p=0;p<e.length;p++){if(t[p]===null){var i;const s=(i=r[p])===null||i===void 0?void 0:i.apply(e[p],a);if(s===false){t[p]=n}else if(s===d){t[p]=d}else if(s!==undefined){return s}}}},leave(...a){const n=a[0];for(let r=0;r<e.length;r++){if(t[r]===null){var i;const n=(i=p[r])===null||i===void 0?void 0:i.apply(e[r],a);if(n===d){t[r]=d}else if(n!==undefined&&n!==false){return n}}else if(t[r]===n){t[r]=null}}}};a[n]=s}return a}function getEnterLeaveForKind(e,t){const a=e[t];if(typeof a==="object"){return a}else if(typeof a==="function"){return{enter:a,leave:undefined}}return{enter:e.enter,leave:e.leave}}function getVisitFn(e,t,a){const{enter:n,leave:i}=getEnterLeaveForKind(e,t);return a?i:n}},9247:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.assertEnumValueName=assertEnumValueName;t.assertName=assertName;var n=a(3387);var i=a(3919);var r=a(6793);function assertName(e){e!=null||(0,n.devAssert)(false,"Must provide name.");typeof e==="string"||(0,n.devAssert)(false,"Expected name to be a string.");if(e.length===0){throw new i.GraphQLError("Expected name to be a non-empty string.")}for(let t=1;t<e.length;++t){if(!(0,r.isNameContinue)(e.charCodeAt(t))){throw new i.GraphQLError(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`)}}if(!(0,r.isNameStart)(e.charCodeAt(0))){throw new i.GraphQLError(`Names must start with [_a-zA-Z] but "${e}" does not.`)}return e}function assertEnumValueName(e){if(e==="true"||e==="false"||e==="null"){throw new i.GraphQLError(`Enum values cannot be named: ${e}`)}return assertName(e)}},2739:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.GraphQLUnionType=t.GraphQLScalarType=t.GraphQLObjectType=t.GraphQLNonNull=t.GraphQLList=t.GraphQLInterfaceType=t.GraphQLInputObjectType=t.GraphQLEnumType=void 0;t.argsToArgsConfig=argsToArgsConfig;t.assertAbstractType=assertAbstractType;t.assertCompositeType=assertCompositeType;t.assertEnumType=assertEnumType;t.assertInputObjectType=assertInputObjectType;t.assertInputType=assertInputType;t.assertInterfaceType=assertInterfaceType;t.assertLeafType=assertLeafType;t.assertListType=assertListType;t.assertNamedType=assertNamedType;t.assertNonNullType=assertNonNullType;t.assertNullableType=assertNullableType;t.assertObjectType=assertObjectType;t.assertOutputType=assertOutputType;t.assertScalarType=assertScalarType;t.assertType=assertType;t.assertUnionType=assertUnionType;t.assertWrappingType=assertWrappingType;t.defineArguments=defineArguments;t.getNamedType=getNamedType;t.getNullableType=getNullableType;t.isAbstractType=isAbstractType;t.isCompositeType=isCompositeType;t.isEnumType=isEnumType;t.isInputObjectType=isInputObjectType;t.isInputType=isInputType;t.isInterfaceType=isInterfaceType;t.isLeafType=isLeafType;t.isListType=isListType;t.isNamedType=isNamedType;t.isNonNullType=isNonNullType;t.isNullableType=isNullableType;t.isObjectType=isObjectType;t.isOutputType=isOutputType;t.isRequiredArgument=isRequiredArgument;t.isRequiredInputField=isRequiredInputField;t.isScalarType=isScalarType;t.isType=isType;t.isUnionType=isUnionType;t.isWrappingType=isWrappingType;t.resolveObjMapThunk=resolveObjMapThunk;t.resolveReadonlyArrayThunk=resolveReadonlyArrayThunk;var n=a(3387);var i=a(277);var r=a(494);var p=a(6767);var d=a(2219);var s=a(1589);var o=a(52);var l=a(1154);var u=a(5193);var c=a(1664);var m=a(3937);var f=a(3919);var v=a(5223);var h=a(4359);var y=a(9354);var T=a(9247);function isType(e){return isScalarType(e)||isObjectType(e)||isInterfaceType(e)||isUnionType(e)||isEnumType(e)||isInputObjectType(e)||isListType(e)||isNonNullType(e)}function assertType(e){if(!isType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL type.`)}return e}function isScalarType(e){return(0,d.instanceOf)(e,GraphQLScalarType)}function assertScalarType(e){if(!isScalarType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL Scalar type.`)}return e}function isObjectType(e){return(0,d.instanceOf)(e,GraphQLObjectType)}function assertObjectType(e){if(!isObjectType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL Object type.`)}return e}function isInterfaceType(e){return(0,d.instanceOf)(e,GraphQLInterfaceType)}function assertInterfaceType(e){if(!isInterfaceType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL Interface type.`)}return e}function isUnionType(e){return(0,d.instanceOf)(e,GraphQLUnionType)}function assertUnionType(e){if(!isUnionType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL Union type.`)}return e}function isEnumType(e){return(0,d.instanceOf)(e,GraphQLEnumType)}function assertEnumType(e){if(!isEnumType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL Enum type.`)}return e}function isInputObjectType(e){return(0,d.instanceOf)(e,GraphQLInputObjectType)}function assertInputObjectType(e){if(!isInputObjectType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL Input Object type.`)}return e}function isListType(e){return(0,d.instanceOf)(e,GraphQLList)}function assertListType(e){if(!isListType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL List type.`)}return e}function isNonNullType(e){return(0,d.instanceOf)(e,GraphQLNonNull)}function assertNonNullType(e){if(!isNonNullType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL Non-Null type.`)}return e}function isInputType(e){return isScalarType(e)||isEnumType(e)||isInputObjectType(e)||isWrappingType(e)&&isInputType(e.ofType)}function assertInputType(e){if(!isInputType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL input type.`)}return e}function isOutputType(e){return isScalarType(e)||isObjectType(e)||isInterfaceType(e)||isUnionType(e)||isEnumType(e)||isWrappingType(e)&&isOutputType(e.ofType)}function assertOutputType(e){if(!isOutputType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL output type.`)}return e}function isLeafType(e){return isScalarType(e)||isEnumType(e)}function assertLeafType(e){if(!isLeafType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL leaf type.`)}return e}function isCompositeType(e){return isObjectType(e)||isInterfaceType(e)||isUnionType(e)}function assertCompositeType(e){if(!isCompositeType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL composite type.`)}return e}function isAbstractType(e){return isInterfaceType(e)||isUnionType(e)}function assertAbstractType(e){if(!isAbstractType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL abstract type.`)}return e}class GraphQLList{constructor(e){isType(e)||(0,n.devAssert)(false,`Expected ${(0,p.inspect)(e)} to be a GraphQL type.`);this.ofType=e}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}t.GraphQLList=GraphQLList;class GraphQLNonNull{constructor(e){isNullableType(e)||(0,n.devAssert)(false,`Expected ${(0,p.inspect)(e)} to be a GraphQL nullable type.`);this.ofType=e}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}t.GraphQLNonNull=GraphQLNonNull;function isWrappingType(e){return isListType(e)||isNonNullType(e)}function assertWrappingType(e){if(!isWrappingType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL wrapping type.`)}return e}function isNullableType(e){return isType(e)&&!isNonNullType(e)}function assertNullableType(e){if(!isNullableType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL nullable type.`)}return e}function getNullableType(e){if(e){return isNonNullType(e)?e.ofType:e}}function isNamedType(e){return isScalarType(e)||isObjectType(e)||isInterfaceType(e)||isUnionType(e)||isEnumType(e)||isInputObjectType(e)}function assertNamedType(e){if(!isNamedType(e)){throw new Error(`Expected ${(0,p.inspect)(e)} to be a GraphQL named type.`)}return e}function getNamedType(e){if(e){let t=e;while(isWrappingType(t)){t=t.ofType}return t}}function resolveReadonlyArrayThunk(e){return typeof e==="function"?e():e}function resolveObjMapThunk(e){return typeof e==="function"?e():e}class GraphQLScalarType{constructor(e){var t,a,i,d;const s=(t=e.parseValue)!==null&&t!==void 0?t:r.identityFunc;this.name=(0,T.assertName)(e.name);this.description=e.description;this.specifiedByURL=e.specifiedByURL;this.serialize=(a=e.serialize)!==null&&a!==void 0?a:r.identityFunc;this.parseValue=s;this.parseLiteral=(i=e.parseLiteral)!==null&&i!==void 0?i:(e,t)=>s((0,y.valueFromASTUntyped)(e,t));this.extensions=(0,m.toObjMap)(e.extensions);this.astNode=e.astNode;this.extensionASTNodes=(d=e.extensionASTNodes)!==null&&d!==void 0?d:[];e.specifiedByURL==null||typeof e.specifiedByURL==="string"||(0,n.devAssert)(false,`${this.name} must provide "specifiedByURL" as a string, `+`but got: ${(0,p.inspect)(e.specifiedByURL)}.`);e.serialize==null||typeof e.serialize==="function"||(0,n.devAssert)(false,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`);if(e.parseLiteral){typeof e.parseValue==="function"&&typeof e.parseLiteral==="function"||(0,n.devAssert)(false,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`)}}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}t.GraphQLScalarType=GraphQLScalarType;class GraphQLObjectType{constructor(e){var t;this.name=(0,T.assertName)(e.name);this.description=e.description;this.isTypeOf=e.isTypeOf;this.extensions=(0,m.toObjMap)(e.extensions);this.astNode=e.astNode;this.extensionASTNodes=(t=e.extensionASTNodes)!==null&&t!==void 0?t:[];this._fields=()=>defineFieldMap(e);this._interfaces=()=>defineInterfaces(e);e.isTypeOf==null||typeof e.isTypeOf==="function"||(0,n.devAssert)(false,`${this.name} must provide "isTypeOf" as a function, `+`but got: ${(0,p.inspect)(e.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){if(typeof this._fields==="function"){this._fields=this._fields()}return this._fields}getInterfaces(){if(typeof this._interfaces==="function"){this._interfaces=this._interfaces()}return this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:fieldsToFieldsConfig(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}t.GraphQLObjectType=GraphQLObjectType;function defineInterfaces(e){var t;const a=resolveReadonlyArrayThunk((t=e.interfaces)!==null&&t!==void 0?t:[]);Array.isArray(a)||(0,n.devAssert)(false,`${e.name} interfaces must be an Array or a function which returns an Array.`);return a}function defineFieldMap(e){const t=resolveObjMapThunk(e.fields);isPlainObj(t)||(0,n.devAssert)(false,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`);return(0,u.mapValue)(t,((t,a)=>{var i;isPlainObj(t)||(0,n.devAssert)(false,`${e.name}.${a} field config must be an object.`);t.resolve==null||typeof t.resolve==="function"||(0,n.devAssert)(false,`${e.name}.${a} field resolver must be a function if `+`provided, but got: ${(0,p.inspect)(t.resolve)}.`);const r=(i=t.args)!==null&&i!==void 0?i:{};isPlainObj(r)||(0,n.devAssert)(false,`${e.name}.${a} args must be an object with argument names as keys.`);return{name:(0,T.assertName)(a),description:t.description,type:t.type,args:defineArguments(r),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:(0,m.toObjMap)(t.extensions),astNode:t.astNode}}))}function defineArguments(e){return Object.entries(e).map((([e,t])=>({name:(0,T.assertName)(e),description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:(0,m.toObjMap)(t.extensions),astNode:t.astNode})))}function isPlainObj(e){return(0,s.isObjectLike)(e)&&!Array.isArray(e)}function fieldsToFieldsConfig(e){return(0,u.mapValue)(e,(e=>({description:e.description,type:e.type,args:argsToArgsConfig(e.args),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function argsToArgsConfig(e){return(0,l.keyValMap)(e,(e=>e.name),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function isRequiredArgument(e){return isNonNullType(e.type)&&e.defaultValue===undefined}class GraphQLInterfaceType{constructor(e){var t;this.name=(0,T.assertName)(e.name);this.description=e.description;this.resolveType=e.resolveType;this.extensions=(0,m.toObjMap)(e.extensions);this.astNode=e.astNode;this.extensionASTNodes=(t=e.extensionASTNodes)!==null&&t!==void 0?t:[];this._fields=defineFieldMap.bind(undefined,e);this._interfaces=defineInterfaces.bind(undefined,e);e.resolveType==null||typeof e.resolveType==="function"||(0,n.devAssert)(false,`${this.name} must provide "resolveType" as a function, `+`but got: ${(0,p.inspect)(e.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){if(typeof this._fields==="function"){this._fields=this._fields()}return this._fields}getInterfaces(){if(typeof this._interfaces==="function"){this._interfaces=this._interfaces()}return this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:fieldsToFieldsConfig(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}t.GraphQLInterfaceType=GraphQLInterfaceType;class GraphQLUnionType{constructor(e){var t;this.name=(0,T.assertName)(e.name);this.description=e.description;this.resolveType=e.resolveType;this.extensions=(0,m.toObjMap)(e.extensions);this.astNode=e.astNode;this.extensionASTNodes=(t=e.extensionASTNodes)!==null&&t!==void 0?t:[];this._types=defineTypes.bind(undefined,e);e.resolveType==null||typeof e.resolveType==="function"||(0,n.devAssert)(false,`${this.name} must provide "resolveType" as a function, `+`but got: ${(0,p.inspect)(e.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){if(typeof this._types==="function"){this._types=this._types()}return this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}t.GraphQLUnionType=GraphQLUnionType;function defineTypes(e){const t=resolveReadonlyArrayThunk(e.types);Array.isArray(t)||(0,n.devAssert)(false,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`);return t}class GraphQLEnumType{constructor(e){var t;this.name=(0,T.assertName)(e.name);this.description=e.description;this.extensions=(0,m.toObjMap)(e.extensions);this.astNode=e.astNode;this.extensionASTNodes=(t=e.extensionASTNodes)!==null&&t!==void 0?t:[];this._values=defineEnumValues(this.name,e.values);this._valueLookup=new Map(this._values.map((e=>[e.value,e])));this._nameLookup=(0,o.keyMap)(this._values,(e=>e.name))}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(e){return this._nameLookup[e]}serialize(e){const t=this._valueLookup.get(e);if(t===undefined){throw new f.GraphQLError(`Enum "${this.name}" cannot represent value: ${(0,p.inspect)(e)}`)}return t.name}parseValue(e){if(typeof e!=="string"){const t=(0,p.inspect)(e);throw new f.GraphQLError(`Enum "${this.name}" cannot represent non-string value: ${t}.`+didYouMeanEnumValue(this,t))}const t=this.getValue(e);if(t==null){throw new f.GraphQLError(`Value "${e}" does not exist in "${this.name}" enum.`+didYouMeanEnumValue(this,e))}return t.value}parseLiteral(e,t){if(e.kind!==v.Kind.ENUM){const t=(0,h.print)(e);throw new f.GraphQLError(`Enum "${this.name}" cannot represent non-enum value: ${t}.`+didYouMeanEnumValue(this,t),{nodes:e})}const a=this.getValue(e.value);if(a==null){const t=(0,h.print)(e);throw new f.GraphQLError(`Value "${t}" does not exist in "${this.name}" enum.`+didYouMeanEnumValue(this,t),{nodes:e})}return a.value}toConfig(){const e=(0,l.keyValMap)(this.getValues(),(e=>e.name),(e=>({description:e.description,value:e.value,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,values:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}t.GraphQLEnumType=GraphQLEnumType;function didYouMeanEnumValue(e,t){const a=e.getValues().map((e=>e.name));const n=(0,c.suggestionList)(t,a);return(0,i.didYouMean)("the enum value",n)}function defineEnumValues(e,t){isPlainObj(t)||(0,n.devAssert)(false,`${e} values must be an object with value names as keys.`);return Object.entries(t).map((([t,a])=>{isPlainObj(a)||(0,n.devAssert)(false,`${e}.${t} must refer to an object with a "value" key `+`representing an internal value but got: ${(0,p.inspect)(a)}.`);return{name:(0,T.assertEnumValueName)(t),description:a.description,value:a.value!==undefined?a.value:t,deprecationReason:a.deprecationReason,extensions:(0,m.toObjMap)(a.extensions),astNode:a.astNode}}))}class GraphQLInputObjectType{constructor(e){var t;this.name=(0,T.assertName)(e.name);this.description=e.description;this.extensions=(0,m.toObjMap)(e.extensions);this.astNode=e.astNode;this.extensionASTNodes=(t=e.extensionASTNodes)!==null&&t!==void 0?t:[];this._fields=defineInputFieldMap.bind(undefined,e)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){if(typeof this._fields==="function"){this._fields=this._fields()}return this._fields}toConfig(){const e=(0,u.mapValue)(this.getFields(),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,fields:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}t.GraphQLInputObjectType=GraphQLInputObjectType;function defineInputFieldMap(e){const t=resolveObjMapThunk(e.fields);isPlainObj(t)||(0,n.devAssert)(false,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`);return(0,u.mapValue)(t,((t,a)=>{!("resolve"in t)||(0,n.devAssert)(false,`${e.name}.${a} field has a resolve property, but Input Types cannot define resolvers.`);return{name:(0,T.assertName)(a),description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:(0,m.toObjMap)(t.extensions),astNode:t.astNode}}))}function isRequiredInputField(e){return isNonNullType(e.type)&&e.defaultValue===undefined}},1426:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.GraphQLSpecifiedByDirective=t.GraphQLSkipDirective=t.GraphQLIncludeDirective=t.GraphQLDirective=t.GraphQLDeprecatedDirective=t.DEFAULT_DEPRECATION_REASON=void 0;t.assertDirective=assertDirective;t.isDirective=isDirective;t.isSpecifiedDirective=isSpecifiedDirective;t.specifiedDirectives=void 0;var n=a(3387);var i=a(6767);var r=a(2219);var p=a(1589);var d=a(3937);var s=a(3134);var o=a(9247);var l=a(2739);var u=a(1922);function isDirective(e){return(0,r.instanceOf)(e,GraphQLDirective)}function assertDirective(e){if(!isDirective(e)){throw new Error(`Expected ${(0,i.inspect)(e)} to be a GraphQL directive.`)}return e}class GraphQLDirective{constructor(e){var t,a;this.name=(0,o.assertName)(e.name);this.description=e.description;this.locations=e.locations;this.isRepeatable=(t=e.isRepeatable)!==null&&t!==void 0?t:false;this.extensions=(0,d.toObjMap)(e.extensions);this.astNode=e.astNode;Array.isArray(e.locations)||(0,n.devAssert)(false,`@${e.name} locations must be an Array.`);const i=(a=e.args)!==null&&a!==void 0?a:{};(0,p.isObjectLike)(i)&&!Array.isArray(i)||(0,n.devAssert)(false,`@${e.name} args must be an object with argument names as keys.`);this.args=(0,l.defineArguments)(i)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:(0,l.argsToArgsConfig)(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}t.GraphQLDirective=GraphQLDirective;const c=new GraphQLDirective({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[s.DirectiveLocation.FIELD,s.DirectiveLocation.FRAGMENT_SPREAD,s.DirectiveLocation.INLINE_FRAGMENT],args:{if:{type:new l.GraphQLNonNull(u.GraphQLBoolean),description:"Included when true."}}});t.GraphQLIncludeDirective=c;const m=new GraphQLDirective({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[s.DirectiveLocation.FIELD,s.DirectiveLocation.FRAGMENT_SPREAD,s.DirectiveLocation.INLINE_FRAGMENT],args:{if:{type:new l.GraphQLNonNull(u.GraphQLBoolean),description:"Skipped when true."}}});t.GraphQLSkipDirective=m;const f="No longer supported";t.DEFAULT_DEPRECATION_REASON=f;const v=new GraphQLDirective({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[s.DirectiveLocation.FIELD_DEFINITION,s.DirectiveLocation.ARGUMENT_DEFINITION,s.DirectiveLocation.INPUT_FIELD_DEFINITION,s.DirectiveLocation.ENUM_VALUE],args:{reason:{type:u.GraphQLString,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:f}}});t.GraphQLDeprecatedDirective=v;const h=new GraphQLDirective({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[s.DirectiveLocation.SCALAR],args:{url:{type:new l.GraphQLNonNull(u.GraphQLString),description:"The URL that specifies the behavior of this scalar."}}});t.GraphQLSpecifiedByDirective=h;const y=Object.freeze([c,m,v,h]);t.specifiedDirectives=y;function isSpecifiedDirective(e){return y.some((({name:t})=>t===e.name))}},553:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"DEFAULT_DEPRECATION_REASON",{enumerable:true,get:function(){return r.DEFAULT_DEPRECATION_REASON}});Object.defineProperty(t,"GRAPHQL_MAX_INT",{enumerable:true,get:function(){return p.GRAPHQL_MAX_INT}});Object.defineProperty(t,"GRAPHQL_MIN_INT",{enumerable:true,get:function(){return p.GRAPHQL_MIN_INT}});Object.defineProperty(t,"GraphQLBoolean",{enumerable:true,get:function(){return p.GraphQLBoolean}});Object.defineProperty(t,"GraphQLDeprecatedDirective",{enumerable:true,get:function(){return r.GraphQLDeprecatedDirective}});Object.defineProperty(t,"GraphQLDirective",{enumerable:true,get:function(){return r.GraphQLDirective}});Object.defineProperty(t,"GraphQLEnumType",{enumerable:true,get:function(){return i.GraphQLEnumType}});Object.defineProperty(t,"GraphQLFloat",{enumerable:true,get:function(){return p.GraphQLFloat}});Object.defineProperty(t,"GraphQLID",{enumerable:true,get:function(){return p.GraphQLID}});Object.defineProperty(t,"GraphQLIncludeDirective",{enumerable:true,get:function(){return r.GraphQLIncludeDirective}});Object.defineProperty(t,"GraphQLInputObjectType",{enumerable:true,get:function(){return i.GraphQLInputObjectType}});Object.defineProperty(t,"GraphQLInt",{enumerable:true,get:function(){return p.GraphQLInt}});Object.defineProperty(t,"GraphQLInterfaceType",{enumerable:true,get:function(){return i.GraphQLInterfaceType}});Object.defineProperty(t,"GraphQLList",{enumerable:true,get:function(){return i.GraphQLList}});Object.defineProperty(t,"GraphQLNonNull",{enumerable:true,get:function(){return i.GraphQLNonNull}});Object.defineProperty(t,"GraphQLObjectType",{enumerable:true,get:function(){return i.GraphQLObjectType}});Object.defineProperty(t,"GraphQLScalarType",{enumerable:true,get:function(){return i.GraphQLScalarType}});Object.defineProperty(t,"GraphQLSchema",{enumerable:true,get:function(){return n.GraphQLSchema}});Object.defineProperty(t,"GraphQLSkipDirective",{enumerable:true,get:function(){return r.GraphQLSkipDirective}});Object.defineProperty(t,"GraphQLSpecifiedByDirective",{enumerable:true,get:function(){return r.GraphQLSpecifiedByDirective}});Object.defineProperty(t,"GraphQLString",{enumerable:true,get:function(){return p.GraphQLString}});Object.defineProperty(t,"GraphQLUnionType",{enumerable:true,get:function(){return i.GraphQLUnionType}});Object.defineProperty(t,"SchemaMetaFieldDef",{enumerable:true,get:function(){return d.SchemaMetaFieldDef}});Object.defineProperty(t,"TypeKind",{enumerable:true,get:function(){return d.TypeKind}});Object.defineProperty(t,"TypeMetaFieldDef",{enumerable:true,get:function(){return d.TypeMetaFieldDef}});Object.defineProperty(t,"TypeNameMetaFieldDef",{enumerable:true,get:function(){return d.TypeNameMetaFieldDef}});Object.defineProperty(t,"__Directive",{enumerable:true,get:function(){return d.__Directive}});Object.defineProperty(t,"__DirectiveLocation",{enumerable:true,get:function(){return d.__DirectiveLocation}});Object.defineProperty(t,"__EnumValue",{enumerable:true,get:function(){return d.__EnumValue}});Object.defineProperty(t,"__Field",{enumerable:true,get:function(){return d.__Field}});Object.defineProperty(t,"__InputValue",{enumerable:true,get:function(){return d.__InputValue}});Object.defineProperty(t,"__Schema",{enumerable:true,get:function(){return d.__Schema}});Object.defineProperty(t,"__Type",{enumerable:true,get:function(){return d.__Type}});Object.defineProperty(t,"__TypeKind",{enumerable:true,get:function(){return d.__TypeKind}});Object.defineProperty(t,"assertAbstractType",{enumerable:true,get:function(){return i.assertAbstractType}});Object.defineProperty(t,"assertCompositeType",{enumerable:true,get:function(){return i.assertCompositeType}});Object.defineProperty(t,"assertDirective",{enumerable:true,get:function(){return r.assertDirective}});Object.defineProperty(t,"assertEnumType",{enumerable:true,get:function(){return i.assertEnumType}});Object.defineProperty(t,"assertEnumValueName",{enumerable:true,get:function(){return o.assertEnumValueName}});Object.defineProperty(t,"assertInputObjectType",{enumerable:true,get:function(){return i.assertInputObjectType}});Object.defineProperty(t,"assertInputType",{enumerable:true,get:function(){return i.assertInputType}});Object.defineProperty(t,"assertInterfaceType",{enumerable:true,get:function(){return i.assertInterfaceType}});Object.defineProperty(t,"assertLeafType",{enumerable:true,get:function(){return i.assertLeafType}});Object.defineProperty(t,"assertListType",{enumerable:true,get:function(){return i.assertListType}});Object.defineProperty(t,"assertName",{enumerable:true,get:function(){return o.assertName}});Object.defineProperty(t,"assertNamedType",{enumerable:true,get:function(){return i.assertNamedType}});Object.defineProperty(t,"assertNonNullType",{enumerable:true,get:function(){return i.assertNonNullType}});Object.defineProperty(t,"assertNullableType",{enumerable:true,get:function(){return i.assertNullableType}});Object.defineProperty(t,"assertObjectType",{enumerable:true,get:function(){return i.assertObjectType}});Object.defineProperty(t,"assertOutputType",{enumerable:true,get:function(){return i.assertOutputType}});Object.defineProperty(t,"assertScalarType",{enumerable:true,get:function(){return i.assertScalarType}});Object.defineProperty(t,"assertSchema",{enumerable:true,get:function(){return n.assertSchema}});Object.defineProperty(t,"assertType",{enumerable:true,get:function(){return i.assertType}});Object.defineProperty(t,"assertUnionType",{enumerable:true,get:function(){return i.assertUnionType}});Object.defineProperty(t,"assertValidSchema",{enumerable:true,get:function(){return s.assertValidSchema}});Object.defineProperty(t,"assertWrappingType",{enumerable:true,get:function(){return i.assertWrappingType}});Object.defineProperty(t,"getNamedType",{enumerable:true,get:function(){return i.getNamedType}});Object.defineProperty(t,"getNullableType",{enumerable:true,get:function(){return i.getNullableType}});Object.defineProperty(t,"introspectionTypes",{enumerable:true,get:function(){return d.introspectionTypes}});Object.defineProperty(t,"isAbstractType",{enumerable:true,get:function(){return i.isAbstractType}});Object.defineProperty(t,"isCompositeType",{enumerable:true,get:function(){return i.isCompositeType}});Object.defineProperty(t,"isDirective",{enumerable:true,get:function(){return r.isDirective}});Object.defineProperty(t,"isEnumType",{enumerable:true,get:function(){return i.isEnumType}});Object.defineProperty(t,"isInputObjectType",{enumerable:true,get:function(){return i.isInputObjectType}});Object.defineProperty(t,"isInputType",{enumerable:true,get:function(){return i.isInputType}});Object.defineProperty(t,"isInterfaceType",{enumerable:true,get:function(){return i.isInterfaceType}});Object.defineProperty(t,"isIntrospectionType",{enumerable:true,get:function(){return d.isIntrospectionType}});Object.defineProperty(t,"isLeafType",{enumerable:true,get:function(){return i.isLeafType}});Object.defineProperty(t,"isListType",{enumerable:true,get:function(){return i.isListType}});Object.defineProperty(t,"isNamedType",{enumerable:true,get:function(){return i.isNamedType}});Object.defineProperty(t,"isNonNullType",{enumerable:true,get:function(){return i.isNonNullType}});Object.defineProperty(t,"isNullableType",{enumerable:true,get:function(){return i.isNullableType}});Object.defineProperty(t,"isObjectType",{enumerable:true,get:function(){return i.isObjectType}});Object.defineProperty(t,"isOutputType",{enumerable:true,get:function(){return i.isOutputType}});Object.defineProperty(t,"isRequiredArgument",{enumerable:true,get:function(){return i.isRequiredArgument}});Object.defineProperty(t,"isRequiredInputField",{enumerable:true,get:function(){return i.isRequiredInputField}});Object.defineProperty(t,"isScalarType",{enumerable:true,get:function(){return i.isScalarType}});Object.defineProperty(t,"isSchema",{enumerable:true,get:function(){return n.isSchema}});Object.defineProperty(t,"isSpecifiedDirective",{enumerable:true,get:function(){return r.isSpecifiedDirective}});Object.defineProperty(t,"isSpecifiedScalarType",{enumerable:true,get:function(){return p.isSpecifiedScalarType}});Object.defineProperty(t,"isType",{enumerable:true,get:function(){return i.isType}});Object.defineProperty(t,"isUnionType",{enumerable:true,get:function(){return i.isUnionType}});Object.defineProperty(t,"isWrappingType",{enumerable:true,get:function(){return i.isWrappingType}});Object.defineProperty(t,"resolveObjMapThunk",{enumerable:true,get:function(){return i.resolveObjMapThunk}});Object.defineProperty(t,"resolveReadonlyArrayThunk",{enumerable:true,get:function(){return i.resolveReadonlyArrayThunk}});Object.defineProperty(t,"specifiedDirectives",{enumerable:true,get:function(){return r.specifiedDirectives}});Object.defineProperty(t,"specifiedScalarTypes",{enumerable:true,get:function(){return p.specifiedScalarTypes}});Object.defineProperty(t,"validateSchema",{enumerable:true,get:function(){return s.validateSchema}});var n=a(1618);var i=a(2739);var r=a(1426);var p=a(1922);var d=a(6040);var s=a(3622);var o=a(9247)},6040:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.introspectionTypes=t.__TypeKind=t.__Type=t.__Schema=t.__InputValue=t.__Field=t.__EnumValue=t.__DirectiveLocation=t.__Directive=t.TypeNameMetaFieldDef=t.TypeMetaFieldDef=t.TypeKind=t.SchemaMetaFieldDef=void 0;t.isIntrospectionType=isIntrospectionType;var n=a(6767);var i=a(8479);var r=a(3134);var p=a(4359);var d=a(5885);var s=a(2739);var o=a(1922);const l=new s.GraphQLObjectType({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:o.GraphQLString,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new s.GraphQLNonNull(new s.GraphQLList(new s.GraphQLNonNull(m))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new s.GraphQLNonNull(m),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:m,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:m,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new s.GraphQLNonNull(new s.GraphQLList(new s.GraphQLNonNull(u))),resolve:e=>e.getDirectives()}})});t.__Schema=l;const u=new s.GraphQLObjectType({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:()=>({name:{type:new s.GraphQLNonNull(o.GraphQLString),resolve:e=>e.name},description:{type:o.GraphQLString,resolve:e=>e.description},isRepeatable:{type:new s.GraphQLNonNull(o.GraphQLBoolean),resolve:e=>e.isRepeatable},locations:{type:new s.GraphQLNonNull(new s.GraphQLList(new s.GraphQLNonNull(c))),resolve:e=>e.locations},args:{type:new s.GraphQLNonNull(new s.GraphQLList(new s.GraphQLNonNull(v))),args:{includeDeprecated:{type:o.GraphQLBoolean,defaultValue:false}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter((e=>e.deprecationReason==null))}}})});t.__Directive=u;const c=new s.GraphQLEnumType({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:r.DirectiveLocation.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:r.DirectiveLocation.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:r.DirectiveLocation.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:r.DirectiveLocation.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:r.DirectiveLocation.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:r.DirectiveLocation.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:r.DirectiveLocation.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:r.DirectiveLocation.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:r.DirectiveLocation.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:r.DirectiveLocation.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:r.DirectiveLocation.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:r.DirectiveLocation.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:r.DirectiveLocation.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:r.DirectiveLocation.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:r.DirectiveLocation.UNION,description:"Location adjacent to a union definition."},ENUM:{value:r.DirectiveLocation.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:r.DirectiveLocation.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:r.DirectiveLocation.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:r.DirectiveLocation.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}});t.__DirectiveLocation=c;const m=new s.GraphQLObjectType({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new s.GraphQLNonNull(T),resolve(e){if((0,s.isScalarType)(e)){return y.SCALAR}if((0,s.isObjectType)(e)){return y.OBJECT}if((0,s.isInterfaceType)(e)){return y.INTERFACE}if((0,s.isUnionType)(e)){return y.UNION}if((0,s.isEnumType)(e)){return y.ENUM}if((0,s.isInputObjectType)(e)){return y.INPUT_OBJECT}if((0,s.isListType)(e)){return y.LIST}if((0,s.isNonNullType)(e)){return y.NON_NULL}false||(0,i.invariant)(false,`Unexpected type: "${(0,n.inspect)(e)}".`)}},name:{type:o.GraphQLString,resolve:e=>"name"in e?e.name:undefined},description:{type:o.GraphQLString,resolve:e=>"description"in e?e.description:undefined},specifiedByURL:{type:o.GraphQLString,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:undefined},fields:{type:new s.GraphQLList(new s.GraphQLNonNull(f)),args:{includeDeprecated:{type:o.GraphQLBoolean,defaultValue:false}},resolve(e,{includeDeprecated:t}){if((0,s.isObjectType)(e)||(0,s.isInterfaceType)(e)){const a=Object.values(e.getFields());return t?a:a.filter((e=>e.deprecationReason==null))}}},interfaces:{type:new s.GraphQLList(new s.GraphQLNonNull(m)),resolve(e){if((0,s.isObjectType)(e)||(0,s.isInterfaceType)(e)){return e.getInterfaces()}}},possibleTypes:{type:new s.GraphQLList(new s.GraphQLNonNull(m)),resolve(e,t,a,{schema:n}){if((0,s.isAbstractType)(e)){return n.getPossibleTypes(e)}}},enumValues:{type:new s.GraphQLList(new s.GraphQLNonNull(h)),args:{includeDeprecated:{type:o.GraphQLBoolean,defaultValue:false}},resolve(e,{includeDeprecated:t}){if((0,s.isEnumType)(e)){const a=e.getValues();return t?a:a.filter((e=>e.deprecationReason==null))}}},inputFields:{type:new s.GraphQLList(new s.GraphQLNonNull(v)),args:{includeDeprecated:{type:o.GraphQLBoolean,defaultValue:false}},resolve(e,{includeDeprecated:t}){if((0,s.isInputObjectType)(e)){const a=Object.values(e.getFields());return t?a:a.filter((e=>e.deprecationReason==null))}}},ofType:{type:m,resolve:e=>"ofType"in e?e.ofType:undefined}})});t.__Type=m;const f=new s.GraphQLObjectType({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new s.GraphQLNonNull(o.GraphQLString),resolve:e=>e.name},description:{type:o.GraphQLString,resolve:e=>e.description},args:{type:new s.GraphQLNonNull(new s.GraphQLList(new s.GraphQLNonNull(v))),args:{includeDeprecated:{type:o.GraphQLBoolean,defaultValue:false}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter((e=>e.deprecationReason==null))}},type:{type:new s.GraphQLNonNull(m),resolve:e=>e.type},isDeprecated:{type:new s.GraphQLNonNull(o.GraphQLBoolean),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:o.GraphQLString,resolve:e=>e.deprecationReason}})});t.__Field=f;const v=new s.GraphQLObjectType({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new s.GraphQLNonNull(o.GraphQLString),resolve:e=>e.name},description:{type:o.GraphQLString,resolve:e=>e.description},type:{type:new s.GraphQLNonNull(m),resolve:e=>e.type},defaultValue:{type:o.GraphQLString,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:a}=e;const n=(0,d.astFromValue)(a,t);return n?(0,p.print)(n):null}},isDeprecated:{type:new s.GraphQLNonNull(o.GraphQLBoolean),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:o.GraphQLString,resolve:e=>e.deprecationReason}})});t.__InputValue=v;const h=new s.GraphQLObjectType({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new s.GraphQLNonNull(o.GraphQLString),resolve:e=>e.name},description:{type:o.GraphQLString,resolve:e=>e.description},isDeprecated:{type:new s.GraphQLNonNull(o.GraphQLBoolean),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:o.GraphQLString,resolve:e=>e.deprecationReason}})});t.__EnumValue=h;var y;t.TypeKind=y;(function(e){e["SCALAR"]="SCALAR";e["OBJECT"]="OBJECT";e["INTERFACE"]="INTERFACE";e["UNION"]="UNION";e["ENUM"]="ENUM";e["INPUT_OBJECT"]="INPUT_OBJECT";e["LIST"]="LIST";e["NON_NULL"]="NON_NULL"})(y||(t.TypeKind=y={}));const T=new s.GraphQLEnumType({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:y.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:y.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:y.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:y.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:y.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:y.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:y.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:y.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}});t.__TypeKind=T;const b={name:"__schema",type:new s.GraphQLNonNull(l),description:"Access the current type schema of this server.",args:[],resolve:(e,t,a,{schema:n})=>n,deprecationReason:undefined,extensions:Object.create(null),astNode:undefined};t.SchemaMetaFieldDef=b;const g={name:"__type",type:m,description:"Request the type information of a single type.",args:[{name:"name",description:undefined,type:new s.GraphQLNonNull(o.GraphQLString),defaultValue:undefined,deprecationReason:undefined,extensions:Object.create(null),astNode:undefined}],resolve:(e,{name:t},a,{schema:n})=>n.getType(t),deprecationReason:undefined,extensions:Object.create(null),astNode:undefined};t.TypeMetaFieldDef=g;const N={name:"__typename",type:new s.GraphQLNonNull(o.GraphQLString),description:"The name of the current Object type at runtime.",args:[],resolve:(e,t,a,{parentType:n})=>n.name,deprecationReason:undefined,extensions:Object.create(null),astNode:undefined};t.TypeNameMetaFieldDef=N;const _=Object.freeze([l,u,c,m,f,v,h,T]);t.introspectionTypes=_;function isIntrospectionType(e){return _.some((({name:t})=>e.name===t))}},1922:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.GraphQLString=t.GraphQLInt=t.GraphQLID=t.GraphQLFloat=t.GraphQLBoolean=t.GRAPHQL_MIN_INT=t.GRAPHQL_MAX_INT=void 0;t.isSpecifiedScalarType=isSpecifiedScalarType;t.specifiedScalarTypes=void 0;var n=a(6767);var i=a(1589);var r=a(3919);var p=a(5223);var d=a(4359);var s=a(2739);const o=2147483647;t.GRAPHQL_MAX_INT=o;const l=-2147483648;t.GRAPHQL_MIN_INT=l;const u=new s.GraphQLScalarType({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=serializeObject(e);if(typeof t==="boolean"){return t?1:0}let a=t;if(typeof t==="string"&&t!==""){a=Number(t)}if(typeof a!=="number"||!Number.isInteger(a)){throw new r.GraphQLError(`Int cannot represent non-integer value: ${(0,n.inspect)(t)}`)}if(a>o||a<l){throw new r.GraphQLError("Int cannot represent non 32-bit signed integer value: "+(0,n.inspect)(t))}return a},parseValue(e){if(typeof e!=="number"||!Number.isInteger(e)){throw new r.GraphQLError(`Int cannot represent non-integer value: ${(0,n.inspect)(e)}`)}if(e>o||e<l){throw new r.GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e}`)}return e},parseLiteral(e){if(e.kind!==p.Kind.INT){throw new r.GraphQLError(`Int cannot represent non-integer value: ${(0,d.print)(e)}`,{nodes:e})}const t=parseInt(e.value,10);if(t>o||t<l){throw new r.GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e})}return t}});t.GraphQLInt=u;const c=new s.GraphQLScalarType({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=serializeObject(e);if(typeof t==="boolean"){return t?1:0}let a=t;if(typeof t==="string"&&t!==""){a=Number(t)}if(typeof a!=="number"||!Number.isFinite(a)){throw new r.GraphQLError(`Float cannot represent non numeric value: ${(0,n.inspect)(t)}`)}return a},parseValue(e){if(typeof e!=="number"||!Number.isFinite(e)){throw new r.GraphQLError(`Float cannot represent non numeric value: ${(0,n.inspect)(e)}`)}return e},parseLiteral(e){if(e.kind!==p.Kind.FLOAT&&e.kind!==p.Kind.INT){throw new r.GraphQLError(`Float cannot represent non numeric value: ${(0,d.print)(e)}`,e)}return parseFloat(e.value)}});t.GraphQLFloat=c;const m=new s.GraphQLScalarType({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=serializeObject(e);if(typeof t==="string"){return t}if(typeof t==="boolean"){return t?"true":"false"}if(typeof t==="number"&&Number.isFinite(t)){return t.toString()}throw new r.GraphQLError(`String cannot represent value: ${(0,n.inspect)(e)}`)},parseValue(e){if(typeof e!=="string"){throw new r.GraphQLError(`String cannot represent a non string value: ${(0,n.inspect)(e)}`)}return e},parseLiteral(e){if(e.kind!==p.Kind.STRING){throw new r.GraphQLError(`String cannot represent a non string value: ${(0,d.print)(e)}`,{nodes:e})}return e.value}});t.GraphQLString=m;const f=new s.GraphQLScalarType({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=serializeObject(e);if(typeof t==="boolean"){return t}if(Number.isFinite(t)){return t!==0}throw new r.GraphQLError(`Boolean cannot represent a non boolean value: ${(0,n.inspect)(t)}`)},parseValue(e){if(typeof e!=="boolean"){throw new r.GraphQLError(`Boolean cannot represent a non boolean value: ${(0,n.inspect)(e)}`)}return e},parseLiteral(e){if(e.kind!==p.Kind.BOOLEAN){throw new r.GraphQLError(`Boolean cannot represent a non boolean value: ${(0,d.print)(e)}`,{nodes:e})}return e.value}});t.GraphQLBoolean=f;const v=new s.GraphQLScalarType({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=serializeObject(e);if(typeof t==="string"){return t}if(Number.isInteger(t)){return String(t)}throw new r.GraphQLError(`ID cannot represent value: ${(0,n.inspect)(e)}`)},parseValue(e){if(typeof e==="string"){return e}if(typeof e==="number"&&Number.isInteger(e)){return e.toString()}throw new r.GraphQLError(`ID cannot represent value: ${(0,n.inspect)(e)}`)},parseLiteral(e){if(e.kind!==p.Kind.STRING&&e.kind!==p.Kind.INT){throw new r.GraphQLError("ID cannot represent a non-string and non-integer value: "+(0,d.print)(e),{nodes:e})}return e.value}});t.GraphQLID=v;const h=Object.freeze([m,u,c,f,v]);t.specifiedScalarTypes=h;function isSpecifiedScalarType(e){return h.some((({name:t})=>e.name===t))}function serializeObject(e){if((0,i.isObjectLike)(e)){if(typeof e.valueOf==="function"){const t=e.valueOf();if(!(0,i.isObjectLike)(t)){return t}}if(typeof e.toJSON==="function"){return e.toJSON()}}return e}},1618:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.GraphQLSchema=void 0;t.assertSchema=assertSchema;t.isSchema=isSchema;var n=a(3387);var i=a(6767);var r=a(2219);var p=a(1589);var d=a(3937);var s=a(9622);var o=a(2739);var l=a(1426);var u=a(6040);function isSchema(e){return(0,r.instanceOf)(e,GraphQLSchema)}function assertSchema(e){if(!isSchema(e)){throw new Error(`Expected ${(0,i.inspect)(e)} to be a GraphQL schema.`)}return e}class GraphQLSchema{constructor(e){var t,a;this.__validationErrors=e.assumeValid===true?[]:undefined;(0,p.isObjectLike)(e)||(0,n.devAssert)(false,"Must provide configuration object.");!e.types||Array.isArray(e.types)||(0,n.devAssert)(false,`"types" must be Array if provided but got: ${(0,i.inspect)(e.types)}.`);!e.directives||Array.isArray(e.directives)||(0,n.devAssert)(false,'"directives" must be Array if provided but got: '+`${(0,i.inspect)(e.directives)}.`);this.description=e.description;this.extensions=(0,d.toObjMap)(e.extensions);this.astNode=e.astNode;this.extensionASTNodes=(t=e.extensionASTNodes)!==null&&t!==void 0?t:[];this._queryType=e.query;this._mutationType=e.mutation;this._subscriptionType=e.subscription;this._directives=(a=e.directives)!==null&&a!==void 0?a:l.specifiedDirectives;const r=new Set(e.types);if(e.types!=null){for(const t of e.types){r.delete(t);collectReferencedTypes(t,r)}}if(this._queryType!=null){collectReferencedTypes(this._queryType,r)}if(this._mutationType!=null){collectReferencedTypes(this._mutationType,r)}if(this._subscriptionType!=null){collectReferencedTypes(this._subscriptionType,r)}for(const e of this._directives){if((0,l.isDirective)(e)){for(const t of e.args){collectReferencedTypes(t.type,r)}}}collectReferencedTypes(u.__Schema,r);this._typeMap=Object.create(null);this._subTypeMap=Object.create(null);this._implementationsMap=Object.create(null);for(const e of r){if(e==null){continue}const t=e.name;t||(0,n.devAssert)(false,"One of the provided types for building the Schema is missing a name.");if(this._typeMap[t]!==undefined){throw new Error(`Schema must contain uniquely named types but contains multiple types named "${t}".`)}this._typeMap[t]=e;if((0,o.isInterfaceType)(e)){for(const t of e.getInterfaces()){if((0,o.isInterfaceType)(t)){let a=this._implementationsMap[t.name];if(a===undefined){a=this._implementationsMap[t.name]={objects:[],interfaces:[]}}a.interfaces.push(e)}}}else if((0,o.isObjectType)(e)){for(const t of e.getInterfaces()){if((0,o.isInterfaceType)(t)){let a=this._implementationsMap[t.name];if(a===undefined){a=this._implementationsMap[t.name]={objects:[],interfaces:[]}}a.objects.push(e)}}}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(e){switch(e){case s.OperationTypeNode.QUERY:return this.getQueryType();case s.OperationTypeNode.MUTATION:return this.getMutationType();case s.OperationTypeNode.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(e){return this.getTypeMap()[e]}getPossibleTypes(e){return(0,o.isUnionType)(e)?e.getTypes():this.getImplementations(e).objects}getImplementations(e){const t=this._implementationsMap[e.name];return t!==null&&t!==void 0?t:{objects:[],interfaces:[]}}isSubType(e,t){let a=this._subTypeMap[e.name];if(a===undefined){a=Object.create(null);if((0,o.isUnionType)(e)){for(const t of e.getTypes()){a[t.name]=true}}else{const t=this.getImplementations(e);for(const e of t.objects){a[e.name]=true}for(const e of t.interfaces){a[e.name]=true}}this._subTypeMap[e.name]=a}return a[t.name]!==undefined}getDirectives(){return this._directives}getDirective(e){return this.getDirectives().find((t=>t.name===e))}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.__validationErrors!==undefined}}}t.GraphQLSchema=GraphQLSchema;function collectReferencedTypes(e,t){const a=(0,o.getNamedType)(e);if(!t.has(a)){t.add(a);if((0,o.isUnionType)(a)){for(const e of a.getTypes()){collectReferencedTypes(e,t)}}else if((0,o.isObjectType)(a)||(0,o.isInterfaceType)(a)){for(const e of a.getInterfaces()){collectReferencedTypes(e,t)}for(const e of Object.values(a.getFields())){collectReferencedTypes(e.type,t);for(const a of e.args){collectReferencedTypes(a.type,t)}}}else if((0,o.isInputObjectType)(a)){for(const e of Object.values(a.getFields())){collectReferencedTypes(e.type,t)}}}return t}},3622:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.assertValidSchema=assertValidSchema;t.validateSchema=validateSchema;var n=a(6767);var i=a(3919);var r=a(9622);var p=a(1275);var d=a(2739);var s=a(1426);var o=a(6040);var l=a(1618);function validateSchema(e){(0,l.assertSchema)(e);if(e.__validationErrors){return e.__validationErrors}const t=new SchemaValidationContext(e);validateRootTypes(t);validateDirectives(t);validateTypes(t);const a=t.getErrors();e.__validationErrors=a;return a}function assertValidSchema(e){const t=validateSchema(e);if(t.length!==0){throw new Error(t.map((e=>e.message)).join("\n\n"))}}class SchemaValidationContext{constructor(e){this._errors=[];this.schema=e}reportError(e,t){const a=Array.isArray(t)?t.filter(Boolean):t;this._errors.push(new i.GraphQLError(e,{nodes:a}))}getErrors(){return this._errors}}function validateRootTypes(e){const t=e.schema;const a=t.getQueryType();if(!a){e.reportError("Query root type must be provided.",t.astNode)}else if(!(0,d.isObjectType)(a)){var i;e.reportError(`Query root type must be Object type, it cannot be ${(0,n.inspect)(a)}.`,(i=getOperationTypeNode(t,r.OperationTypeNode.QUERY))!==null&&i!==void 0?i:a.astNode)}const p=t.getMutationType();if(p&&!(0,d.isObjectType)(p)){var s;e.reportError("Mutation root type must be Object type if provided, it cannot be "+`${(0,n.inspect)(p)}.`,(s=getOperationTypeNode(t,r.OperationTypeNode.MUTATION))!==null&&s!==void 0?s:p.astNode)}const o=t.getSubscriptionType();if(o&&!(0,d.isObjectType)(o)){var l;e.reportError("Subscription root type must be Object type if provided, it cannot be "+`${(0,n.inspect)(o)}.`,(l=getOperationTypeNode(t,r.OperationTypeNode.SUBSCRIPTION))!==null&&l!==void 0?l:o.astNode)}}function getOperationTypeNode(e,t){var a;return(a=[e.astNode,...e.extensionASTNodes].flatMap((e=>{var t;return(t=e===null||e===void 0?void 0:e.operationTypes)!==null&&t!==void 0?t:[]})).find((e=>e.operation===t)))===null||a===void 0?void 0:a.type}function validateDirectives(e){for(const a of e.schema.getDirectives()){if(!(0,s.isDirective)(a)){e.reportError(`Expected directive but got: ${(0,n.inspect)(a)}.`,a===null||a===void 0?void 0:a.astNode);continue}validateName(e,a);for(const i of a.args){validateName(e,i);if(!(0,d.isInputType)(i.type)){e.reportError(`The type of @${a.name}(${i.name}:) must be Input Type `+`but got: ${(0,n.inspect)(i.type)}.`,i.astNode)}if((0,d.isRequiredArgument)(i)&&i.deprecationReason!=null){var t;e.reportError(`Required argument @${a.name}(${i.name}:) cannot be deprecated.`,[getDeprecatedDirectiveNode(i.astNode),(t=i.astNode)===null||t===void 0?void 0:t.type])}}}}function validateName(e,t){if(t.name.startsWith("__")){e.reportError(`Name "${t.name}" must not begin with "__", which is reserved by GraphQL introspection.`,t.astNode)}}function validateTypes(e){const t=createInputObjectCircularRefsValidator(e);const a=e.schema.getTypeMap();for(const i of Object.values(a)){if(!(0,d.isNamedType)(i)){e.reportError(`Expected GraphQL named type but got: ${(0,n.inspect)(i)}.`,i.astNode);continue}if(!(0,o.isIntrospectionType)(i)){validateName(e,i)}if((0,d.isObjectType)(i)){validateFields(e,i);validateInterfaces(e,i)}else if((0,d.isInterfaceType)(i)){validateFields(e,i);validateInterfaces(e,i)}else if((0,d.isUnionType)(i)){validateUnionMembers(e,i)}else if((0,d.isEnumType)(i)){validateEnumValues(e,i)}else if((0,d.isInputObjectType)(i)){validateInputFields(e,i);t(i)}}}function validateFields(e,t){const a=Object.values(t.getFields());if(a.length===0){e.reportError(`Type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes])}for(const s of a){validateName(e,s);if(!(0,d.isOutputType)(s.type)){var i;e.reportError(`The type of ${t.name}.${s.name} must be Output Type `+`but got: ${(0,n.inspect)(s.type)}.`,(i=s.astNode)===null||i===void 0?void 0:i.type)}for(const a of s.args){const i=a.name;validateName(e,a);if(!(0,d.isInputType)(a.type)){var r;e.reportError(`The type of ${t.name}.${s.name}(${i}:) must be Input `+`Type but got: ${(0,n.inspect)(a.type)}.`,(r=a.astNode)===null||r===void 0?void 0:r.type)}if((0,d.isRequiredArgument)(a)&&a.deprecationReason!=null){var p;e.reportError(`Required argument ${t.name}.${s.name}(${i}:) cannot be deprecated.`,[getDeprecatedDirectiveNode(a.astNode),(p=a.astNode)===null||p===void 0?void 0:p.type])}}}}function validateInterfaces(e,t){const a=Object.create(null);for(const i of t.getInterfaces()){if(!(0,d.isInterfaceType)(i)){e.reportError(`Type ${(0,n.inspect)(t)} must only implement Interface types, `+`it cannot implement ${(0,n.inspect)(i)}.`,getAllImplementsInterfaceNodes(t,i));continue}if(t===i){e.reportError(`Type ${t.name} cannot implement itself because it would create a circular reference.`,getAllImplementsInterfaceNodes(t,i));continue}if(a[i.name]){e.reportError(`Type ${t.name} can only implement ${i.name} once.`,getAllImplementsInterfaceNodes(t,i));continue}a[i.name]=true;validateTypeImplementsAncestors(e,t,i);validateTypeImplementsInterface(e,t,i)}}function validateTypeImplementsInterface(e,t,a){const i=t.getFields();for(const u of Object.values(a.getFields())){const c=u.name;const m=i[c];if(!m){e.reportError(`Interface field ${a.name}.${c} expected but ${t.name} does not provide it.`,[u.astNode,t.astNode,...t.extensionASTNodes]);continue}if(!(0,p.isTypeSubTypeOf)(e.schema,m.type,u.type)){var r,s;e.reportError(`Interface field ${a.name}.${c} expects type `+`${(0,n.inspect)(u.type)} but ${t.name}.${c} `+`is type ${(0,n.inspect)(m.type)}.`,[(r=u.astNode)===null||r===void 0?void 0:r.type,(s=m.astNode)===null||s===void 0?void 0:s.type])}for(const i of u.args){const r=i.name;const d=m.args.find((e=>e.name===r));if(!d){e.reportError(`Interface field argument ${a.name}.${c}(${r}:) expected but ${t.name}.${c} does not provide it.`,[i.astNode,m.astNode]);continue}if(!(0,p.isEqualType)(i.type,d.type)){var o,l;e.reportError(`Interface field argument ${a.name}.${c}(${r}:) `+`expects type ${(0,n.inspect)(i.type)} but `+`${t.name}.${c}(${r}:) is type `+`${(0,n.inspect)(d.type)}.`,[(o=i.astNode)===null||o===void 0?void 0:o.type,(l=d.astNode)===null||l===void 0?void 0:l.type])}}for(const n of m.args){const i=n.name;const r=u.args.find((e=>e.name===i));if(!r&&(0,d.isRequiredArgument)(n)){e.reportError(`Object field ${t.name}.${c} includes required argument ${i} that is missing from the Interface field ${a.name}.${c}.`,[n.astNode,u.astNode])}}}}function validateTypeImplementsAncestors(e,t,a){const n=t.getInterfaces();for(const i of a.getInterfaces()){if(!n.includes(i)){e.reportError(i===t?`Type ${t.name} cannot implement ${a.name} because it would create a circular reference.`:`Type ${t.name} must implement ${i.name} because it is implemented by ${a.name}.`,[...getAllImplementsInterfaceNodes(a,i),...getAllImplementsInterfaceNodes(t,a)])}}}function validateUnionMembers(e,t){const a=t.getTypes();if(a.length===0){e.reportError(`Union type ${t.name} must define one or more member types.`,[t.astNode,...t.extensionASTNodes])}const i=Object.create(null);for(const r of a){if(i[r.name]){e.reportError(`Union type ${t.name} can only include type ${r.name} once.`,getUnionMemberTypeNodes(t,r.name));continue}i[r.name]=true;if(!(0,d.isObjectType)(r)){e.reportError(`Union type ${t.name} can only include Object types, `+`it cannot include ${(0,n.inspect)(r)}.`,getUnionMemberTypeNodes(t,String(r)))}}}function validateEnumValues(e,t){const a=t.getValues();if(a.length===0){e.reportError(`Enum type ${t.name} must define one or more values.`,[t.astNode,...t.extensionASTNodes])}for(const t of a){validateName(e,t)}}function validateInputFields(e,t){const a=Object.values(t.getFields());if(a.length===0){e.reportError(`Input Object type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes])}for(const p of a){validateName(e,p);if(!(0,d.isInputType)(p.type)){var i;e.reportError(`The type of ${t.name}.${p.name} must be Input Type `+`but got: ${(0,n.inspect)(p.type)}.`,(i=p.astNode)===null||i===void 0?void 0:i.type)}if((0,d.isRequiredInputField)(p)&&p.deprecationReason!=null){var r;e.reportError(`Required input field ${t.name}.${p.name} cannot be deprecated.`,[getDeprecatedDirectiveNode(p.astNode),(r=p.astNode)===null||r===void 0?void 0:r.type])}}}function createInputObjectCircularRefsValidator(e){const t=Object.create(null);const a=[];const n=Object.create(null);return detectCycleRecursive;function detectCycleRecursive(i){if(t[i.name]){return}t[i.name]=true;n[i.name]=a.length;const r=Object.values(i.getFields());for(const t of r){if((0,d.isNonNullType)(t.type)&&(0,d.isInputObjectType)(t.type.ofType)){const i=t.type.ofType;const r=n[i.name];a.push(t);if(r===undefined){detectCycleRecursive(i)}else{const t=a.slice(r);const n=t.map((e=>e.name)).join(".");e.reportError(`Cannot reference Input Object "${i.name}" within itself through a series of non-null fields: "${n}".`,t.map((e=>e.astNode)))}a.pop()}}n[i.name]=undefined}}function getAllImplementsInterfaceNodes(e,t){const{astNode:a,extensionASTNodes:n}=e;const i=a!=null?[a,...n]:n;return i.flatMap((e=>{var t;return(t=e.interfaces)!==null&&t!==void 0?t:[]})).filter((e=>e.name.value===t.name))}function getUnionMemberTypeNodes(e,t){const{astNode:a,extensionASTNodes:n}=e;const i=a!=null?[a,...n]:n;return i.flatMap((e=>{var t;return(t=e.types)!==null&&t!==void 0?t:[]})).filter((e=>e.name.value===t))}function getDeprecatedDirectiveNode(e){var t;return e===null||e===void 0?void 0:(t=e.directives)===null||t===void 0?void 0:t.find((e=>e.name.value===s.GraphQLDeprecatedDirective.name))}},9832:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.TypeInfo=void 0;t.visitWithTypeInfo=visitWithTypeInfo;var n=a(9622);var i=a(5223);var r=a(6586);var p=a(2739);var d=a(6040);var s=a(9944);class TypeInfo{constructor(e,t,a){this._schema=e;this._typeStack=[];this._parentTypeStack=[];this._inputTypeStack=[];this._fieldDefStack=[];this._defaultValueStack=[];this._directive=null;this._argument=null;this._enumValue=null;this._getFieldDef=a!==null&&a!==void 0?a:getFieldDef;if(t){if((0,p.isInputType)(t)){this._inputTypeStack.push(t)}if((0,p.isCompositeType)(t)){this._parentTypeStack.push(t)}if((0,p.isOutputType)(t)){this._typeStack.push(t)}}}get[Symbol.toStringTag](){return"TypeInfo"}getType(){if(this._typeStack.length>0){return this._typeStack[this._typeStack.length-1]}}getParentType(){if(this._parentTypeStack.length>0){return this._parentTypeStack[this._parentTypeStack.length-1]}}getInputType(){if(this._inputTypeStack.length>0){return this._inputTypeStack[this._inputTypeStack.length-1]}}getParentInputType(){if(this._inputTypeStack.length>1){return this._inputTypeStack[this._inputTypeStack.length-2]}}getFieldDef(){if(this._fieldDefStack.length>0){return this._fieldDefStack[this._fieldDefStack.length-1]}}getDefaultValue(){if(this._defaultValueStack.length>0){return this._defaultValueStack[this._defaultValueStack.length-1]}}getDirective(){return this._directive}getArgument(){return this._argument}getEnumValue(){return this._enumValue}enter(e){const t=this._schema;switch(e.kind){case i.Kind.SELECTION_SET:{const e=(0,p.getNamedType)(this.getType());this._parentTypeStack.push((0,p.isCompositeType)(e)?e:undefined);break}case i.Kind.FIELD:{const a=this.getParentType();let n;let i;if(a){n=this._getFieldDef(t,a,e);if(n){i=n.type}}this._fieldDefStack.push(n);this._typeStack.push((0,p.isOutputType)(i)?i:undefined);break}case i.Kind.DIRECTIVE:this._directive=t.getDirective(e.name.value);break;case i.Kind.OPERATION_DEFINITION:{const a=t.getRootType(e.operation);this._typeStack.push((0,p.isObjectType)(a)?a:undefined);break}case i.Kind.INLINE_FRAGMENT:case i.Kind.FRAGMENT_DEFINITION:{const a=e.typeCondition;const n=a?(0,s.typeFromAST)(t,a):(0,p.getNamedType)(this.getType());this._typeStack.push((0,p.isOutputType)(n)?n:undefined);break}case i.Kind.VARIABLE_DEFINITION:{const a=(0,s.typeFromAST)(t,e.type);this._inputTypeStack.push((0,p.isInputType)(a)?a:undefined);break}case i.Kind.ARGUMENT:{var a;let t;let n;const i=(a=this.getDirective())!==null&&a!==void 0?a:this.getFieldDef();if(i){t=i.args.find((t=>t.name===e.name.value));if(t){n=t.type}}this._argument=t;this._defaultValueStack.push(t?t.defaultValue:undefined);this._inputTypeStack.push((0,p.isInputType)(n)?n:undefined);break}case i.Kind.LIST:{const e=(0,p.getNullableType)(this.getInputType());const t=(0,p.isListType)(e)?e.ofType:e;this._defaultValueStack.push(undefined);this._inputTypeStack.push((0,p.isInputType)(t)?t:undefined);break}case i.Kind.OBJECT_FIELD:{const t=(0,p.getNamedType)(this.getInputType());let a;let n;if((0,p.isInputObjectType)(t)){n=t.getFields()[e.name.value];if(n){a=n.type}}this._defaultValueStack.push(n?n.defaultValue:undefined);this._inputTypeStack.push((0,p.isInputType)(a)?a:undefined);break}case i.Kind.ENUM:{const t=(0,p.getNamedType)(this.getInputType());let a;if((0,p.isEnumType)(t)){a=t.getValue(e.value)}this._enumValue=a;break}default:}}leave(e){switch(e.kind){case i.Kind.SELECTION_SET:this._parentTypeStack.pop();break;case i.Kind.FIELD:this._fieldDefStack.pop();this._typeStack.pop();break;case i.Kind.DIRECTIVE:this._directive=null;break;case i.Kind.OPERATION_DEFINITION:case i.Kind.INLINE_FRAGMENT:case i.Kind.FRAGMENT_DEFINITION:this._typeStack.pop();break;case i.Kind.VARIABLE_DEFINITION:this._inputTypeStack.pop();break;case i.Kind.ARGUMENT:this._argument=null;this._defaultValueStack.pop();this._inputTypeStack.pop();break;case i.Kind.LIST:case i.Kind.OBJECT_FIELD:this._defaultValueStack.pop();this._inputTypeStack.pop();break;case i.Kind.ENUM:this._enumValue=null;break;default:}}}t.TypeInfo=TypeInfo;function getFieldDef(e,t,a){const n=a.name.value;if(n===d.SchemaMetaFieldDef.name&&e.getQueryType()===t){return d.SchemaMetaFieldDef}if(n===d.TypeMetaFieldDef.name&&e.getQueryType()===t){return d.TypeMetaFieldDef}if(n===d.TypeNameMetaFieldDef.name&&(0,p.isCompositeType)(t)){return d.TypeNameMetaFieldDef}if((0,p.isObjectType)(t)||(0,p.isInterfaceType)(t)){return t.getFields()[n]}}function visitWithTypeInfo(e,t){return{enter(...a){const i=a[0];e.enter(i);const p=(0,r.getEnterLeaveForKind)(t,i.kind).enter;if(p){const r=p.apply(t,a);if(r!==undefined){e.leave(i);if((0,n.isNode)(r)){e.enter(r)}}return r}},leave(...a){const n=a[0];const i=(0,r.getEnterLeaveForKind)(t,n.kind).leave;let p;if(i){p=i.apply(t,a)}e.leave(n);return p}}}},1714:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.assertValidName=assertValidName;t.isValidNameError=isValidNameError;var n=a(3387);var i=a(3919);var r=a(9247);function assertValidName(e){const t=isValidNameError(e);if(t){throw t}return e}function isValidNameError(e){typeof e==="string"||(0,n.devAssert)(false,"Expected name to be a string.");if(e.startsWith("__")){return new i.GraphQLError(`Name "${e}" must not begin with "__", which is reserved by GraphQL introspection.`)}try{(0,r.assertName)(e)}catch(e){return e}}},5885:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.astFromValue=astFromValue;var n=a(6767);var i=a(8479);var r=a(7405);var p=a(1589);var d=a(5223);var s=a(2739);var o=a(1922);function astFromValue(e,t){if((0,s.isNonNullType)(t)){const a=astFromValue(e,t.ofType);if((a===null||a===void 0?void 0:a.kind)===d.Kind.NULL){return null}return a}if(e===null){return{kind:d.Kind.NULL}}if(e===undefined){return null}if((0,s.isListType)(t)){const a=t.ofType;if((0,r.isIterableObject)(e)){const t=[];for(const n of e){const e=astFromValue(n,a);if(e!=null){t.push(e)}}return{kind:d.Kind.LIST,values:t}}return astFromValue(e,a)}if((0,s.isInputObjectType)(t)){if(!(0,p.isObjectLike)(e)){return null}const a=[];for(const n of Object.values(t.getFields())){const t=astFromValue(e[n.name],n.type);if(t){a.push({kind:d.Kind.OBJECT_FIELD,name:{kind:d.Kind.NAME,value:n.name},value:t})}}return{kind:d.Kind.OBJECT,fields:a}}if((0,s.isLeafType)(t)){const a=t.serialize(e);if(a==null){return null}if(typeof a==="boolean"){return{kind:d.Kind.BOOLEAN,value:a}}if(typeof a==="number"&&Number.isFinite(a)){const e=String(a);return l.test(e)?{kind:d.Kind.INT,value:e}:{kind:d.Kind.FLOAT,value:e}}if(typeof a==="string"){if((0,s.isEnumType)(t)){return{kind:d.Kind.ENUM,value:a}}if(t===o.GraphQLID&&l.test(a)){return{kind:d.Kind.INT,value:a}}return{kind:d.Kind.STRING,value:a}}throw new TypeError(`Cannot convert value to AST: ${(0,n.inspect)(a)}.`)}false||(0,i.invariant)(false,"Unexpected input type: "+(0,n.inspect)(t))}const l=/^-?(?:0|[1-9][0-9]*)$/},6287:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.buildASTSchema=buildASTSchema;t.buildSchema=buildSchema;var n=a(3387);var i=a(5223);var r=a(6639);var p=a(1426);var d=a(1618);var s=a(8376);var o=a(2390);function buildASTSchema(e,t){e!=null&&e.kind===i.Kind.DOCUMENT||(0,n.devAssert)(false,"Must provide valid Document AST.");if((t===null||t===void 0?void 0:t.assumeValid)!==true&&(t===null||t===void 0?void 0:t.assumeValidSDL)!==true){(0,s.assertValidSDL)(e)}const a={description:undefined,types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:false};const r=(0,o.extendSchemaImpl)(a,e,t);if(r.astNode==null){for(const e of r.types){switch(e.name){case"Query":r.query=e;break;case"Mutation":r.mutation=e;break;case"Subscription":r.subscription=e;break}}}const l=[...r.directives,...p.specifiedDirectives.filter((e=>r.directives.every((t=>t.name!==e.name))))];return new d.GraphQLSchema({...r,directives:l})}function buildSchema(e,t){const a=(0,r.parse)(e,{noLocation:t===null||t===void 0?void 0:t.noLocation,allowLegacyFragmentVariables:t===null||t===void 0?void 0:t.allowLegacyFragmentVariables});return buildASTSchema(a,{assumeValidSDL:t===null||t===void 0?void 0:t.assumeValidSDL,assumeValid:t===null||t===void 0?void 0:t.assumeValid})}},6978:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.buildClientSchema=buildClientSchema;var n=a(3387);var i=a(6767);var r=a(1589);var p=a(1154);var d=a(6639);var s=a(2739);var o=a(1426);var l=a(6040);var u=a(1922);var c=a(1618);var m=a(5394);function buildClientSchema(e,t){(0,r.isObjectLike)(e)&&(0,r.isObjectLike)(e.__schema)||(0,n.devAssert)(false,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${(0,i.inspect)(e)}.`);const a=e.__schema;const f=(0,p.keyValMap)(a.types,(e=>e.name),(e=>buildType(e)));for(const e of[...u.specifiedScalarTypes,...l.introspectionTypes]){if(f[e.name]){f[e.name]=e}}const v=a.queryType?getObjectType(a.queryType):null;const h=a.mutationType?getObjectType(a.mutationType):null;const y=a.subscriptionType?getObjectType(a.subscriptionType):null;const T=a.directives?a.directives.map(buildDirective):[];return new c.GraphQLSchema({description:a.description,query:v,mutation:h,subscription:y,types:Object.values(f),directives:T,assumeValid:t===null||t===void 0?void 0:t.assumeValid});function getType(e){if(e.kind===l.TypeKind.LIST){const t=e.ofType;if(!t){throw new Error("Decorated type deeper than introspection query.")}return new s.GraphQLList(getType(t))}if(e.kind===l.TypeKind.NON_NULL){const t=e.ofType;if(!t){throw new Error("Decorated type deeper than introspection query.")}const a=getType(t);return new s.GraphQLNonNull((0,s.assertNullableType)(a))}return getNamedType(e)}function getNamedType(e){const t=e.name;if(!t){throw new Error(`Unknown type reference: ${(0,i.inspect)(e)}.`)}const a=f[t];if(!a){throw new Error(`Invalid or incomplete schema, unknown type: ${t}. Ensure that a full introspection query is used in order to build a client schema.`)}return a}function getObjectType(e){return(0,s.assertObjectType)(getNamedType(e))}function getInterfaceType(e){return(0,s.assertInterfaceType)(getNamedType(e))}function buildType(e){if(e!=null&&e.name!=null&&e.kind!=null){switch(e.kind){case l.TypeKind.SCALAR:return buildScalarDef(e);case l.TypeKind.OBJECT:return buildObjectDef(e);case l.TypeKind.INTERFACE:return buildInterfaceDef(e);case l.TypeKind.UNION:return buildUnionDef(e);case l.TypeKind.ENUM:return buildEnumDef(e);case l.TypeKind.INPUT_OBJECT:return buildInputObjectDef(e)}}const t=(0,i.inspect)(e);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${t}.`)}function buildScalarDef(e){return new s.GraphQLScalarType({name:e.name,description:e.description,specifiedByURL:e.specifiedByURL})}function buildImplementationsList(e){if(e.interfaces===null&&e.kind===l.TypeKind.INTERFACE){return[]}if(!e.interfaces){const t=(0,i.inspect)(e);throw new Error(`Introspection result missing interfaces: ${t}.`)}return e.interfaces.map(getInterfaceType)}function buildObjectDef(e){return new s.GraphQLObjectType({name:e.name,description:e.description,interfaces:()=>buildImplementationsList(e),fields:()=>buildFieldDefMap(e)})}function buildInterfaceDef(e){return new s.GraphQLInterfaceType({name:e.name,description:e.description,interfaces:()=>buildImplementationsList(e),fields:()=>buildFieldDefMap(e)})}function buildUnionDef(e){if(!e.possibleTypes){const t=(0,i.inspect)(e);throw new Error(`Introspection result missing possibleTypes: ${t}.`)}return new s.GraphQLUnionType({name:e.name,description:e.description,types:()=>e.possibleTypes.map(getObjectType)})}function buildEnumDef(e){if(!e.enumValues){const t=(0,i.inspect)(e);throw new Error(`Introspection result missing enumValues: ${t}.`)}return new s.GraphQLEnumType({name:e.name,description:e.description,values:(0,p.keyValMap)(e.enumValues,(e=>e.name),(e=>({description:e.description,deprecationReason:e.deprecationReason})))})}function buildInputObjectDef(e){if(!e.inputFields){const t=(0,i.inspect)(e);throw new Error(`Introspection result missing inputFields: ${t}.`)}return new s.GraphQLInputObjectType({name:e.name,description:e.description,fields:()=>buildInputValueDefMap(e.inputFields)})}function buildFieldDefMap(e){if(!e.fields){throw new Error(`Introspection result missing fields: ${(0,i.inspect)(e)}.`)}return(0,p.keyValMap)(e.fields,(e=>e.name),buildField)}function buildField(e){const t=getType(e.type);if(!(0,s.isOutputType)(t)){const e=(0,i.inspect)(t);throw new Error(`Introspection must provide output type for fields, but received: ${e}.`)}if(!e.args){const t=(0,i.inspect)(e);throw new Error(`Introspection result missing field args: ${t}.`)}return{description:e.description,deprecationReason:e.deprecationReason,type:t,args:buildInputValueDefMap(e.args)}}function buildInputValueDefMap(e){return(0,p.keyValMap)(e,(e=>e.name),buildInputValue)}function buildInputValue(e){const t=getType(e.type);if(!(0,s.isInputType)(t)){const e=(0,i.inspect)(t);throw new Error(`Introspection must provide input type for arguments, but received: ${e}.`)}const a=e.defaultValue!=null?(0,m.valueFromAST)((0,d.parseValue)(e.defaultValue),t):undefined;return{description:e.description,type:t,defaultValue:a,deprecationReason:e.deprecationReason}}function buildDirective(e){if(!e.args){const t=(0,i.inspect)(e);throw new Error(`Introspection result missing directive args: ${t}.`)}if(!e.locations){const t=(0,i.inspect)(e);throw new Error(`Introspection result missing directive locations: ${t}.`)}return new o.GraphQLDirective({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:buildInputValueDefMap(e.args)})}}},3326:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.coerceInputValue=coerceInputValue;var n=a(277);var i=a(6767);var r=a(8479);var p=a(7405);var d=a(1589);var s=a(3380);var o=a(7468);var l=a(1664);var u=a(3919);var c=a(2739);function coerceInputValue(e,t,a=defaultOnError){return coerceInputValueImpl(e,t,a,undefined)}function defaultOnError(e,t,a){let n="Invalid value "+(0,i.inspect)(t);if(e.length>0){n+=` at "value${(0,o.printPathArray)(e)}"`}a.message=n+": "+a.message;throw a}function coerceInputValueImpl(e,t,a,o){if((0,c.isNonNullType)(t)){if(e!=null){return coerceInputValueImpl(e,t.ofType,a,o)}a((0,s.pathToArray)(o),e,new u.GraphQLError(`Expected non-nullable type "${(0,i.inspect)(t)}" not to be null.`));return}if(e==null){return null}if((0,c.isListType)(t)){const n=t.ofType;if((0,p.isIterableObject)(e)){return Array.from(e,((e,t)=>{const i=(0,s.addPath)(o,t,undefined);return coerceInputValueImpl(e,n,a,i)}))}return[coerceInputValueImpl(e,n,a,o)]}if((0,c.isInputObjectType)(t)){if(!(0,d.isObjectLike)(e)){a((0,s.pathToArray)(o),e,new u.GraphQLError(`Expected type "${t.name}" to be an object.`));return}const r={};const p=t.getFields();for(const n of Object.values(p)){const p=e[n.name];if(p===undefined){if(n.defaultValue!==undefined){r[n.name]=n.defaultValue}else if((0,c.isNonNullType)(n.type)){const t=(0,i.inspect)(n.type);a((0,s.pathToArray)(o),e,new u.GraphQLError(`Field "${n.name}" of required type "${t}" was not provided.`))}continue}r[n.name]=coerceInputValueImpl(p,n.type,a,(0,s.addPath)(o,n.name,t.name))}for(const i of Object.keys(e)){if(!p[i]){const r=(0,l.suggestionList)(i,Object.keys(t.getFields()));a((0,s.pathToArray)(o),e,new u.GraphQLError(`Field "${i}" is not defined by type "${t.name}".`+(0,n.didYouMean)(r)))}}return r}if((0,c.isLeafType)(t)){let n;try{n=t.parseValue(e)}catch(n){if(n instanceof u.GraphQLError){a((0,s.pathToArray)(o),e,n)}else{a((0,s.pathToArray)(o),e,new u.GraphQLError(`Expected type "${t.name}". `+n.message,{originalError:n}))}return}if(n===undefined){a((0,s.pathToArray)(o),e,new u.GraphQLError(`Expected type "${t.name}".`))}return n}false||(0,r.invariant)(false,"Unexpected input type: "+(0,i.inspect)(t))}},1616:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.concatAST=concatAST;var n=a(5223);function concatAST(e){const t=[];for(const a of e){t.push(...a.definitions)}return{kind:n.Kind.DOCUMENT,definitions:t}}},2390:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.extendSchema=extendSchema;t.extendSchemaImpl=extendSchemaImpl;var n=a(3387);var i=a(6767);var r=a(8479);var p=a(52);var d=a(5193);var s=a(5223);var o=a(2617);var l=a(2739);var u=a(1426);var c=a(6040);var m=a(1922);var f=a(1618);var v=a(8376);var h=a(1173);var y=a(5394);function extendSchema(e,t,a){(0,f.assertSchema)(e);t!=null&&t.kind===s.Kind.DOCUMENT||(0,n.devAssert)(false,"Must provide valid Document AST.");if((a===null||a===void 0?void 0:a.assumeValid)!==true&&(a===null||a===void 0?void 0:a.assumeValidSDL)!==true){(0,v.assertValidSDLExtension)(t,e)}const i=e.toConfig();const r=extendSchemaImpl(i,t,a);return i===r?e:new f.GraphQLSchema(r)}function extendSchemaImpl(e,t,a){var n,p,f,v;const h=[];const b=Object.create(null);const g=[];let N;const _=[];for(const e of t.definitions){if(e.kind===s.Kind.SCHEMA_DEFINITION){N=e}else if(e.kind===s.Kind.SCHEMA_EXTENSION){_.push(e)}else if((0,o.isTypeDefinitionNode)(e)){h.push(e)}else if((0,o.isTypeExtensionNode)(e)){const t=e.name.value;const a=b[t];b[t]=a?a.concat([e]):[e]}else if(e.kind===s.Kind.DIRECTIVE_DEFINITION){g.push(e)}}if(Object.keys(b).length===0&&h.length===0&&g.length===0&&_.length===0&&N==null){return e}const w=Object.create(null);for(const t of e.types){w[t.name]=extendNamedType(t)}for(const e of h){var E;const t=e.name.value;w[t]=(E=T[t])!==null&&E!==void 0?E:buildType(e)}const O={query:e.query&&replaceNamedType(e.query),mutation:e.mutation&&replaceNamedType(e.mutation),subscription:e.subscription&&replaceNamedType(e.subscription),...N&&getOperationTypes([N]),...getOperationTypes(_)};return{description:(n=N)===null||n===void 0?void 0:(p=n.description)===null||p===void 0?void 0:p.value,...O,types:Object.values(w),directives:[...e.directives.map(replaceDirective),...g.map(buildDirective)],extensions:Object.create(null),astNode:(f=N)!==null&&f!==void 0?f:e.astNode,extensionASTNodes:e.extensionASTNodes.concat(_),assumeValid:(v=a===null||a===void 0?void 0:a.assumeValid)!==null&&v!==void 0?v:false};function replaceType(e){if((0,l.isListType)(e)){return new l.GraphQLList(replaceType(e.ofType))}if((0,l.isNonNullType)(e)){return new l.GraphQLNonNull(replaceType(e.ofType))}return replaceNamedType(e)}function replaceNamedType(e){return w[e.name]}function replaceDirective(e){const t=e.toConfig();return new u.GraphQLDirective({...t,args:(0,d.mapValue)(t.args,extendArg)})}function extendNamedType(e){if((0,c.isIntrospectionType)(e)||(0,m.isSpecifiedScalarType)(e)){return e}if((0,l.isScalarType)(e)){return extendScalarType(e)}if((0,l.isObjectType)(e)){return extendObjectType(e)}if((0,l.isInterfaceType)(e)){return extendInterfaceType(e)}if((0,l.isUnionType)(e)){return extendUnionType(e)}if((0,l.isEnumType)(e)){return extendEnumType(e)}if((0,l.isInputObjectType)(e)){return extendInputObjectType(e)}false||(0,r.invariant)(false,"Unexpected type: "+(0,i.inspect)(e))}function extendInputObjectType(e){var t;const a=e.toConfig();const n=(t=b[a.name])!==null&&t!==void 0?t:[];return new l.GraphQLInputObjectType({...a,fields:()=>({...(0,d.mapValue)(a.fields,(e=>({...e,type:replaceType(e.type)}))),...buildInputFieldMap(n)}),extensionASTNodes:a.extensionASTNodes.concat(n)})}function extendEnumType(e){var t;const a=e.toConfig();const n=(t=b[e.name])!==null&&t!==void 0?t:[];return new l.GraphQLEnumType({...a,values:{...a.values,...buildEnumValueMap(n)},extensionASTNodes:a.extensionASTNodes.concat(n)})}function extendScalarType(e){var t;const a=e.toConfig();const n=(t=b[a.name])!==null&&t!==void 0?t:[];let i=a.specifiedByURL;for(const e of n){var r;i=(r=getSpecifiedByURL(e))!==null&&r!==void 0?r:i}return new l.GraphQLScalarType({...a,specifiedByURL:i,extensionASTNodes:a.extensionASTNodes.concat(n)})}function extendObjectType(e){var t;const a=e.toConfig();const n=(t=b[a.name])!==null&&t!==void 0?t:[];return new l.GraphQLObjectType({...a,interfaces:()=>[...e.getInterfaces().map(replaceNamedType),...buildInterfaces(n)],fields:()=>({...(0,d.mapValue)(a.fields,extendField),...buildFieldMap(n)}),extensionASTNodes:a.extensionASTNodes.concat(n)})}function extendInterfaceType(e){var t;const a=e.toConfig();const n=(t=b[a.name])!==null&&t!==void 0?t:[];return new l.GraphQLInterfaceType({...a,interfaces:()=>[...e.getInterfaces().map(replaceNamedType),...buildInterfaces(n)],fields:()=>({...(0,d.mapValue)(a.fields,extendField),...buildFieldMap(n)}),extensionASTNodes:a.extensionASTNodes.concat(n)})}function extendUnionType(e){var t;const a=e.toConfig();const n=(t=b[a.name])!==null&&t!==void 0?t:[];return new l.GraphQLUnionType({...a,types:()=>[...e.getTypes().map(replaceNamedType),...buildUnionTypes(n)],extensionASTNodes:a.extensionASTNodes.concat(n)})}function extendField(e){return{...e,type:replaceType(e.type),args:e.args&&(0,d.mapValue)(e.args,extendArg)}}function extendArg(e){return{...e,type:replaceType(e.type)}}function getOperationTypes(e){const t={};for(const n of e){var a;const e=(a=n.operationTypes)!==null&&a!==void 0?a:[];for(const a of e){t[a.operation]=getNamedType(a.type)}}return t}function getNamedType(e){var t;const a=e.name.value;const n=(t=T[a])!==null&&t!==void 0?t:w[a];if(n===undefined){throw new Error(`Unknown type: "${a}".`)}return n}function getWrappedType(e){if(e.kind===s.Kind.LIST_TYPE){return new l.GraphQLList(getWrappedType(e.type))}if(e.kind===s.Kind.NON_NULL_TYPE){return new l.GraphQLNonNull(getWrappedType(e.type))}return getNamedType(e)}function buildDirective(e){var t;return new u.GraphQLDirective({name:e.name.value,description:(t=e.description)===null||t===void 0?void 0:t.value,locations:e.locations.map((({value:e})=>e)),isRepeatable:e.repeatable,args:buildArgumentMap(e.arguments),astNode:e})}function buildFieldMap(e){const t=Object.create(null);for(const i of e){var a;const e=(a=i.fields)!==null&&a!==void 0?a:[];for(const a of e){var n;t[a.name.value]={type:getWrappedType(a.type),description:(n=a.description)===null||n===void 0?void 0:n.value,args:buildArgumentMap(a.arguments),deprecationReason:getDeprecationReason(a),astNode:a}}}return t}function buildArgumentMap(e){const t=e!==null&&e!==void 0?e:[];const a=Object.create(null);for(const e of t){var n;const t=getWrappedType(e.type);a[e.name.value]={type:t,description:(n=e.description)===null||n===void 0?void 0:n.value,defaultValue:(0,y.valueFromAST)(e.defaultValue,t),deprecationReason:getDeprecationReason(e),astNode:e}}return a}function buildInputFieldMap(e){const t=Object.create(null);for(const i of e){var a;const e=(a=i.fields)!==null&&a!==void 0?a:[];for(const a of e){var n;const e=getWrappedType(a.type);t[a.name.value]={type:e,description:(n=a.description)===null||n===void 0?void 0:n.value,defaultValue:(0,y.valueFromAST)(a.defaultValue,e),deprecationReason:getDeprecationReason(a),astNode:a}}}return t}function buildEnumValueMap(e){const t=Object.create(null);for(const i of e){var a;const e=(a=i.values)!==null&&a!==void 0?a:[];for(const a of e){var n;t[a.name.value]={description:(n=a.description)===null||n===void 0?void 0:n.value,deprecationReason:getDeprecationReason(a),astNode:a}}}return t}function buildInterfaces(e){return e.flatMap((e=>{var t,a;return(t=(a=e.interfaces)===null||a===void 0?void 0:a.map(getNamedType))!==null&&t!==void 0?t:[]}))}function buildUnionTypes(e){return e.flatMap((e=>{var t,a;return(t=(a=e.types)===null||a===void 0?void 0:a.map(getNamedType))!==null&&t!==void 0?t:[]}))}function buildType(e){var t;const a=e.name.value;const n=(t=b[a])!==null&&t!==void 0?t:[];switch(e.kind){case s.Kind.OBJECT_TYPE_DEFINITION:{var i;const t=[e,...n];return new l.GraphQLObjectType({name:a,description:(i=e.description)===null||i===void 0?void 0:i.value,interfaces:()=>buildInterfaces(t),fields:()=>buildFieldMap(t),astNode:e,extensionASTNodes:n})}case s.Kind.INTERFACE_TYPE_DEFINITION:{var r;const t=[e,...n];return new l.GraphQLInterfaceType({name:a,description:(r=e.description)===null||r===void 0?void 0:r.value,interfaces:()=>buildInterfaces(t),fields:()=>buildFieldMap(t),astNode:e,extensionASTNodes:n})}case s.Kind.ENUM_TYPE_DEFINITION:{var p;const t=[e,...n];return new l.GraphQLEnumType({name:a,description:(p=e.description)===null||p===void 0?void 0:p.value,values:buildEnumValueMap(t),astNode:e,extensionASTNodes:n})}case s.Kind.UNION_TYPE_DEFINITION:{var d;const t=[e,...n];return new l.GraphQLUnionType({name:a,description:(d=e.description)===null||d===void 0?void 0:d.value,types:()=>buildUnionTypes(t),astNode:e,extensionASTNodes:n})}case s.Kind.SCALAR_TYPE_DEFINITION:{var o;return new l.GraphQLScalarType({name:a,description:(o=e.description)===null||o===void 0?void 0:o.value,specifiedByURL:getSpecifiedByURL(e),astNode:e,extensionASTNodes:n})}case s.Kind.INPUT_OBJECT_TYPE_DEFINITION:{var u;const t=[e,...n];return new l.GraphQLInputObjectType({name:a,description:(u=e.description)===null||u===void 0?void 0:u.value,fields:()=>buildInputFieldMap(t),astNode:e,extensionASTNodes:n})}}}}const T=(0,p.keyMap)([...m.specifiedScalarTypes,...c.introspectionTypes],(e=>e.name));function getDeprecationReason(e){const t=(0,h.getDirectiveValues)(u.GraphQLDeprecatedDirective,e);return t===null||t===void 0?void 0:t.reason}function getSpecifiedByURL(e){const t=(0,h.getDirectiveValues)(u.GraphQLSpecifiedByDirective,e);return t===null||t===void 0?void 0:t.url}},3926:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.DangerousChangeType=t.BreakingChangeType=void 0;t.findBreakingChanges=findBreakingChanges;t.findDangerousChanges=findDangerousChanges;var n=a(6767);var i=a(8479);var r=a(52);var p=a(4359);var d=a(2739);var s=a(1922);var o=a(5885);var l=a(9454);var u;t.BreakingChangeType=u;(function(e){e["TYPE_REMOVED"]="TYPE_REMOVED";e["TYPE_CHANGED_KIND"]="TYPE_CHANGED_KIND";e["TYPE_REMOVED_FROM_UNION"]="TYPE_REMOVED_FROM_UNION";e["VALUE_REMOVED_FROM_ENUM"]="VALUE_REMOVED_FROM_ENUM";e["REQUIRED_INPUT_FIELD_ADDED"]="REQUIRED_INPUT_FIELD_ADDED";e["IMPLEMENTED_INTERFACE_REMOVED"]="IMPLEMENTED_INTERFACE_REMOVED";e["FIELD_REMOVED"]="FIELD_REMOVED";e["FIELD_CHANGED_KIND"]="FIELD_CHANGED_KIND";e["REQUIRED_ARG_ADDED"]="REQUIRED_ARG_ADDED";e["ARG_REMOVED"]="ARG_REMOVED";e["ARG_CHANGED_KIND"]="ARG_CHANGED_KIND";e["DIRECTIVE_REMOVED"]="DIRECTIVE_REMOVED";e["DIRECTIVE_ARG_REMOVED"]="DIRECTIVE_ARG_REMOVED";e["REQUIRED_DIRECTIVE_ARG_ADDED"]="REQUIRED_DIRECTIVE_ARG_ADDED";e["DIRECTIVE_REPEATABLE_REMOVED"]="DIRECTIVE_REPEATABLE_REMOVED";e["DIRECTIVE_LOCATION_REMOVED"]="DIRECTIVE_LOCATION_REMOVED"})(u||(t.BreakingChangeType=u={}));var c;t.DangerousChangeType=c;(function(e){e["VALUE_ADDED_TO_ENUM"]="VALUE_ADDED_TO_ENUM";e["TYPE_ADDED_TO_UNION"]="TYPE_ADDED_TO_UNION";e["OPTIONAL_INPUT_FIELD_ADDED"]="OPTIONAL_INPUT_FIELD_ADDED";e["OPTIONAL_ARG_ADDED"]="OPTIONAL_ARG_ADDED";e["IMPLEMENTED_INTERFACE_ADDED"]="IMPLEMENTED_INTERFACE_ADDED";e["ARG_DEFAULT_VALUE_CHANGE"]="ARG_DEFAULT_VALUE_CHANGE"})(c||(t.DangerousChangeType=c={}));function findBreakingChanges(e,t){return findSchemaChanges(e,t).filter((e=>e.type in u))}function findDangerousChanges(e,t){return findSchemaChanges(e,t).filter((e=>e.type in c))}function findSchemaChanges(e,t){return[...findTypeChanges(e,t),...findDirectiveChanges(e,t)]}function findDirectiveChanges(e,t){const a=[];const n=diff(e.getDirectives(),t.getDirectives());for(const e of n.removed){a.push({type:u.DIRECTIVE_REMOVED,description:`${e.name} was removed.`})}for(const[e,t]of n.persisted){const n=diff(e.args,t.args);for(const t of n.added){if((0,d.isRequiredArgument)(t)){a.push({type:u.REQUIRED_DIRECTIVE_ARG_ADDED,description:`A required arg ${t.name} on directive ${e.name} was added.`})}}for(const t of n.removed){a.push({type:u.DIRECTIVE_ARG_REMOVED,description:`${t.name} was removed from ${e.name}.`})}if(e.isRepeatable&&!t.isRepeatable){a.push({type:u.DIRECTIVE_REPEATABLE_REMOVED,description:`Repeatable flag was removed from ${e.name}.`})}for(const n of e.locations){if(!t.locations.includes(n)){a.push({type:u.DIRECTIVE_LOCATION_REMOVED,description:`${n} was removed from ${e.name}.`})}}}return a}function findTypeChanges(e,t){const a=[];const n=diff(Object.values(e.getTypeMap()),Object.values(t.getTypeMap()));for(const e of n.removed){a.push({type:u.TYPE_REMOVED,description:(0,s.isSpecifiedScalarType)(e)?`Standard scalar ${e.name} was removed because it is not referenced anymore.`:`${e.name} was removed.`})}for(const[e,t]of n.persisted){if((0,d.isEnumType)(e)&&(0,d.isEnumType)(t)){a.push(...findEnumTypeChanges(e,t))}else if((0,d.isUnionType)(e)&&(0,d.isUnionType)(t)){a.push(...findUnionTypeChanges(e,t))}else if((0,d.isInputObjectType)(e)&&(0,d.isInputObjectType)(t)){a.push(...findInputObjectTypeChanges(e,t))}else if((0,d.isObjectType)(e)&&(0,d.isObjectType)(t)){a.push(...findFieldChanges(e,t),...findImplementedInterfacesChanges(e,t))}else if((0,d.isInterfaceType)(e)&&(0,d.isInterfaceType)(t)){a.push(...findFieldChanges(e,t),...findImplementedInterfacesChanges(e,t))}else if(e.constructor!==t.constructor){a.push({type:u.TYPE_CHANGED_KIND,description:`${e.name} changed from `+`${typeKindName(e)} to ${typeKindName(t)}.`})}}return a}function findInputObjectTypeChanges(e,t){const a=[];const n=diff(Object.values(e.getFields()),Object.values(t.getFields()));for(const t of n.added){if((0,d.isRequiredInputField)(t)){a.push({type:u.REQUIRED_INPUT_FIELD_ADDED,description:`A required field ${t.name} on input type ${e.name} was added.`})}else{a.push({type:c.OPTIONAL_INPUT_FIELD_ADDED,description:`An optional field ${t.name} on input type ${e.name} was added.`})}}for(const t of n.removed){a.push({type:u.FIELD_REMOVED,description:`${e.name}.${t.name} was removed.`})}for(const[t,i]of n.persisted){const n=isChangeSafeForInputObjectFieldOrFieldArg(t.type,i.type);if(!n){a.push({type:u.FIELD_CHANGED_KIND,description:`${e.name}.${t.name} changed type from `+`${String(t.type)} to ${String(i.type)}.`})}}return a}function findUnionTypeChanges(e,t){const a=[];const n=diff(e.getTypes(),t.getTypes());for(const t of n.added){a.push({type:c.TYPE_ADDED_TO_UNION,description:`${t.name} was added to union type ${e.name}.`})}for(const t of n.removed){a.push({type:u.TYPE_REMOVED_FROM_UNION,description:`${t.name} was removed from union type ${e.name}.`})}return a}function findEnumTypeChanges(e,t){const a=[];const n=diff(e.getValues(),t.getValues());for(const t of n.added){a.push({type:c.VALUE_ADDED_TO_ENUM,description:`${t.name} was added to enum type ${e.name}.`})}for(const t of n.removed){a.push({type:u.VALUE_REMOVED_FROM_ENUM,description:`${t.name} was removed from enum type ${e.name}.`})}return a}function findImplementedInterfacesChanges(e,t){const a=[];const n=diff(e.getInterfaces(),t.getInterfaces());for(const t of n.added){a.push({type:c.IMPLEMENTED_INTERFACE_ADDED,description:`${t.name} added to interfaces implemented by ${e.name}.`})}for(const t of n.removed){a.push({type:u.IMPLEMENTED_INTERFACE_REMOVED,description:`${e.name} no longer implements interface ${t.name}.`})}return a}function findFieldChanges(e,t){const a=[];const n=diff(Object.values(e.getFields()),Object.values(t.getFields()));for(const t of n.removed){a.push({type:u.FIELD_REMOVED,description:`${e.name}.${t.name} was removed.`})}for(const[t,i]of n.persisted){a.push(...findArgChanges(e,t,i));const n=isChangeSafeForObjectOrInterfaceField(t.type,i.type);if(!n){a.push({type:u.FIELD_CHANGED_KIND,description:`${e.name}.${t.name} changed type from `+`${String(t.type)} to ${String(i.type)}.`})}}return a}function findArgChanges(e,t,a){const n=[];const i=diff(t.args,a.args);for(const a of i.removed){n.push({type:u.ARG_REMOVED,description:`${e.name}.${t.name} arg ${a.name} was removed.`})}for(const[a,r]of i.persisted){const i=isChangeSafeForInputObjectFieldOrFieldArg(a.type,r.type);if(!i){n.push({type:u.ARG_CHANGED_KIND,description:`${e.name}.${t.name} arg ${a.name} has changed type from `+`${String(a.type)} to ${String(r.type)}.`})}else if(a.defaultValue!==undefined){if(r.defaultValue===undefined){n.push({type:c.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${t.name} arg ${a.name} defaultValue was removed.`})}else{const i=stringifyValue(a.defaultValue,a.type);const p=stringifyValue(r.defaultValue,r.type);if(i!==p){n.push({type:c.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${t.name} arg ${a.name} has changed defaultValue from ${i} to ${p}.`})}}}}for(const a of i.added){if((0,d.isRequiredArgument)(a)){n.push({type:u.REQUIRED_ARG_ADDED,description:`A required arg ${a.name} on ${e.name}.${t.name} was added.`})}else{n.push({type:c.OPTIONAL_ARG_ADDED,description:`An optional arg ${a.name} on ${e.name}.${t.name} was added.`})}}return n}function isChangeSafeForObjectOrInterfaceField(e,t){if((0,d.isListType)(e)){return(0,d.isListType)(t)&&isChangeSafeForObjectOrInterfaceField(e.ofType,t.ofType)||(0,d.isNonNullType)(t)&&isChangeSafeForObjectOrInterfaceField(e,t.ofType)}if((0,d.isNonNullType)(e)){return(0,d.isNonNullType)(t)&&isChangeSafeForObjectOrInterfaceField(e.ofType,t.ofType)}return(0,d.isNamedType)(t)&&e.name===t.name||(0,d.isNonNullType)(t)&&isChangeSafeForObjectOrInterfaceField(e,t.ofType)}function isChangeSafeForInputObjectFieldOrFieldArg(e,t){if((0,d.isListType)(e)){return(0,d.isListType)(t)&&isChangeSafeForInputObjectFieldOrFieldArg(e.ofType,t.ofType)}if((0,d.isNonNullType)(e)){return(0,d.isNonNullType)(t)&&isChangeSafeForInputObjectFieldOrFieldArg(e.ofType,t.ofType)||!(0,d.isNonNullType)(t)&&isChangeSafeForInputObjectFieldOrFieldArg(e.ofType,t)}return(0,d.isNamedType)(t)&&e.name===t.name}function typeKindName(e){if((0,d.isScalarType)(e)){return"a Scalar type"}if((0,d.isObjectType)(e)){return"an Object type"}if((0,d.isInterfaceType)(e)){return"an Interface type"}if((0,d.isUnionType)(e)){return"a Union type"}if((0,d.isEnumType)(e)){return"an Enum type"}if((0,d.isInputObjectType)(e)){return"an Input type"}false||(0,i.invariant)(false,"Unexpected type: "+(0,n.inspect)(e))}function stringifyValue(e,t){const a=(0,o.astFromValue)(e,t);a!=null||(0,i.invariant)(false);return(0,p.print)((0,l.sortValueNode)(a))}function diff(e,t){const a=[];const n=[];const i=[];const p=(0,r.keyMap)(e,(({name:e})=>e));const d=(0,r.keyMap)(t,(({name:e})=>e));for(const t of e){const e=d[t.name];if(e===undefined){n.push(t)}else{i.push([t,e])}}for(const e of t){if(p[e.name]===undefined){a.push(e)}}return{added:a,persisted:i,removed:n}}},5386:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getIntrospectionQuery=getIntrospectionQuery;function getIntrospectionQuery(e){const t={descriptions:true,specifiedByUrl:false,directiveIsRepeatable:false,schemaDescription:false,inputValueDeprecation:false,...e};const a=t.descriptions?"description":"";const n=t.specifiedByUrl?"specifiedByURL":"";const i=t.directiveIsRepeatable?"isRepeatable":"";const r=t.schemaDescription?a:"";function inputDeprecation(e){return t.inputValueDeprecation?e:""}return`\n    query IntrospectionQuery {\n      __schema {\n        ${r}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${a}\n          ${i}\n          locations\n          args${inputDeprecation("(includeDeprecated: true)")} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${a}\n      ${n}\n      fields(includeDeprecated: true) {\n        name\n        ${a}\n        args${inputDeprecation("(includeDeprecated: true)")} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation("(includeDeprecated: true)")} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${a}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${a}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation("isDeprecated")}\n      ${inputDeprecation("deprecationReason")}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `}},7559:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getOperationAST=getOperationAST;var n=a(5223);function getOperationAST(e,t){let a=null;for(const r of e.definitions){if(r.kind===n.Kind.OPERATION_DEFINITION){var i;if(t==null){if(a){return null}a=r}else if(((i=r.name)===null||i===void 0?void 0:i.value)===t){return r}}}return a}},2603:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getOperationRootType=getOperationRootType;var n=a(3919);function getOperationRootType(e,t){if(t.operation==="query"){const a=e.getQueryType();if(!a){throw new n.GraphQLError("Schema does not define the required query root type.",{nodes:t})}return a}if(t.operation==="mutation"){const a=e.getMutationType();if(!a){throw new n.GraphQLError("Schema is not configured for mutations.",{nodes:t})}return a}if(t.operation==="subscription"){const a=e.getSubscriptionType();if(!a){throw new n.GraphQLError("Schema is not configured for subscriptions.",{nodes:t})}return a}throw new n.GraphQLError("Can only have query, mutation and subscription operations.",{nodes:t})}},7245:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"BreakingChangeType",{enumerable:true,get:function(){return w.BreakingChangeType}});Object.defineProperty(t,"DangerousChangeType",{enumerable:true,get:function(){return w.DangerousChangeType}});Object.defineProperty(t,"TypeInfo",{enumerable:true,get:function(){return h.TypeInfo}});Object.defineProperty(t,"assertValidName",{enumerable:true,get:function(){return _.assertValidName}});Object.defineProperty(t,"astFromValue",{enumerable:true,get:function(){return v.astFromValue}});Object.defineProperty(t,"buildASTSchema",{enumerable:true,get:function(){return s.buildASTSchema}});Object.defineProperty(t,"buildClientSchema",{enumerable:true,get:function(){return d.buildClientSchema}});Object.defineProperty(t,"buildSchema",{enumerable:true,get:function(){return s.buildSchema}});Object.defineProperty(t,"coerceInputValue",{enumerable:true,get:function(){return y.coerceInputValue}});Object.defineProperty(t,"concatAST",{enumerable:true,get:function(){return T.concatAST}});Object.defineProperty(t,"doTypesOverlap",{enumerable:true,get:function(){return N.doTypesOverlap}});Object.defineProperty(t,"extendSchema",{enumerable:true,get:function(){return o.extendSchema}});Object.defineProperty(t,"findBreakingChanges",{enumerable:true,get:function(){return w.findBreakingChanges}});Object.defineProperty(t,"findDangerousChanges",{enumerable:true,get:function(){return w.findDangerousChanges}});Object.defineProperty(t,"getIntrospectionQuery",{enumerable:true,get:function(){return n.getIntrospectionQuery}});Object.defineProperty(t,"getOperationAST",{enumerable:true,get:function(){return i.getOperationAST}});Object.defineProperty(t,"getOperationRootType",{enumerable:true,get:function(){return r.getOperationRootType}});Object.defineProperty(t,"introspectionFromSchema",{enumerable:true,get:function(){return p.introspectionFromSchema}});Object.defineProperty(t,"isEqualType",{enumerable:true,get:function(){return N.isEqualType}});Object.defineProperty(t,"isTypeSubTypeOf",{enumerable:true,get:function(){return N.isTypeSubTypeOf}});Object.defineProperty(t,"isValidNameError",{enumerable:true,get:function(){return _.isValidNameError}});Object.defineProperty(t,"lexicographicSortSchema",{enumerable:true,get:function(){return l.lexicographicSortSchema}});Object.defineProperty(t,"printIntrospectionSchema",{enumerable:true,get:function(){return u.printIntrospectionSchema}});Object.defineProperty(t,"printSchema",{enumerable:true,get:function(){return u.printSchema}});Object.defineProperty(t,"printType",{enumerable:true,get:function(){return u.printType}});Object.defineProperty(t,"separateOperations",{enumerable:true,get:function(){return b.separateOperations}});Object.defineProperty(t,"stripIgnoredCharacters",{enumerable:true,get:function(){return g.stripIgnoredCharacters}});Object.defineProperty(t,"typeFromAST",{enumerable:true,get:function(){return c.typeFromAST}});Object.defineProperty(t,"valueFromAST",{enumerable:true,get:function(){return m.valueFromAST}});Object.defineProperty(t,"valueFromASTUntyped",{enumerable:true,get:function(){return f.valueFromASTUntyped}});Object.defineProperty(t,"visitWithTypeInfo",{enumerable:true,get:function(){return h.visitWithTypeInfo}});var n=a(5386);var i=a(7559);var r=a(2603);var p=a(112);var d=a(6978);var s=a(6287);var o=a(2390);var l=a(8835);var u=a(6209);var c=a(9944);var m=a(5394);var f=a(9354);var v=a(5885);var h=a(9832);var y=a(3326);var T=a(1616);var b=a(8953);var g=a(3126);var N=a(1275);var _=a(1714);var w=a(3926)},112:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.introspectionFromSchema=introspectionFromSchema;var n=a(8479);var i=a(6639);var r=a(2921);var p=a(5386);function introspectionFromSchema(e,t){const a={specifiedByUrl:true,directiveIsRepeatable:true,schemaDescription:true,inputValueDeprecation:true,...t};const d=(0,i.parse)((0,p.getIntrospectionQuery)(a));const s=(0,r.executeSync)({schema:e,document:d});!s.errors&&s.data||(0,n.invariant)(false);return s.data}},8835:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.lexicographicSortSchema=lexicographicSortSchema;var n=a(6767);var i=a(8479);var r=a(1154);var p=a(6413);var d=a(2739);var s=a(1426);var o=a(6040);var l=a(1618);function lexicographicSortSchema(e){const t=e.toConfig();const a=(0,r.keyValMap)(sortByName(t.types),(e=>e.name),sortNamedType);return new l.GraphQLSchema({...t,types:Object.values(a),directives:sortByName(t.directives).map(sortDirective),query:replaceMaybeType(t.query),mutation:replaceMaybeType(t.mutation),subscription:replaceMaybeType(t.subscription)});function replaceType(e){if((0,d.isListType)(e)){return new d.GraphQLList(replaceType(e.ofType))}else if((0,d.isNonNullType)(e)){return new d.GraphQLNonNull(replaceType(e.ofType))}return replaceNamedType(e)}function replaceNamedType(e){return a[e.name]}function replaceMaybeType(e){return e&&replaceNamedType(e)}function sortDirective(e){const t=e.toConfig();return new s.GraphQLDirective({...t,locations:sortBy(t.locations,(e=>e)),args:sortArgs(t.args)})}function sortArgs(e){return sortObjMap(e,(e=>({...e,type:replaceType(e.type)})))}function sortFields(e){return sortObjMap(e,(e=>({...e,type:replaceType(e.type),args:e.args&&sortArgs(e.args)})))}function sortInputFields(e){return sortObjMap(e,(e=>({...e,type:replaceType(e.type)})))}function sortTypes(e){return sortByName(e).map(replaceNamedType)}function sortNamedType(e){if((0,d.isScalarType)(e)||(0,o.isIntrospectionType)(e)){return e}if((0,d.isObjectType)(e)){const t=e.toConfig();return new d.GraphQLObjectType({...t,interfaces:()=>sortTypes(t.interfaces),fields:()=>sortFields(t.fields)})}if((0,d.isInterfaceType)(e)){const t=e.toConfig();return new d.GraphQLInterfaceType({...t,interfaces:()=>sortTypes(t.interfaces),fields:()=>sortFields(t.fields)})}if((0,d.isUnionType)(e)){const t=e.toConfig();return new d.GraphQLUnionType({...t,types:()=>sortTypes(t.types)})}if((0,d.isEnumType)(e)){const t=e.toConfig();return new d.GraphQLEnumType({...t,values:sortObjMap(t.values,(e=>e))})}if((0,d.isInputObjectType)(e)){const t=e.toConfig();return new d.GraphQLInputObjectType({...t,fields:()=>sortInputFields(t.fields)})}false||(0,i.invariant)(false,"Unexpected type: "+(0,n.inspect)(e))}}function sortObjMap(e,t){const a=Object.create(null);for(const n of Object.keys(e).sort(p.naturalCompare)){a[n]=t(e[n])}return a}function sortByName(e){return sortBy(e,(e=>e.name))}function sortBy(e,t){return e.slice().sort(((e,a)=>{const n=t(e);const i=t(a);return(0,p.naturalCompare)(n,i)}))}},6209:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.printIntrospectionSchema=printIntrospectionSchema;t.printSchema=printSchema;t.printType=printType;var n=a(6767);var i=a(8479);var r=a(2900);var p=a(5223);var d=a(4359);var s=a(2739);var o=a(1426);var l=a(6040);var u=a(1922);var c=a(5885);function printSchema(e){return printFilteredSchema(e,(e=>!(0,o.isSpecifiedDirective)(e)),isDefinedType)}function printIntrospectionSchema(e){return printFilteredSchema(e,o.isSpecifiedDirective,l.isIntrospectionType)}function isDefinedType(e){return!(0,u.isSpecifiedScalarType)(e)&&!(0,l.isIntrospectionType)(e)}function printFilteredSchema(e,t,a){const n=e.getDirectives().filter(t);const i=Object.values(e.getTypeMap()).filter(a);return[printSchemaDefinition(e),...n.map((e=>printDirective(e))),...i.map((e=>printType(e)))].filter(Boolean).join("\n\n")}function printSchemaDefinition(e){if(e.description==null&&isSchemaOfCommonNames(e)){return}const t=[];const a=e.getQueryType();if(a){t.push(`  query: ${a.name}`)}const n=e.getMutationType();if(n){t.push(`  mutation: ${n.name}`)}const i=e.getSubscriptionType();if(i){t.push(`  subscription: ${i.name}`)}return printDescription(e)+`schema {\n${t.join("\n")}\n}`}function isSchemaOfCommonNames(e){const t=e.getQueryType();if(t&&t.name!=="Query"){return false}const a=e.getMutationType();if(a&&a.name!=="Mutation"){return false}const n=e.getSubscriptionType();if(n&&n.name!=="Subscription"){return false}return true}function printType(e){if((0,s.isScalarType)(e)){return printScalar(e)}if((0,s.isObjectType)(e)){return printObject(e)}if((0,s.isInterfaceType)(e)){return printInterface(e)}if((0,s.isUnionType)(e)){return printUnion(e)}if((0,s.isEnumType)(e)){return printEnum(e)}if((0,s.isInputObjectType)(e)){return printInputObject(e)}false||(0,i.invariant)(false,"Unexpected type: "+(0,n.inspect)(e))}function printScalar(e){return printDescription(e)+`scalar ${e.name}`+printSpecifiedByURL(e)}function printImplementedInterfaces(e){const t=e.getInterfaces();return t.length?" implements "+t.map((e=>e.name)).join(" & "):""}function printObject(e){return printDescription(e)+`type ${e.name}`+printImplementedInterfaces(e)+printFields(e)}function printInterface(e){return printDescription(e)+`interface ${e.name}`+printImplementedInterfaces(e)+printFields(e)}function printUnion(e){const t=e.getTypes();const a=t.length?" = "+t.join(" | "):"";return printDescription(e)+"union "+e.name+a}function printEnum(e){const t=e.getValues().map(((e,t)=>printDescription(e,"  ",!t)+"  "+e.name+printDeprecated(e.deprecationReason)));return printDescription(e)+`enum ${e.name}`+printBlock(t)}function printInputObject(e){const t=Object.values(e.getFields()).map(((e,t)=>printDescription(e,"  ",!t)+"  "+printInputValue(e)));return printDescription(e)+`input ${e.name}`+printBlock(t)}function printFields(e){const t=Object.values(e.getFields()).map(((e,t)=>printDescription(e,"  ",!t)+"  "+e.name+printArgs(e.args,"  ")+": "+String(e.type)+printDeprecated(e.deprecationReason)));return printBlock(t)}function printBlock(e){return e.length!==0?" {\n"+e.join("\n")+"\n}":""}function printArgs(e,t=""){if(e.length===0){return""}if(e.every((e=>!e.description))){return"("+e.map(printInputValue).join(", ")+")"}return"(\n"+e.map(((e,a)=>printDescription(e,"  "+t,!a)+"  "+t+printInputValue(e))).join("\n")+"\n"+t+")"}function printInputValue(e){const t=(0,c.astFromValue)(e.defaultValue,e.type);let a=e.name+": "+String(e.type);if(t){a+=` = ${(0,d.print)(t)}`}return a+printDeprecated(e.deprecationReason)}function printDirective(e){return printDescription(e)+"directive @"+e.name+printArgs(e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}function printDeprecated(e){if(e==null){return""}if(e!==o.DEFAULT_DEPRECATION_REASON){const t=(0,d.print)({kind:p.Kind.STRING,value:e});return` @deprecated(reason: ${t})`}return" @deprecated"}function printSpecifiedByURL(e){if(e.specifiedByURL==null){return""}const t=(0,d.print)({kind:p.Kind.STRING,value:e.specifiedByURL});return` @specifiedBy(url: ${t})`}function printDescription(e,t="",a=true){const{description:n}=e;if(n==null){return""}const i=(0,d.print)({kind:p.Kind.STRING,value:n,block:(0,r.isPrintableAsBlockString)(n)});const s=t&&!a?"\n"+t:t;return s+i.replace(/\n/g,"\n"+t)+"\n"}},8953:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.separateOperations=separateOperations;var n=a(5223);var i=a(6586);function separateOperations(e){const t=[];const a=Object.create(null);for(const i of e.definitions){switch(i.kind){case n.Kind.OPERATION_DEFINITION:t.push(i);break;case n.Kind.FRAGMENT_DEFINITION:a[i.name.value]=collectDependencies(i.selectionSet);break;default:}}const i=Object.create(null);for(const r of t){const t=new Set;for(const e of collectDependencies(r.selectionSet)){collectTransitiveDependencies(t,a,e)}const p=r.name?r.name.value:"";i[p]={kind:n.Kind.DOCUMENT,definitions:e.definitions.filter((e=>e===r||e.kind===n.Kind.FRAGMENT_DEFINITION&&t.has(e.name.value)))}}return i}function collectTransitiveDependencies(e,t,a){if(!e.has(a)){e.add(a);const n=t[a];if(n!==undefined){for(const a of n){collectTransitiveDependencies(e,t,a)}}}}function collectDependencies(e){const t=[];(0,i.visit)(e,{FragmentSpread(e){t.push(e.name.value)}});return t}},9454:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.sortValueNode=sortValueNode;var n=a(6413);var i=a(5223);function sortValueNode(e){switch(e.kind){case i.Kind.OBJECT:return{...e,fields:sortFields(e.fields)};case i.Kind.LIST:return{...e,values:e.values.map(sortValueNode)};case i.Kind.INT:case i.Kind.FLOAT:case i.Kind.STRING:case i.Kind.BOOLEAN:case i.Kind.NULL:case i.Kind.ENUM:case i.Kind.VARIABLE:return e}}function sortFields(e){return e.map((e=>({...e,value:sortValueNode(e.value)}))).sort(((e,t)=>(0,n.naturalCompare)(e.name.value,t.name.value)))}},3126:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.stripIgnoredCharacters=stripIgnoredCharacters;var n=a(2900);var i=a(3325);var r=a(752);var p=a(1557);function stripIgnoredCharacters(e){const t=(0,r.isSource)(e)?e:new r.Source(e);const a=t.body;const d=new i.Lexer(t);let s="";let o=false;while(d.advance().kind!==p.TokenKind.EOF){const e=d.token;const t=e.kind;const r=!(0,i.isPunctuatorTokenKind)(e.kind);if(o){if(r||e.kind===p.TokenKind.SPREAD){s+=" "}}const l=a.slice(e.start,e.end);if(t===p.TokenKind.BLOCK_STRING){s+=(0,n.printBlockString)(e.value,{minimize:true})}else{s+=l}o=r}return s}},1275:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.doTypesOverlap=doTypesOverlap;t.isEqualType=isEqualType;t.isTypeSubTypeOf=isTypeSubTypeOf;var n=a(2739);function isEqualType(e,t){if(e===t){return true}if((0,n.isNonNullType)(e)&&(0,n.isNonNullType)(t)){return isEqualType(e.ofType,t.ofType)}if((0,n.isListType)(e)&&(0,n.isListType)(t)){return isEqualType(e.ofType,t.ofType)}return false}function isTypeSubTypeOf(e,t,a){if(t===a){return true}if((0,n.isNonNullType)(a)){if((0,n.isNonNullType)(t)){return isTypeSubTypeOf(e,t.ofType,a.ofType)}return false}if((0,n.isNonNullType)(t)){return isTypeSubTypeOf(e,t.ofType,a)}if((0,n.isListType)(a)){if((0,n.isListType)(t)){return isTypeSubTypeOf(e,t.ofType,a.ofType)}return false}if((0,n.isListType)(t)){return false}return(0,n.isAbstractType)(a)&&((0,n.isInterfaceType)(t)||(0,n.isObjectType)(t))&&e.isSubType(a,t)}function doTypesOverlap(e,t,a){if(t===a){return true}if((0,n.isAbstractType)(t)){if((0,n.isAbstractType)(a)){return e.getPossibleTypes(t).some((t=>e.isSubType(a,t)))}return e.isSubType(t,a)}if((0,n.isAbstractType)(a)){return e.isSubType(a,t)}return false}},9944:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.typeFromAST=typeFromAST;var n=a(5223);var i=a(2739);function typeFromAST(e,t){switch(t.kind){case n.Kind.LIST_TYPE:{const a=typeFromAST(e,t.type);return a&&new i.GraphQLList(a)}case n.Kind.NON_NULL_TYPE:{const a=typeFromAST(e,t.type);return a&&new i.GraphQLNonNull(a)}case n.Kind.NAMED_TYPE:return e.getType(t.name.value)}}},5394:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.valueFromAST=valueFromAST;var n=a(6767);var i=a(8479);var r=a(52);var p=a(5223);var d=a(2739);function valueFromAST(e,t,a){if(!e){return}if(e.kind===p.Kind.VARIABLE){const n=e.name.value;if(a==null||a[n]===undefined){return}const i=a[n];if(i===null&&(0,d.isNonNullType)(t)){return}return i}if((0,d.isNonNullType)(t)){if(e.kind===p.Kind.NULL){return}return valueFromAST(e,t.ofType,a)}if(e.kind===p.Kind.NULL){return null}if((0,d.isListType)(t)){const n=t.ofType;if(e.kind===p.Kind.LIST){const t=[];for(const i of e.values){if(isMissingVariable(i,a)){if((0,d.isNonNullType)(n)){return}t.push(null)}else{const e=valueFromAST(i,n,a);if(e===undefined){return}t.push(e)}}return t}const i=valueFromAST(e,n,a);if(i===undefined){return}return[i]}if((0,d.isInputObjectType)(t)){if(e.kind!==p.Kind.OBJECT){return}const n=Object.create(null);const i=(0,r.keyMap)(e.fields,(e=>e.name.value));for(const e of Object.values(t.getFields())){const t=i[e.name];if(!t||isMissingVariable(t.value,a)){if(e.defaultValue!==undefined){n[e.name]=e.defaultValue}else if((0,d.isNonNullType)(e.type)){return}continue}const r=valueFromAST(t.value,e.type,a);if(r===undefined){return}n[e.name]=r}return n}if((0,d.isLeafType)(t)){let n;try{n=t.parseLiteral(e,a)}catch(e){return}if(n===undefined){return}return n}false||(0,i.invariant)(false,"Unexpected input type: "+(0,n.inspect)(t))}function isMissingVariable(e,t){return e.kind===p.Kind.VARIABLE&&(t==null||t[e.name.value]===undefined)}},9354:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.valueFromASTUntyped=valueFromASTUntyped;var n=a(1154);var i=a(5223);function valueFromASTUntyped(e,t){switch(e.kind){case i.Kind.NULL:return null;case i.Kind.INT:return parseInt(e.value,10);case i.Kind.FLOAT:return parseFloat(e.value);case i.Kind.STRING:case i.Kind.ENUM:case i.Kind.BOOLEAN:return e.value;case i.Kind.LIST:return e.values.map((e=>valueFromASTUntyped(e,t)));case i.Kind.OBJECT:return(0,n.keyValMap)(e.fields,(e=>e.name.value),(e=>valueFromASTUntyped(e.value,t)));case i.Kind.VARIABLE:return t===null||t===void 0?void 0:t[e.name.value]}}},8811:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ValidationContext=t.SDLValidationContext=t.ASTValidationContext=void 0;var n=a(5223);var i=a(6586);var r=a(9832);class ASTValidationContext{constructor(e,t){this._ast=e;this._fragments=undefined;this._fragmentSpreads=new Map;this._recursivelyReferencedFragments=new Map;this._onError=t}get[Symbol.toStringTag](){return"ASTValidationContext"}reportError(e){this._onError(e)}getDocument(){return this._ast}getFragment(e){let t;if(this._fragments){t=this._fragments}else{t=Object.create(null);for(const e of this.getDocument().definitions){if(e.kind===n.Kind.FRAGMENT_DEFINITION){t[e.name.value]=e}}this._fragments=t}return t[e]}getFragmentSpreads(e){let t=this._fragmentSpreads.get(e);if(!t){t=[];const a=[e];let i;while(i=a.pop()){for(const e of i.selections){if(e.kind===n.Kind.FRAGMENT_SPREAD){t.push(e)}else if(e.selectionSet){a.push(e.selectionSet)}}}this._fragmentSpreads.set(e,t)}return t}getRecursivelyReferencedFragments(e){let t=this._recursivelyReferencedFragments.get(e);if(!t){t=[];const a=Object.create(null);const n=[e.selectionSet];let i;while(i=n.pop()){for(const e of this.getFragmentSpreads(i)){const i=e.name.value;if(a[i]!==true){a[i]=true;const e=this.getFragment(i);if(e){t.push(e);n.push(e.selectionSet)}}}}this._recursivelyReferencedFragments.set(e,t)}return t}}t.ASTValidationContext=ASTValidationContext;class SDLValidationContext extends ASTValidationContext{constructor(e,t,a){super(e,a);this._schema=t}get[Symbol.toStringTag](){return"SDLValidationContext"}getSchema(){return this._schema}}t.SDLValidationContext=SDLValidationContext;class ValidationContext extends ASTValidationContext{constructor(e,t,a,n){super(t,n);this._schema=e;this._typeInfo=a;this._variableUsages=new Map;this._recursiveVariableUsages=new Map}get[Symbol.toStringTag](){return"ValidationContext"}getSchema(){return this._schema}getVariableUsages(e){let t=this._variableUsages.get(e);if(!t){const a=[];const n=new r.TypeInfo(this._schema);(0,i.visit)(e,(0,r.visitWithTypeInfo)(n,{VariableDefinition:()=>false,Variable(e){a.push({node:e,type:n.getInputType(),defaultValue:n.getDefaultValue()})}}));t=a;this._variableUsages.set(e,t)}return t}getRecursiveVariableUsages(e){let t=this._recursiveVariableUsages.get(e);if(!t){t=this.getVariableUsages(e);for(const a of this.getRecursivelyReferencedFragments(e)){t=t.concat(this.getVariableUsages(a))}this._recursiveVariableUsages.set(e,t)}return t}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getEnumValue(){return this._typeInfo.getEnumValue()}}t.ValidationContext=ValidationContext},2841:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"ExecutableDefinitionsRule",{enumerable:true,get:function(){return p.ExecutableDefinitionsRule}});Object.defineProperty(t,"FieldsOnCorrectTypeRule",{enumerable:true,get:function(){return d.FieldsOnCorrectTypeRule}});Object.defineProperty(t,"FragmentsOnCompositeTypesRule",{enumerable:true,get:function(){return s.FragmentsOnCompositeTypesRule}});Object.defineProperty(t,"KnownArgumentNamesRule",{enumerable:true,get:function(){return o.KnownArgumentNamesRule}});Object.defineProperty(t,"KnownDirectivesRule",{enumerable:true,get:function(){return l.KnownDirectivesRule}});Object.defineProperty(t,"KnownFragmentNamesRule",{enumerable:true,get:function(){return u.KnownFragmentNamesRule}});Object.defineProperty(t,"KnownTypeNamesRule",{enumerable:true,get:function(){return c.KnownTypeNamesRule}});Object.defineProperty(t,"LoneAnonymousOperationRule",{enumerable:true,get:function(){return m.LoneAnonymousOperationRule}});Object.defineProperty(t,"LoneSchemaDefinitionRule",{enumerable:true,get:function(){return P.LoneSchemaDefinitionRule}});Object.defineProperty(t,"NoDeprecatedCustomRule",{enumerable:true,get:function(){return M.NoDeprecatedCustomRule}});Object.defineProperty(t,"NoFragmentCyclesRule",{enumerable:true,get:function(){return f.NoFragmentCyclesRule}});Object.defineProperty(t,"NoSchemaIntrospectionCustomRule",{enumerable:true,get:function(){return G.NoSchemaIntrospectionCustomRule}});Object.defineProperty(t,"NoUndefinedVariablesRule",{enumerable:true,get:function(){return v.NoUndefinedVariablesRule}});Object.defineProperty(t,"NoUnusedFragmentsRule",{enumerable:true,get:function(){return h.NoUnusedFragmentsRule}});Object.defineProperty(t,"NoUnusedVariablesRule",{enumerable:true,get:function(){return y.NoUnusedVariablesRule}});Object.defineProperty(t,"OverlappingFieldsCanBeMergedRule",{enumerable:true,get:function(){return T.OverlappingFieldsCanBeMergedRule}});Object.defineProperty(t,"PossibleFragmentSpreadsRule",{enumerable:true,get:function(){return b.PossibleFragmentSpreadsRule}});Object.defineProperty(t,"PossibleTypeExtensionsRule",{enumerable:true,get:function(){return U.PossibleTypeExtensionsRule}});Object.defineProperty(t,"ProvidedRequiredArgumentsRule",{enumerable:true,get:function(){return g.ProvidedRequiredArgumentsRule}});Object.defineProperty(t,"ScalarLeafsRule",{enumerable:true,get:function(){return N.ScalarLeafsRule}});Object.defineProperty(t,"SingleFieldSubscriptionsRule",{enumerable:true,get:function(){return _.SingleFieldSubscriptionsRule}});Object.defineProperty(t,"UniqueArgumentDefinitionNamesRule",{enumerable:true,get:function(){return k.UniqueArgumentDefinitionNamesRule}});Object.defineProperty(t,"UniqueArgumentNamesRule",{enumerable:true,get:function(){return w.UniqueArgumentNamesRule}});Object.defineProperty(t,"UniqueDirectiveNamesRule",{enumerable:true,get:function(){return x.UniqueDirectiveNamesRule}});Object.defineProperty(t,"UniqueDirectivesPerLocationRule",{enumerable:true,get:function(){return E.UniqueDirectivesPerLocationRule}});Object.defineProperty(t,"UniqueEnumValueNamesRule",{enumerable:true,get:function(){return C.UniqueEnumValueNamesRule}});Object.defineProperty(t,"UniqueFieldDefinitionNamesRule",{enumerable:true,get:function(){return F.UniqueFieldDefinitionNamesRule}});Object.defineProperty(t,"UniqueFragmentNamesRule",{enumerable:true,get:function(){return O.UniqueFragmentNamesRule}});Object.defineProperty(t,"UniqueInputFieldNamesRule",{enumerable:true,get:function(){return S.UniqueInputFieldNamesRule}});Object.defineProperty(t,"UniqueOperationNamesRule",{enumerable:true,get:function(){return D.UniqueOperationNamesRule}});Object.defineProperty(t,"UniqueOperationTypesRule",{enumerable:true,get:function(){return j.UniqueOperationTypesRule}});Object.defineProperty(t,"UniqueTypeNamesRule",{enumerable:true,get:function(){return V.UniqueTypeNamesRule}});Object.defineProperty(t,"UniqueVariableNamesRule",{enumerable:true,get:function(){return I.UniqueVariableNamesRule}});Object.defineProperty(t,"ValidationContext",{enumerable:true,get:function(){return i.ValidationContext}});Object.defineProperty(t,"ValuesOfCorrectTypeRule",{enumerable:true,get:function(){return A.ValuesOfCorrectTypeRule}});Object.defineProperty(t,"VariablesAreInputTypesRule",{enumerable:true,get:function(){return L.VariablesAreInputTypesRule}});Object.defineProperty(t,"VariablesInAllowedPositionRule",{enumerable:true,get:function(){return R.VariablesInAllowedPositionRule}});Object.defineProperty(t,"specifiedRules",{enumerable:true,get:function(){return r.specifiedRules}});Object.defineProperty(t,"validate",{enumerable:true,get:function(){return n.validate}});var n=a(8376);var i=a(8811);var r=a(407);var p=a(6110);var d=a(9025);var s=a(6037);var o=a(3930);var l=a(6506);var u=a(850);var c=a(4629);var m=a(4948);var f=a(4516);var v=a(2214);var h=a(8777);var y=a(2407);var T=a(8966);var b=a(1969);var g=a(3314);var N=a(3378);var _=a(6990);var w=a(4939);var E=a(911);var O=a(3166);var S=a(3389);var D=a(2498);var I=a(2329);var A=a(6536);var L=a(6317);var R=a(5151);var P=a(8234);var j=a(4018);var V=a(6015);var C=a(3625);var F=a(7924);var k=a(3147);var x=a(4356);var U=a(2509);var M=a(1927);var G=a(5325)},6110:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ExecutableDefinitionsRule=ExecutableDefinitionsRule;var n=a(3919);var i=a(5223);var r=a(2617);function ExecutableDefinitionsRule(e){return{Document(t){for(const a of t.definitions){if(!(0,r.isExecutableDefinitionNode)(a)){const t=a.kind===i.Kind.SCHEMA_DEFINITION||a.kind===i.Kind.SCHEMA_EXTENSION?"schema":'"'+a.name.value+'"';e.reportError(new n.GraphQLError(`The ${t} definition is not executable.`,{nodes:a}))}}return false}}}},9025:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.FieldsOnCorrectTypeRule=FieldsOnCorrectTypeRule;var n=a(277);var i=a(6413);var r=a(1664);var p=a(3919);var d=a(2739);function FieldsOnCorrectTypeRule(e){return{Field(t){const a=e.getParentType();if(a){const i=e.getFieldDef();if(!i){const i=e.getSchema();const r=t.name.value;let d=(0,n.didYouMean)("to use an inline fragment on",getSuggestedTypeNames(i,a,r));if(d===""){d=(0,n.didYouMean)(getSuggestedFieldNames(a,r))}e.reportError(new p.GraphQLError(`Cannot query field "${r}" on type "${a.name}".`+d,{nodes:t}))}}}}}function getSuggestedTypeNames(e,t,a){if(!(0,d.isAbstractType)(t)){return[]}const n=new Set;const r=Object.create(null);for(const i of e.getPossibleTypes(t)){if(!i.getFields()[a]){continue}n.add(i);r[i.name]=1;for(const e of i.getInterfaces()){var p;if(!e.getFields()[a]){continue}n.add(e);r[e.name]=((p=r[e.name])!==null&&p!==void 0?p:0)+1}}return[...n].sort(((t,a)=>{const n=r[a.name]-r[t.name];if(n!==0){return n}if((0,d.isInterfaceType)(t)&&e.isSubType(t,a)){return-1}if((0,d.isInterfaceType)(a)&&e.isSubType(a,t)){return 1}return(0,i.naturalCompare)(t.name,a.name)})).map((e=>e.name))}function getSuggestedFieldNames(e,t){if((0,d.isObjectType)(e)||(0,d.isInterfaceType)(e)){const a=Object.keys(e.getFields());return(0,r.suggestionList)(t,a)}return[]}},6037:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.FragmentsOnCompositeTypesRule=FragmentsOnCompositeTypesRule;var n=a(3919);var i=a(4359);var r=a(2739);var p=a(9944);function FragmentsOnCompositeTypesRule(e){return{InlineFragment(t){const a=t.typeCondition;if(a){const t=(0,p.typeFromAST)(e.getSchema(),a);if(t&&!(0,r.isCompositeType)(t)){const t=(0,i.print)(a);e.reportError(new n.GraphQLError(`Fragment cannot condition on non composite type "${t}".`,{nodes:a}))}}},FragmentDefinition(t){const a=(0,p.typeFromAST)(e.getSchema(),t.typeCondition);if(a&&!(0,r.isCompositeType)(a)){const a=(0,i.print)(t.typeCondition);e.reportError(new n.GraphQLError(`Fragment "${t.name.value}" cannot condition on non composite type "${a}".`,{nodes:t.typeCondition}))}}}}},3930:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.KnownArgumentNamesOnDirectivesRule=KnownArgumentNamesOnDirectivesRule;t.KnownArgumentNamesRule=KnownArgumentNamesRule;var n=a(277);var i=a(1664);var r=a(3919);var p=a(5223);var d=a(1426);function KnownArgumentNamesRule(e){return{...KnownArgumentNamesOnDirectivesRule(e),Argument(t){const a=e.getArgument();const p=e.getFieldDef();const d=e.getParentType();if(!a&&p&&d){const a=t.name.value;const s=p.args.map((e=>e.name));const o=(0,i.suggestionList)(a,s);e.reportError(new r.GraphQLError(`Unknown argument "${a}" on field "${d.name}.${p.name}".`+(0,n.didYouMean)(o),{nodes:t}))}}}}function KnownArgumentNamesOnDirectivesRule(e){const t=Object.create(null);const a=e.getSchema();const s=a?a.getDirectives():d.specifiedDirectives;for(const e of s){t[e.name]=e.args.map((e=>e.name))}const o=e.getDocument().definitions;for(const e of o){if(e.kind===p.Kind.DIRECTIVE_DEFINITION){var l;const a=(l=e.arguments)!==null&&l!==void 0?l:[];t[e.name.value]=a.map((e=>e.name.value))}}return{Directive(a){const p=a.name.value;const d=t[p];if(a.arguments&&d){for(const t of a.arguments){const a=t.name.value;if(!d.includes(a)){const s=(0,i.suggestionList)(a,d);e.reportError(new r.GraphQLError(`Unknown argument "${a}" on directive "@${p}".`+(0,n.didYouMean)(s),{nodes:t}))}}}return false}}}},6506:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.KnownDirectivesRule=KnownDirectivesRule;var n=a(6767);var i=a(8479);var r=a(3919);var p=a(9622);var d=a(3134);var s=a(5223);var o=a(1426);function KnownDirectivesRule(e){const t=Object.create(null);const a=e.getSchema();const n=a?a.getDirectives():o.specifiedDirectives;for(const e of n){t[e.name]=e.locations}const i=e.getDocument().definitions;for(const e of i){if(e.kind===s.Kind.DIRECTIVE_DEFINITION){t[e.name.value]=e.locations.map((e=>e.value))}}return{Directive(a,n,i,p,d){const s=a.name.value;const o=t[s];if(!o){e.reportError(new r.GraphQLError(`Unknown directive "@${s}".`,{nodes:a}));return}const l=getDirectiveLocationForASTPath(d);if(l&&!o.includes(l)){e.reportError(new r.GraphQLError(`Directive "@${s}" may not be used on ${l}.`,{nodes:a}))}}}}function getDirectiveLocationForASTPath(e){const t=e[e.length-1];"kind"in t||(0,i.invariant)(false);switch(t.kind){case s.Kind.OPERATION_DEFINITION:return getDirectiveLocationForOperation(t.operation);case s.Kind.FIELD:return d.DirectiveLocation.FIELD;case s.Kind.FRAGMENT_SPREAD:return d.DirectiveLocation.FRAGMENT_SPREAD;case s.Kind.INLINE_FRAGMENT:return d.DirectiveLocation.INLINE_FRAGMENT;case s.Kind.FRAGMENT_DEFINITION:return d.DirectiveLocation.FRAGMENT_DEFINITION;case s.Kind.VARIABLE_DEFINITION:return d.DirectiveLocation.VARIABLE_DEFINITION;case s.Kind.SCHEMA_DEFINITION:case s.Kind.SCHEMA_EXTENSION:return d.DirectiveLocation.SCHEMA;case s.Kind.SCALAR_TYPE_DEFINITION:case s.Kind.SCALAR_TYPE_EXTENSION:return d.DirectiveLocation.SCALAR;case s.Kind.OBJECT_TYPE_DEFINITION:case s.Kind.OBJECT_TYPE_EXTENSION:return d.DirectiveLocation.OBJECT;case s.Kind.FIELD_DEFINITION:return d.DirectiveLocation.FIELD_DEFINITION;case s.Kind.INTERFACE_TYPE_DEFINITION:case s.Kind.INTERFACE_TYPE_EXTENSION:return d.DirectiveLocation.INTERFACE;case s.Kind.UNION_TYPE_DEFINITION:case s.Kind.UNION_TYPE_EXTENSION:return d.DirectiveLocation.UNION;case s.Kind.ENUM_TYPE_DEFINITION:case s.Kind.ENUM_TYPE_EXTENSION:return d.DirectiveLocation.ENUM;case s.Kind.ENUM_VALUE_DEFINITION:return d.DirectiveLocation.ENUM_VALUE;case s.Kind.INPUT_OBJECT_TYPE_DEFINITION:case s.Kind.INPUT_OBJECT_TYPE_EXTENSION:return d.DirectiveLocation.INPUT_OBJECT;case s.Kind.INPUT_VALUE_DEFINITION:{const t=e[e.length-3];"kind"in t||(0,i.invariant)(false);return t.kind===s.Kind.INPUT_OBJECT_TYPE_DEFINITION?d.DirectiveLocation.INPUT_FIELD_DEFINITION:d.DirectiveLocation.ARGUMENT_DEFINITION}default:false||(0,i.invariant)(false,"Unexpected kind: "+(0,n.inspect)(t.kind))}}function getDirectiveLocationForOperation(e){switch(e){case p.OperationTypeNode.QUERY:return d.DirectiveLocation.QUERY;case p.OperationTypeNode.MUTATION:return d.DirectiveLocation.MUTATION;case p.OperationTypeNode.SUBSCRIPTION:return d.DirectiveLocation.SUBSCRIPTION}}},850:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.KnownFragmentNamesRule=KnownFragmentNamesRule;var n=a(3919);function KnownFragmentNamesRule(e){return{FragmentSpread(t){const a=t.name.value;const i=e.getFragment(a);if(!i){e.reportError(new n.GraphQLError(`Unknown fragment "${a}".`,{nodes:t.name}))}}}}},4629:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.KnownTypeNamesRule=KnownTypeNamesRule;var n=a(277);var i=a(1664);var r=a(3919);var p=a(2617);var d=a(6040);var s=a(1922);function KnownTypeNamesRule(e){const t=e.getSchema();const a=t?t.getTypeMap():Object.create(null);const d=Object.create(null);for(const t of e.getDocument().definitions){if((0,p.isTypeDefinitionNode)(t)){d[t.name.value]=true}}const s=[...Object.keys(a),...Object.keys(d)];return{NamedType(t,p,l,u,c){const m=t.name.value;if(!a[m]&&!d[m]){var f;const a=(f=c[2])!==null&&f!==void 0?f:l;const p=a!=null&&isSDLNode(a);if(p&&o.includes(m)){return}const d=(0,i.suggestionList)(m,p?o.concat(s):s);e.reportError(new r.GraphQLError(`Unknown type "${m}".`+(0,n.didYouMean)(d),{nodes:t}))}}}}const o=[...s.specifiedScalarTypes,...d.introspectionTypes].map((e=>e.name));function isSDLNode(e){return"kind"in e&&((0,p.isTypeSystemDefinitionNode)(e)||(0,p.isTypeSystemExtensionNode)(e))}},4948:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.LoneAnonymousOperationRule=LoneAnonymousOperationRule;var n=a(3919);var i=a(5223);function LoneAnonymousOperationRule(e){let t=0;return{Document(e){t=e.definitions.filter((e=>e.kind===i.Kind.OPERATION_DEFINITION)).length},OperationDefinition(a){if(!a.name&&t>1){e.reportError(new n.GraphQLError("This anonymous operation must be the only defined operation.",{nodes:a}))}}}}},8234:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.LoneSchemaDefinitionRule=LoneSchemaDefinitionRule;var n=a(3919);function LoneSchemaDefinitionRule(e){var t,a,i;const r=e.getSchema();const p=(t=(a=(i=r===null||r===void 0?void 0:r.astNode)!==null&&i!==void 0?i:r===null||r===void 0?void 0:r.getQueryType())!==null&&a!==void 0?a:r===null||r===void 0?void 0:r.getMutationType())!==null&&t!==void 0?t:r===null||r===void 0?void 0:r.getSubscriptionType();let d=0;return{SchemaDefinition(t){if(p){e.reportError(new n.GraphQLError("Cannot define a new schema within a schema extension.",{nodes:t}));return}if(d>0){e.reportError(new n.GraphQLError("Must provide only one schema definition.",{nodes:t}))}++d}}}},4516:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.NoFragmentCyclesRule=NoFragmentCyclesRule;var n=a(3919);function NoFragmentCyclesRule(e){const t=Object.create(null);const a=[];const i=Object.create(null);return{OperationDefinition:()=>false,FragmentDefinition(e){detectCycleRecursive(e);return false}};function detectCycleRecursive(r){if(t[r.name.value]){return}const p=r.name.value;t[p]=true;const d=e.getFragmentSpreads(r.selectionSet);if(d.length===0){return}i[p]=a.length;for(const t of d){const r=t.name.value;const p=i[r];a.push(t);if(p===undefined){const t=e.getFragment(r);if(t){detectCycleRecursive(t)}}else{const t=a.slice(p);const i=t.slice(0,-1).map((e=>'"'+e.name.value+'"')).join(", ");e.reportError(new n.GraphQLError(`Cannot spread fragment "${r}" within itself`+(i!==""?` via ${i}.`:"."),{nodes:t}))}a.pop()}i[p]=undefined}}},2214:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.NoUndefinedVariablesRule=NoUndefinedVariablesRule;var n=a(3919);function NoUndefinedVariablesRule(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(a){const i=e.getRecursiveVariableUsages(a);for(const{node:r}of i){const i=r.name.value;if(t[i]!==true){e.reportError(new n.GraphQLError(a.name?`Variable "$${i}" is not defined by operation "${a.name.value}".`:`Variable "$${i}" is not defined.`,{nodes:[r,a]}))}}}},VariableDefinition(e){t[e.variable.name.value]=true}}}},8777:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.NoUnusedFragmentsRule=NoUnusedFragmentsRule;var n=a(3919);function NoUnusedFragmentsRule(e){const t=[];const a=[];return{OperationDefinition(e){t.push(e);return false},FragmentDefinition(e){a.push(e);return false},Document:{leave(){const i=Object.create(null);for(const a of t){for(const t of e.getRecursivelyReferencedFragments(a)){i[t.name.value]=true}}for(const t of a){const a=t.name.value;if(i[a]!==true){e.reportError(new n.GraphQLError(`Fragment "${a}" is never used.`,{nodes:t}))}}}}}}},2407:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.NoUnusedVariablesRule=NoUnusedVariablesRule;var n=a(3919);function NoUnusedVariablesRule(e){let t=[];return{OperationDefinition:{enter(){t=[]},leave(a){const i=Object.create(null);const r=e.getRecursiveVariableUsages(a);for(const{node:e}of r){i[e.name.value]=true}for(const r of t){const t=r.variable.name.value;if(i[t]!==true){e.reportError(new n.GraphQLError(a.name?`Variable "$${t}" is never used in operation "${a.name.value}".`:`Variable "$${t}" is never used.`,{nodes:r}))}}}},VariableDefinition(e){t.push(e)}}}},8966:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.OverlappingFieldsCanBeMergedRule=OverlappingFieldsCanBeMergedRule;var n=a(6767);var i=a(3919);var r=a(5223);var p=a(4359);var d=a(2739);var s=a(9454);var o=a(9944);function reasonMessage(e){if(Array.isArray(e)){return e.map((([e,t])=>`subfields "${e}" conflict because `+reasonMessage(t))).join(" and ")}return e}function OverlappingFieldsCanBeMergedRule(e){const t=new PairSet;const a=new Map;return{SelectionSet(n){const r=findConflictsWithinSelectionSet(e,a,t,e.getParentType(),n);for(const[[t,a],n,p]of r){const r=reasonMessage(a);e.reportError(new i.GraphQLError(`Fields "${t}" conflict because ${r}. Use different aliases on the fields to fetch both if this was intentional.`,{nodes:n.concat(p)}))}}}}function findConflictsWithinSelectionSet(e,t,a,n,i){const r=[];const[p,d]=getFieldsAndFragmentNames(e,t,n,i);collectConflictsWithin(e,r,t,a,p);if(d.length!==0){for(let n=0;n<d.length;n++){collectConflictsBetweenFieldsAndFragment(e,r,t,a,false,p,d[n]);for(let i=n+1;i<d.length;i++){collectConflictsBetweenFragments(e,r,t,a,false,d[n],d[i])}}}return r}function collectConflictsBetweenFieldsAndFragment(e,t,a,n,i,r,p){const d=e.getFragment(p);if(!d){return}const[s,o]=getReferencedFieldsAndFragmentNames(e,a,d);if(r===s){return}collectConflictsBetween(e,t,a,n,i,r,s);for(const d of o){if(n.has(d,p,i)){continue}n.add(d,p,i);collectConflictsBetweenFieldsAndFragment(e,t,a,n,i,r,d)}}function collectConflictsBetweenFragments(e,t,a,n,i,r,p){if(r===p){return}if(n.has(r,p,i)){return}n.add(r,p,i);const d=e.getFragment(r);const s=e.getFragment(p);if(!d||!s){return}const[o,l]=getReferencedFieldsAndFragmentNames(e,a,d);const[u,c]=getReferencedFieldsAndFragmentNames(e,a,s);collectConflictsBetween(e,t,a,n,i,o,u);for(const p of c){collectConflictsBetweenFragments(e,t,a,n,i,r,p)}for(const r of l){collectConflictsBetweenFragments(e,t,a,n,i,r,p)}}function findConflictsBetweenSubSelectionSets(e,t,a,n,i,r,p,d){const s=[];const[o,l]=getFieldsAndFragmentNames(e,t,i,r);const[u,c]=getFieldsAndFragmentNames(e,t,p,d);collectConflictsBetween(e,s,t,a,n,o,u);for(const i of c){collectConflictsBetweenFieldsAndFragment(e,s,t,a,n,o,i)}for(const i of l){collectConflictsBetweenFieldsAndFragment(e,s,t,a,n,u,i)}for(const i of l){for(const r of c){collectConflictsBetweenFragments(e,s,t,a,n,i,r)}}return s}function collectConflictsWithin(e,t,a,n,i){for(const[r,p]of Object.entries(i)){if(p.length>1){for(let i=0;i<p.length;i++){for(let d=i+1;d<p.length;d++){const s=findConflict(e,a,n,false,r,p[i],p[d]);if(s){t.push(s)}}}}}}function collectConflictsBetween(e,t,a,n,i,r,p){for(const[d,s]of Object.entries(r)){const r=p[d];if(r){for(const p of s){for(const s of r){const r=findConflict(e,a,n,i,d,p,s);if(r){t.push(r)}}}}}}function findConflict(e,t,a,i,r,p,s){const[o,l,u]=p;const[c,m,f]=s;const v=i||o!==c&&(0,d.isObjectType)(o)&&(0,d.isObjectType)(c);if(!v){const e=l.name.value;const t=m.name.value;if(e!==t){return[[r,`"${e}" and "${t}" are different fields`],[l],[m]]}if(stringifyArguments(l)!==stringifyArguments(m)){return[[r,"they have differing arguments"],[l],[m]]}}const h=u===null||u===void 0?void 0:u.type;const y=f===null||f===void 0?void 0:f.type;if(h&&y&&doTypesConflict(h,y)){return[[r,`they return conflicting types "${(0,n.inspect)(h)}" and "${(0,n.inspect)(y)}"`],[l],[m]]}const T=l.selectionSet;const b=m.selectionSet;if(T&&b){const n=findConflictsBetweenSubSelectionSets(e,t,a,v,(0,d.getNamedType)(h),T,(0,d.getNamedType)(y),b);return subfieldConflicts(n,r,l,m)}}function stringifyArguments(e){var t;const a=(t=e.arguments)!==null&&t!==void 0?t:[];const n={kind:r.Kind.OBJECT,fields:a.map((e=>({kind:r.Kind.OBJECT_FIELD,name:e.name,value:e.value})))};return(0,p.print)((0,s.sortValueNode)(n))}function doTypesConflict(e,t){if((0,d.isListType)(e)){return(0,d.isListType)(t)?doTypesConflict(e.ofType,t.ofType):true}if((0,d.isListType)(t)){return true}if((0,d.isNonNullType)(e)){return(0,d.isNonNullType)(t)?doTypesConflict(e.ofType,t.ofType):true}if((0,d.isNonNullType)(t)){return true}if((0,d.isLeafType)(e)||(0,d.isLeafType)(t)){return e!==t}return false}function getFieldsAndFragmentNames(e,t,a,n){const i=t.get(n);if(i){return i}const r=Object.create(null);const p=Object.create(null);_collectFieldsAndFragmentNames(e,a,n,r,p);const d=[r,Object.keys(p)];t.set(n,d);return d}function getReferencedFieldsAndFragmentNames(e,t,a){const n=t.get(a.selectionSet);if(n){return n}const i=(0,o.typeFromAST)(e.getSchema(),a.typeCondition);return getFieldsAndFragmentNames(e,t,i,a.selectionSet)}function _collectFieldsAndFragmentNames(e,t,a,n,i){for(const p of a.selections){switch(p.kind){case r.Kind.FIELD:{const e=p.name.value;let a;if((0,d.isObjectType)(t)||(0,d.isInterfaceType)(t)){a=t.getFields()[e]}const i=p.alias?p.alias.value:e;if(!n[i]){n[i]=[]}n[i].push([t,p,a]);break}case r.Kind.FRAGMENT_SPREAD:i[p.name.value]=true;break;case r.Kind.INLINE_FRAGMENT:{const a=p.typeCondition;const r=a?(0,o.typeFromAST)(e.getSchema(),a):t;_collectFieldsAndFragmentNames(e,r,p.selectionSet,n,i);break}}}}function subfieldConflicts(e,t,a,n){if(e.length>0){return[[t,e.map((([e])=>e))],[a,...e.map((([,e])=>e)).flat()],[n,...e.map((([,,e])=>e)).flat()]]}}class PairSet{constructor(){this._data=new Map}has(e,t,a){var n;const[i,r]=e<t?[e,t]:[t,e];const p=(n=this._data.get(i))===null||n===void 0?void 0:n.get(r);if(p===undefined){return false}return a?true:a===p}add(e,t,a){const[n,i]=e<t?[e,t]:[t,e];const r=this._data.get(n);if(r===undefined){this._data.set(n,new Map([[i,a]]))}else{r.set(i,a)}}}},1969:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.PossibleFragmentSpreadsRule=PossibleFragmentSpreadsRule;var n=a(6767);var i=a(3919);var r=a(2739);var p=a(1275);var d=a(9944);function PossibleFragmentSpreadsRule(e){return{InlineFragment(t){const a=e.getType();const d=e.getParentType();if((0,r.isCompositeType)(a)&&(0,r.isCompositeType)(d)&&!(0,p.doTypesOverlap)(e.getSchema(),a,d)){const r=(0,n.inspect)(d);const p=(0,n.inspect)(a);e.reportError(new i.GraphQLError(`Fragment cannot be spread here as objects of type "${r}" can never be of type "${p}".`,{nodes:t}))}},FragmentSpread(t){const a=t.name.value;const r=getFragmentType(e,a);const d=e.getParentType();if(r&&d&&!(0,p.doTypesOverlap)(e.getSchema(),r,d)){const p=(0,n.inspect)(d);const s=(0,n.inspect)(r);e.reportError(new i.GraphQLError(`Fragment "${a}" cannot be spread here as objects of type "${p}" can never be of type "${s}".`,{nodes:t}))}}}}function getFragmentType(e,t){const a=e.getFragment(t);if(a){const t=(0,d.typeFromAST)(e.getSchema(),a.typeCondition);if((0,r.isCompositeType)(t)){return t}}}},2509:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.PossibleTypeExtensionsRule=PossibleTypeExtensionsRule;var n=a(277);var i=a(6767);var r=a(8479);var p=a(1664);var d=a(3919);var s=a(5223);var o=a(2617);var l=a(2739);function PossibleTypeExtensionsRule(e){const t=e.getSchema();const a=Object.create(null);for(const t of e.getDocument().definitions){if((0,o.isTypeDefinitionNode)(t)){a[t.name.value]=t}}return{ScalarTypeExtension:checkExtension,ObjectTypeExtension:checkExtension,InterfaceTypeExtension:checkExtension,UnionTypeExtension:checkExtension,EnumTypeExtension:checkExtension,InputObjectTypeExtension:checkExtension};function checkExtension(i){const r=i.name.value;const s=a[r];const o=t===null||t===void 0?void 0:t.getType(r);let l;if(s){l=u[s.kind]}else if(o){l=typeToExtKind(o)}if(l){if(l!==i.kind){const t=extensionKindToTypeName(i.kind);e.reportError(new d.GraphQLError(`Cannot extend non-${t} type "${r}".`,{nodes:s?[s,i]:i}))}}else{const s=Object.keys({...a,...t===null||t===void 0?void 0:t.getTypeMap()});const o=(0,p.suggestionList)(r,s);e.reportError(new d.GraphQLError(`Cannot extend type "${r}" because it is not defined.`+(0,n.didYouMean)(o),{nodes:i.name}))}}}const u={[s.Kind.SCALAR_TYPE_DEFINITION]:s.Kind.SCALAR_TYPE_EXTENSION,[s.Kind.OBJECT_TYPE_DEFINITION]:s.Kind.OBJECT_TYPE_EXTENSION,[s.Kind.INTERFACE_TYPE_DEFINITION]:s.Kind.INTERFACE_TYPE_EXTENSION,[s.Kind.UNION_TYPE_DEFINITION]:s.Kind.UNION_TYPE_EXTENSION,[s.Kind.ENUM_TYPE_DEFINITION]:s.Kind.ENUM_TYPE_EXTENSION,[s.Kind.INPUT_OBJECT_TYPE_DEFINITION]:s.Kind.INPUT_OBJECT_TYPE_EXTENSION};function typeToExtKind(e){if((0,l.isScalarType)(e)){return s.Kind.SCALAR_TYPE_EXTENSION}if((0,l.isObjectType)(e)){return s.Kind.OBJECT_TYPE_EXTENSION}if((0,l.isInterfaceType)(e)){return s.Kind.INTERFACE_TYPE_EXTENSION}if((0,l.isUnionType)(e)){return s.Kind.UNION_TYPE_EXTENSION}if((0,l.isEnumType)(e)){return s.Kind.ENUM_TYPE_EXTENSION}if((0,l.isInputObjectType)(e)){return s.Kind.INPUT_OBJECT_TYPE_EXTENSION}false||(0,r.invariant)(false,"Unexpected type: "+(0,i.inspect)(e))}function extensionKindToTypeName(e){switch(e){case s.Kind.SCALAR_TYPE_EXTENSION:return"scalar";case s.Kind.OBJECT_TYPE_EXTENSION:return"object";case s.Kind.INTERFACE_TYPE_EXTENSION:return"interface";case s.Kind.UNION_TYPE_EXTENSION:return"union";case s.Kind.ENUM_TYPE_EXTENSION:return"enum";case s.Kind.INPUT_OBJECT_TYPE_EXTENSION:return"input object";default:false||(0,r.invariant)(false,"Unexpected kind: "+(0,i.inspect)(e))}}},3314:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ProvidedRequiredArgumentsOnDirectivesRule=ProvidedRequiredArgumentsOnDirectivesRule;t.ProvidedRequiredArgumentsRule=ProvidedRequiredArgumentsRule;var n=a(6767);var i=a(52);var r=a(3919);var p=a(5223);var d=a(4359);var s=a(2739);var o=a(1426);function ProvidedRequiredArgumentsRule(e){return{...ProvidedRequiredArgumentsOnDirectivesRule(e),Field:{leave(t){var a;const i=e.getFieldDef();if(!i){return false}const p=new Set((a=t.arguments)===null||a===void 0?void 0:a.map((e=>e.name.value)));for(const a of i.args){if(!p.has(a.name)&&(0,s.isRequiredArgument)(a)){const p=(0,n.inspect)(a.type);e.reportError(new r.GraphQLError(`Field "${i.name}" argument "${a.name}" of type "${p}" is required, but it was not provided.`,{nodes:t}))}}}}}}function ProvidedRequiredArgumentsOnDirectivesRule(e){var t;const a=Object.create(null);const l=e.getSchema();const u=(t=l===null||l===void 0?void 0:l.getDirectives())!==null&&t!==void 0?t:o.specifiedDirectives;for(const e of u){a[e.name]=(0,i.keyMap)(e.args.filter(s.isRequiredArgument),(e=>e.name))}const c=e.getDocument().definitions;for(const e of c){if(e.kind===p.Kind.DIRECTIVE_DEFINITION){var m;const t=(m=e.arguments)!==null&&m!==void 0?m:[];a[e.name.value]=(0,i.keyMap)(t.filter(isRequiredArgumentNode),(e=>e.name.value))}}return{Directive:{leave(t){const i=t.name.value;const p=a[i];if(p){var o;const a=(o=t.arguments)!==null&&o!==void 0?o:[];const l=new Set(a.map((e=>e.name.value)));for(const[a,o]of Object.entries(p)){if(!l.has(a)){const p=(0,s.isType)(o.type)?(0,n.inspect)(o.type):(0,d.print)(o.type);e.reportError(new r.GraphQLError(`Directive "@${i}" argument "${a}" of type "${p}" is required, but it was not provided.`,{nodes:t}))}}}}}}}function isRequiredArgumentNode(e){return e.type.kind===p.Kind.NON_NULL_TYPE&&e.defaultValue==null}},3378:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ScalarLeafsRule=ScalarLeafsRule;var n=a(6767);var i=a(3919);var r=a(2739);function ScalarLeafsRule(e){return{Field(t){const a=e.getType();const p=t.selectionSet;if(a){if((0,r.isLeafType)((0,r.getNamedType)(a))){if(p){const r=t.name.value;const d=(0,n.inspect)(a);e.reportError(new i.GraphQLError(`Field "${r}" must not have a selection since type "${d}" has no subfields.`,{nodes:p}))}}else if(!p){const r=t.name.value;const p=(0,n.inspect)(a);e.reportError(new i.GraphQLError(`Field "${r}" of type "${p}" must have a selection of subfields. Did you mean "${r} { ... }"?`,{nodes:t}))}}}}}},6990:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.SingleFieldSubscriptionsRule=SingleFieldSubscriptionsRule;var n=a(3919);var i=a(5223);var r=a(2396);function SingleFieldSubscriptionsRule(e){return{OperationDefinition(t){if(t.operation==="subscription"){const a=e.getSchema();const p=a.getSubscriptionType();if(p){const d=t.name?t.name.value:null;const s=Object.create(null);const o=e.getDocument();const l=Object.create(null);for(const e of o.definitions){if(e.kind===i.Kind.FRAGMENT_DEFINITION){l[e.name.value]=e}}const u=(0,r.collectFields)(a,l,s,p,t.selectionSet);if(u.size>1){const t=[...u.values()];const a=t.slice(1);const i=a.flat();e.reportError(new n.GraphQLError(d!=null?`Subscription "${d}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",{nodes:i}))}for(const t of u.values()){const a=t[0];const i=a.name.value;if(i.startsWith("__")){e.reportError(new n.GraphQLError(d!=null?`Subscription "${d}" must not select an introspection top level field.`:"Anonymous Subscription must not select an introspection top level field.",{nodes:t}))}}}}}}}},3147:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueArgumentDefinitionNamesRule=UniqueArgumentDefinitionNamesRule;var n=a(9734);var i=a(3919);function UniqueArgumentDefinitionNamesRule(e){return{DirectiveDefinition(e){var t;const a=(t=e.arguments)!==null&&t!==void 0?t:[];return checkArgUniqueness(`@${e.name.value}`,a)},InterfaceTypeDefinition:checkArgUniquenessPerField,InterfaceTypeExtension:checkArgUniquenessPerField,ObjectTypeDefinition:checkArgUniquenessPerField,ObjectTypeExtension:checkArgUniquenessPerField};function checkArgUniquenessPerField(e){var t;const a=e.name.value;const n=(t=e.fields)!==null&&t!==void 0?t:[];for(const e of n){var i;const t=e.name.value;const n=(i=e.arguments)!==null&&i!==void 0?i:[];checkArgUniqueness(`${a}.${t}`,n)}return false}function checkArgUniqueness(t,a){const r=(0,n.groupBy)(a,(e=>e.name.value));for(const[a,n]of r){if(n.length>1){e.reportError(new i.GraphQLError(`Argument "${t}(${a}:)" can only be defined once.`,{nodes:n.map((e=>e.name))}))}}return false}}},4939:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueArgumentNamesRule=UniqueArgumentNamesRule;var n=a(9734);var i=a(3919);function UniqueArgumentNamesRule(e){return{Field:checkArgUniqueness,Directive:checkArgUniqueness};function checkArgUniqueness(t){var a;const r=(a=t.arguments)!==null&&a!==void 0?a:[];const p=(0,n.groupBy)(r,(e=>e.name.value));for(const[t,a]of p){if(a.length>1){e.reportError(new i.GraphQLError(`There can be only one argument named "${t}".`,{nodes:a.map((e=>e.name))}))}}}}},4356:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueDirectiveNamesRule=UniqueDirectiveNamesRule;var n=a(3919);function UniqueDirectiveNamesRule(e){const t=Object.create(null);const a=e.getSchema();return{DirectiveDefinition(i){const r=i.name.value;if(a!==null&&a!==void 0&&a.getDirective(r)){e.reportError(new n.GraphQLError(`Directive "@${r}" already exists in the schema. It cannot be redefined.`,{nodes:i.name}));return}if(t[r]){e.reportError(new n.GraphQLError(`There can be only one directive named "@${r}".`,{nodes:[t[r],i.name]}))}else{t[r]=i.name}return false}}}},911:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueDirectivesPerLocationRule=UniqueDirectivesPerLocationRule;var n=a(3919);var i=a(5223);var r=a(2617);var p=a(1426);function UniqueDirectivesPerLocationRule(e){const t=Object.create(null);const a=e.getSchema();const d=a?a.getDirectives():p.specifiedDirectives;for(const e of d){t[e.name]=!e.isRepeatable}const s=e.getDocument().definitions;for(const e of s){if(e.kind===i.Kind.DIRECTIVE_DEFINITION){t[e.name.value]=!e.repeatable}}const o=Object.create(null);const l=Object.create(null);return{enter(a){if(!("directives"in a)||!a.directives){return}let p;if(a.kind===i.Kind.SCHEMA_DEFINITION||a.kind===i.Kind.SCHEMA_EXTENSION){p=o}else if((0,r.isTypeDefinitionNode)(a)||(0,r.isTypeExtensionNode)(a)){const e=a.name.value;p=l[e];if(p===undefined){l[e]=p=Object.create(null)}}else{p=Object.create(null)}for(const i of a.directives){const a=i.name.value;if(t[a]){if(p[a]){e.reportError(new n.GraphQLError(`The directive "@${a}" can only be used once at this location.`,{nodes:[p[a],i]}))}else{p[a]=i}}}}}}},3625:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueEnumValueNamesRule=UniqueEnumValueNamesRule;var n=a(3919);var i=a(2739);function UniqueEnumValueNamesRule(e){const t=e.getSchema();const a=t?t.getTypeMap():Object.create(null);const r=Object.create(null);return{EnumTypeDefinition:checkValueUniqueness,EnumTypeExtension:checkValueUniqueness};function checkValueUniqueness(t){var p;const d=t.name.value;if(!r[d]){r[d]=Object.create(null)}const s=(p=t.values)!==null&&p!==void 0?p:[];const o=r[d];for(const t of s){const r=t.name.value;const p=a[d];if((0,i.isEnumType)(p)&&p.getValue(r)){e.reportError(new n.GraphQLError(`Enum value "${d}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name}))}else if(o[r]){e.reportError(new n.GraphQLError(`Enum value "${d}.${r}" can only be defined once.`,{nodes:[o[r],t.name]}))}else{o[r]=t.name}}return false}}},7924:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueFieldDefinitionNamesRule=UniqueFieldDefinitionNamesRule;var n=a(3919);var i=a(2739);function UniqueFieldDefinitionNamesRule(e){const t=e.getSchema();const a=t?t.getTypeMap():Object.create(null);const i=Object.create(null);return{InputObjectTypeDefinition:checkFieldUniqueness,InputObjectTypeExtension:checkFieldUniqueness,InterfaceTypeDefinition:checkFieldUniqueness,InterfaceTypeExtension:checkFieldUniqueness,ObjectTypeDefinition:checkFieldUniqueness,ObjectTypeExtension:checkFieldUniqueness};function checkFieldUniqueness(t){var r;const p=t.name.value;if(!i[p]){i[p]=Object.create(null)}const d=(r=t.fields)!==null&&r!==void 0?r:[];const s=i[p];for(const t of d){const i=t.name.value;if(hasField(a[p],i)){e.reportError(new n.GraphQLError(`Field "${p}.${i}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name}))}else if(s[i]){e.reportError(new n.GraphQLError(`Field "${p}.${i}" can only be defined once.`,{nodes:[s[i],t.name]}))}else{s[i]=t.name}}return false}}function hasField(e,t){if((0,i.isObjectType)(e)||(0,i.isInterfaceType)(e)||(0,i.isInputObjectType)(e)){return e.getFields()[t]!=null}return false}},3166:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueFragmentNamesRule=UniqueFragmentNamesRule;var n=a(3919);function UniqueFragmentNamesRule(e){const t=Object.create(null);return{OperationDefinition:()=>false,FragmentDefinition(a){const i=a.name.value;if(t[i]){e.reportError(new n.GraphQLError(`There can be only one fragment named "${i}".`,{nodes:[t[i],a.name]}))}else{t[i]=a.name}return false}}}},3389:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueInputFieldNamesRule=UniqueInputFieldNamesRule;var n=a(8479);var i=a(3919);function UniqueInputFieldNamesRule(e){const t=[];let a=Object.create(null);return{ObjectValue:{enter(){t.push(a);a=Object.create(null)},leave(){const e=t.pop();e||(0,n.invariant)(false);a=e}},ObjectField(t){const n=t.name.value;if(a[n]){e.reportError(new i.GraphQLError(`There can be only one input field named "${n}".`,{nodes:[a[n],t.name]}))}else{a[n]=t.name}}}}},2498:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueOperationNamesRule=UniqueOperationNamesRule;var n=a(3919);function UniqueOperationNamesRule(e){const t=Object.create(null);return{OperationDefinition(a){const i=a.name;if(i){if(t[i.value]){e.reportError(new n.GraphQLError(`There can be only one operation named "${i.value}".`,{nodes:[t[i.value],i]}))}else{t[i.value]=i}}return false},FragmentDefinition:()=>false}}},4018:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueOperationTypesRule=UniqueOperationTypesRule;var n=a(3919);function UniqueOperationTypesRule(e){const t=e.getSchema();const a=Object.create(null);const i=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:checkOperationTypes,SchemaExtension:checkOperationTypes};function checkOperationTypes(t){var r;const p=(r=t.operationTypes)!==null&&r!==void 0?r:[];for(const t of p){const r=t.operation;const p=a[r];if(i[r]){e.reportError(new n.GraphQLError(`Type for ${r} already defined in the schema. It cannot be redefined.`,{nodes:t}))}else if(p){e.reportError(new n.GraphQLError(`There can be only one ${r} type in schema.`,{nodes:[p,t]}))}else{a[r]=t}}return false}}},6015:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueTypeNamesRule=UniqueTypeNamesRule;var n=a(3919);function UniqueTypeNamesRule(e){const t=Object.create(null);const a=e.getSchema();return{ScalarTypeDefinition:checkTypeName,ObjectTypeDefinition:checkTypeName,InterfaceTypeDefinition:checkTypeName,UnionTypeDefinition:checkTypeName,EnumTypeDefinition:checkTypeName,InputObjectTypeDefinition:checkTypeName};function checkTypeName(i){const r=i.name.value;if(a!==null&&a!==void 0&&a.getType(r)){e.reportError(new n.GraphQLError(`Type "${r}" already exists in the schema. It cannot also be defined in this type definition.`,{nodes:i.name}));return}if(t[r]){e.reportError(new n.GraphQLError(`There can be only one type named "${r}".`,{nodes:[t[r],i.name]}))}else{t[r]=i.name}return false}}},2329:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UniqueVariableNamesRule=UniqueVariableNamesRule;var n=a(9734);var i=a(3919);function UniqueVariableNamesRule(e){return{OperationDefinition(t){var a;const r=(a=t.variableDefinitions)!==null&&a!==void 0?a:[];const p=(0,n.groupBy)(r,(e=>e.variable.name.value));for(const[t,a]of p){if(a.length>1){e.reportError(new i.GraphQLError(`There can be only one variable named "$${t}".`,{nodes:a.map((e=>e.variable.name))}))}}}}}},6536:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ValuesOfCorrectTypeRule=ValuesOfCorrectTypeRule;var n=a(277);var i=a(6767);var r=a(52);var p=a(1664);var d=a(3919);var s=a(4359);var o=a(2739);function ValuesOfCorrectTypeRule(e){return{ListValue(t){const a=(0,o.getNullableType)(e.getParentInputType());if(!(0,o.isListType)(a)){isValidValueNode(e,t);return false}},ObjectValue(t){const a=(0,o.getNamedType)(e.getInputType());if(!(0,o.isInputObjectType)(a)){isValidValueNode(e,t);return false}const n=(0,r.keyMap)(t.fields,(e=>e.name.value));for(const r of Object.values(a.getFields())){const p=n[r.name];if(!p&&(0,o.isRequiredInputField)(r)){const n=(0,i.inspect)(r.type);e.reportError(new d.GraphQLError(`Field "${a.name}.${r.name}" of required type "${n}" was not provided.`,{nodes:t}))}}},ObjectField(t){const a=(0,o.getNamedType)(e.getParentInputType());const i=e.getInputType();if(!i&&(0,o.isInputObjectType)(a)){const i=(0,p.suggestionList)(t.name.value,Object.keys(a.getFields()));e.reportError(new d.GraphQLError(`Field "${t.name.value}" is not defined by type "${a.name}".`+(0,n.didYouMean)(i),{nodes:t}))}},NullValue(t){const a=e.getInputType();if((0,o.isNonNullType)(a)){e.reportError(new d.GraphQLError(`Expected value of type "${(0,i.inspect)(a)}", found ${(0,s.print)(t)}.`,{nodes:t}))}},EnumValue:t=>isValidValueNode(e,t),IntValue:t=>isValidValueNode(e,t),FloatValue:t=>isValidValueNode(e,t),StringValue:t=>isValidValueNode(e,t),BooleanValue:t=>isValidValueNode(e,t)}}function isValidValueNode(e,t){const a=e.getInputType();if(!a){return}const n=(0,o.getNamedType)(a);if(!(0,o.isLeafType)(n)){const n=(0,i.inspect)(a);e.reportError(new d.GraphQLError(`Expected value of type "${n}", found ${(0,s.print)(t)}.`,{nodes:t}));return}try{const r=n.parseLiteral(t,undefined);if(r===undefined){const n=(0,i.inspect)(a);e.reportError(new d.GraphQLError(`Expected value of type "${n}", found ${(0,s.print)(t)}.`,{nodes:t}))}}catch(n){const r=(0,i.inspect)(a);if(n instanceof d.GraphQLError){e.reportError(n)}else{e.reportError(new d.GraphQLError(`Expected value of type "${r}", found ${(0,s.print)(t)}; `+n.message,{nodes:t,originalError:n}))}}}},6317:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.VariablesAreInputTypesRule=VariablesAreInputTypesRule;var n=a(3919);var i=a(4359);var r=a(2739);var p=a(9944);function VariablesAreInputTypesRule(e){return{VariableDefinition(t){const a=(0,p.typeFromAST)(e.getSchema(),t.type);if(a!==undefined&&!(0,r.isInputType)(a)){const a=t.variable.name.value;const r=(0,i.print)(t.type);e.reportError(new n.GraphQLError(`Variable "$${a}" cannot be non-input type "${r}".`,{nodes:t.type}))}}}}},5151:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.VariablesInAllowedPositionRule=VariablesInAllowedPositionRule;var n=a(6767);var i=a(3919);var r=a(5223);var p=a(2739);var d=a(1275);var s=a(9944);function VariablesInAllowedPositionRule(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(a){const r=e.getRecursiveVariableUsages(a);for(const{node:a,type:p,defaultValue:d}of r){const r=a.name.value;const o=t[r];if(o&&p){const t=e.getSchema();const l=(0,s.typeFromAST)(t,o.type);if(l&&!allowedVariableUsage(t,l,o.defaultValue,p,d)){const t=(0,n.inspect)(l);const d=(0,n.inspect)(p);e.reportError(new i.GraphQLError(`Variable "$${r}" of type "${t}" used in position expecting type "${d}".`,{nodes:[o,a]}))}}}}},VariableDefinition(e){t[e.variable.name.value]=e}}}function allowedVariableUsage(e,t,a,n,i){if((0,p.isNonNullType)(n)&&!(0,p.isNonNullType)(t)){const p=a!=null&&a.kind!==r.Kind.NULL;const s=i!==undefined;if(!p&&!s){return false}const o=n.ofType;return(0,d.isTypeSubTypeOf)(e,t,o)}return(0,d.isTypeSubTypeOf)(e,t,n)}},1927:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.NoDeprecatedCustomRule=NoDeprecatedCustomRule;var n=a(8479);var i=a(3919);var r=a(2739);function NoDeprecatedCustomRule(e){return{Field(t){const a=e.getFieldDef();const r=a===null||a===void 0?void 0:a.deprecationReason;if(a&&r!=null){const p=e.getParentType();p!=null||(0,n.invariant)(false);e.reportError(new i.GraphQLError(`The field ${p.name}.${a.name} is deprecated. ${r}`,{nodes:t}))}},Argument(t){const a=e.getArgument();const r=a===null||a===void 0?void 0:a.deprecationReason;if(a&&r!=null){const p=e.getDirective();if(p!=null){e.reportError(new i.GraphQLError(`Directive "@${p.name}" argument "${a.name}" is deprecated. ${r}`,{nodes:t}))}else{const p=e.getParentType();const d=e.getFieldDef();p!=null&&d!=null||(0,n.invariant)(false);e.reportError(new i.GraphQLError(`Field "${p.name}.${d.name}" argument "${a.name}" is deprecated. ${r}`,{nodes:t}))}}},ObjectField(t){const a=(0,r.getNamedType)(e.getParentInputType());if((0,r.isInputObjectType)(a)){const n=a.getFields()[t.name.value];const r=n===null||n===void 0?void 0:n.deprecationReason;if(r!=null){e.reportError(new i.GraphQLError(`The input field ${a.name}.${n.name} is deprecated. ${r}`,{nodes:t}))}}},EnumValue(t){const a=e.getEnumValue();const p=a===null||a===void 0?void 0:a.deprecationReason;if(a&&p!=null){const d=(0,r.getNamedType)(e.getInputType());d!=null||(0,n.invariant)(false);e.reportError(new i.GraphQLError(`The enum value "${d.name}.${a.name}" is deprecated. ${p}`,{nodes:t}))}}}}},5325:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.NoSchemaIntrospectionCustomRule=NoSchemaIntrospectionCustomRule;var n=a(3919);var i=a(2739);var r=a(6040);function NoSchemaIntrospectionCustomRule(e){return{Field(t){const a=(0,i.getNamedType)(e.getType());if(a&&(0,r.isIntrospectionType)(a)){e.reportError(new n.GraphQLError(`GraphQL introspection has been disabled, but the requested query contained the field "${t.name.value}".`,{nodes:t}))}}}}},407:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.specifiedSDLRules=t.specifiedRules=void 0;var n=a(6110);var i=a(9025);var r=a(6037);var p=a(3930);var d=a(6506);var s=a(850);var o=a(4629);var l=a(4948);var u=a(8234);var c=a(4516);var m=a(2214);var f=a(8777);var v=a(2407);var h=a(8966);var y=a(1969);var T=a(2509);var b=a(3314);var g=a(3378);var N=a(6990);var _=a(3147);var w=a(4939);var E=a(4356);var O=a(911);var S=a(3625);var D=a(7924);var I=a(3166);var A=a(3389);var L=a(2498);var R=a(4018);var P=a(6015);var j=a(2329);var V=a(6536);var C=a(6317);var F=a(5151);const k=Object.freeze([n.ExecutableDefinitionsRule,L.UniqueOperationNamesRule,l.LoneAnonymousOperationRule,N.SingleFieldSubscriptionsRule,o.KnownTypeNamesRule,r.FragmentsOnCompositeTypesRule,C.VariablesAreInputTypesRule,g.ScalarLeafsRule,i.FieldsOnCorrectTypeRule,I.UniqueFragmentNamesRule,s.KnownFragmentNamesRule,f.NoUnusedFragmentsRule,y.PossibleFragmentSpreadsRule,c.NoFragmentCyclesRule,j.UniqueVariableNamesRule,m.NoUndefinedVariablesRule,v.NoUnusedVariablesRule,d.KnownDirectivesRule,O.UniqueDirectivesPerLocationRule,p.KnownArgumentNamesRule,w.UniqueArgumentNamesRule,V.ValuesOfCorrectTypeRule,b.ProvidedRequiredArgumentsRule,F.VariablesInAllowedPositionRule,h.OverlappingFieldsCanBeMergedRule,A.UniqueInputFieldNamesRule]);t.specifiedRules=k;const x=Object.freeze([u.LoneSchemaDefinitionRule,R.UniqueOperationTypesRule,P.UniqueTypeNamesRule,S.UniqueEnumValueNamesRule,D.UniqueFieldDefinitionNamesRule,_.UniqueArgumentDefinitionNamesRule,E.UniqueDirectiveNamesRule,o.KnownTypeNamesRule,d.KnownDirectivesRule,O.UniqueDirectivesPerLocationRule,T.PossibleTypeExtensionsRule,p.KnownArgumentNamesOnDirectivesRule,w.UniqueArgumentNamesRule,A.UniqueInputFieldNamesRule,b.ProvidedRequiredArgumentsOnDirectivesRule]);t.specifiedSDLRules=x},8376:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.assertValidSDL=assertValidSDL;t.assertValidSDLExtension=assertValidSDLExtension;t.validate=validate;t.validateSDL=validateSDL;var n=a(3387);var i=a(3919);var r=a(6586);var p=a(3622);var d=a(9832);var s=a(407);var o=a(8811);function validate(e,t,a=s.specifiedRules,l,u=new d.TypeInfo(e)){var c;const m=(c=l===null||l===void 0?void 0:l.maxErrors)!==null&&c!==void 0?c:100;t||(0,n.devAssert)(false,"Must provide document.");(0,p.assertValidSchema)(e);const f=Object.freeze({});const v=[];const h=new o.ValidationContext(e,t,u,(e=>{if(v.length>=m){v.push(new i.GraphQLError("Too many validation errors, error limit reached. Validation aborted."));throw f}v.push(e)}));const y=(0,r.visitInParallel)(a.map((e=>e(h))));try{(0,r.visit)(t,(0,d.visitWithTypeInfo)(u,y))}catch(e){if(e!==f){throw e}}return v}function validateSDL(e,t,a=s.specifiedSDLRules){const n=[];const i=new o.SDLValidationContext(e,t,(e=>{n.push(e)}));const p=a.map((e=>e(i)));(0,r.visit)(e,(0,r.visitInParallel)(p));return n}function assertValidSDL(e){const t=validateSDL(e);if(t.length!==0){throw new Error(t.map((e=>e.message)).join("\n\n"))}}function assertValidSDLExtension(e,t){const a=validateSDL(e,t);if(a.length!==0){throw new Error(a.map((e=>e.message)).join("\n\n"))}}},1373:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.versionInfo=t.version=void 0;const a="16.7.1";t.version=a;const n=Object.freeze({major:16,minor:7,patch:1,preReleaseTag:null});t.versionInfo=n},187:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var n=_interopDefault(a(2781));var i=_interopDefault(a(3685));var r=_interopDefault(a(7310));var p=_interopDefault(a(9501));var d=_interopDefault(a(5687));var s=_interopDefault(a(9796));const o=n.Readable;const l=Symbol("buffer");const u=Symbol("type");class Blob{constructor(){this[u]="";const e=arguments[0];const t=arguments[1];const a=[];let n=0;if(e){const t=e;const i=Number(t.length);for(let e=0;e<i;e++){const i=t[e];let r;if(i instanceof Buffer){r=i}else if(ArrayBuffer.isView(i)){r=Buffer.from(i.buffer,i.byteOffset,i.byteLength)}else if(i instanceof ArrayBuffer){r=Buffer.from(i)}else if(i instanceof Blob){r=i[l]}else{r=Buffer.from(typeof i==="string"?i:String(i))}n+=r.length;a.push(r)}}this[l]=Buffer.concat(a);let i=t&&t.type!==undefined&&String(t.type).toLowerCase();if(i&&!/[^\u0020-\u007E]/.test(i)){this[u]=i}}get size(){return this[l].length}get type(){return this[u]}text(){return Promise.resolve(this[l].toString())}arrayBuffer(){const e=this[l];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new o;e._read=function(){};e.push(this[l]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const a=arguments[1];let n,i;if(t===undefined){n=0}else if(t<0){n=Math.max(e+t,0)}else{n=Math.min(t,e)}if(a===undefined){i=e}else if(a<0){i=Math.max(e+a,0)}else{i=Math.min(a,e)}const r=Math.max(i-n,0);const p=this[l];const d=p.slice(n,n+r);const s=new Blob([],{type:arguments[2]});s[l]=d;return s}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,a){Error.call(this,e);this.message=e;this.type=t;if(a){this.code=this.errno=a.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let c;try{c=a(326).convert}catch(e){}const m=Symbol("Body internals");const f=n.PassThrough;function Body(e){var t=this;var a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},i=a.size;let r=i===undefined?0:i;var p=a.timeout;let d=p===undefined?0:p;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof n);else{e=Buffer.from(String(e))}this[m]={body:e,disturbed:false,error:null};this.size=r;this.timeout=d;if(e instanceof n){e.on("error",(function(e){const a=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[m].error=a}))}}Body.prototype={get body(){return this[m].body},get bodyUsed(){return this[m].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[l]:t})}))},json(){var e=this;return consumeBody.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(t){return convertBody(t,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const a=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,a)}}};function consumeBody(){var e=this;if(this[m].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[m].disturbed=true;if(this[m].error){return Body.Promise.reject(this[m].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof n)){return Body.Promise.resolve(Buffer.alloc(0))}let a=[];let i=0;let r=false;return new Body.Promise((function(n,p){let d;if(e.timeout){d=setTimeout((function(){r=true;p(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}t.on("error",(function(t){if(t.name==="AbortError"){r=true;p(t)}else{p(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}}));t.on("data",(function(t){if(r||t===null){return}if(e.size&&i+t.length>e.size){r=true;p(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}i+=t.length;a.push(t)}));t.on("end",(function(){if(r){return}clearTimeout(d);try{n(Buffer.concat(a,i))}catch(t){p(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}))}))}function convertBody(e,t){if(typeof c!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const a=t.get("content-type");let n="utf-8";let i,r;if(a){i=/charset=([^;]*)/i.exec(a)}r=e.slice(0,1024).toString();if(!i&&r){i=/<meta.+?charset=(['"])(.+?)\1/i.exec(r)}if(!i&&r){i=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(r);if(!i){i=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(r);if(i){i.pop()}}if(i){i=/charset=(.*)/i.exec(i.pop())}}if(!i&&r){i=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(r)}if(i){n=i.pop();if(n==="gb2312"||n==="gbk"){n="gb18030"}}return c(e,"UTF-8",n).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,a;let i=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(i instanceof n&&typeof i.getBoundary!=="function"){t=new f;a=new f;i.pipe(t);i.pipe(a);e[m].body=t;i=a}return i}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof n){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const a=t.body;if(a===null){e.end()}else if(isBlob(a)){a.stream().pipe(e)}else if(Buffer.isBuffer(a)){e.write(a);e.end()}else{a.pipe(e)}}Body.Promise=global.Promise;const v=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const h=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(v.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(h.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const a in e){if(a.toLowerCase()===t){return a}}return undefined}const y=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[y]=Object.create(null);if(e instanceof Headers){const t=e.raw();const a=Object.keys(t);for(const e of a){for(const a of t[e]){this.append(e,a)}}return}if(e==null);else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const a=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}a.push(Array.from(t))}for(const e of a){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const a=e[t];this.append(t,a)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[y],e);if(t===undefined){return null}return this[y][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let a=getHeaders(this);let n=0;while(n<a.length){var i=a[n];const r=i[0],p=i[1];e.call(t,p,r,this);a=getHeaders(this);n++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const a=find(this[y],e);this[y][a!==undefined?a:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const a=find(this[y],e);if(a!==undefined){this[y][a].push(t)}else{this[y][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[y],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[y],e);if(t!==undefined){delete this[y][t]}}raw(){return this[y]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const a=Object.keys(e[y]).sort();return a.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[y][t].join(", ")}:function(t){return[t.toLowerCase(),e[y][t].join(", ")]})}const T=Symbol("internal");function createHeadersIterator(e,t){const a=Object.create(b);a[T]={target:e,kind:t,index:0};return a}const b=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==b){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[T];const t=e.target,a=e.kind,n=e.index;const i=getHeaders(t,a);const r=i.length;if(n>=r){return{value:undefined,done:true}}this[T].index=n+1;return{value:i[n],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(b,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[y]);const a=find(e[y],"Host");if(a!==undefined){t[a]=t[a][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const a of Object.keys(e)){if(v.test(a)){continue}if(Array.isArray(e[a])){for(const n of e[a]){if(h.test(n)){continue}if(t[y][a]===undefined){t[y][a]=[n]}else{t[y][a].push(n)}}}else if(!h.test(e[a])){t[y][a]=[e[a]]}}return t}const g=Symbol("Response internals");const N=i.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const a=t.status||200;const n=new Headers(t.headers);if(e!=null&&!n.has("Content-Type")){const t=extractContentType(e);if(t){n.append("Content-Type",t)}}this[g]={url:t.url,status:a,statusText:t.statusText||N[a],headers:n,counter:t.counter}}get url(){return this[g].url||""}get status(){return this[g].status}get ok(){return this[g].status>=200&&this[g].status<300}get redirected(){return this[g].counter>0}get statusText(){return this[g].statusText}get headers(){return this[g].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const _=Symbol("Request internals");const w=r.URL||p.URL;const E=r.parse;const O=r.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)){e=new w(e).toString()}return E(e)}const S="destroy"in n.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[_]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let a;if(!isRequest(e)){if(e&&e.href){a=parseURL(e.href)}else{a=parseURL(`${e}`)}e={}}else{a=parseURL(e.url)}let n=t.method||e.method||"GET";n=n.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(n==="GET"||n==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let i=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,i,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const r=new Headers(t.headers||e.headers||{});if(i!=null&&!r.has("Content-Type")){const e=extractContentType(i);if(e){r.append("Content-Type",e)}}let p=isRequest(e)?e.signal:null;if("signal"in t)p=t.signal;if(p!=null&&!isAbortSignal(p)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[_]={method:n,redirect:t.redirect||e.redirect||"follow",headers:r,parsedURL:a,signal:p};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[_].method}get url(){return O(this[_].parsedURL)}get headers(){return this[_].headers}get redirect(){return this[_].redirect}get signal(){return this[_].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[_].parsedURL;const a=new Headers(e[_].headers);if(!a.has("Accept")){a.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof n.Readable&&!S){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let i=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){i="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){i=String(t)}}if(i){a.set("Content-Length",i)}if(!a.has("User-Agent")){a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!a.has("Accept-Encoding")){a.set("Accept-Encoding","gzip,deflate")}let r=e.agent;if(typeof r==="function"){r=r(t)}if(!a.has("Connection")&&!r){a.set("Connection","close")}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(a),agent:r})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const D=r.URL||p.URL;const I=n.PassThrough;const A=function isDomainOrSubdomain(e,t){const a=new D(t).hostname;const n=new D(e).hostname;return a===n||a[a.length-n.length-1]==="."&&a.endsWith(n)};const L=function isSameProtocol(e,t){const a=new D(t).protocol;const n=new D(e).protocol;return a===n};function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(a,r){const p=new Request(e,t);const o=getNodeRequestOptions(p);const l=(o.protocol==="https:"?d:i).request;const u=p.signal;let c=null;const m=function abort(){let e=new AbortError("The user aborted a request.");r(e);if(p.body&&p.body instanceof n.Readable){destroyStream(p.body,e)}if(!c||!c.body)return;c.body.emit("error",e)};if(u&&u.aborted){m();return}const f=function abortAndFinalize(){m();finalize()};const v=l(o);let h;if(u){u.addEventListener("abort",f)}function finalize(){v.abort();if(u)u.removeEventListener("abort",f);clearTimeout(h)}if(p.timeout){v.once("socket",(function(e){h=setTimeout((function(){r(new FetchError(`network timeout at: ${p.url}`,"request-timeout"));finalize()}),p.timeout)}))}v.on("error",(function(e){r(new FetchError(`request to ${p.url} failed, reason: ${e.message}`,"system",e));if(c&&c.body){destroyStream(c.body,e)}finalize()}));fixResponseChunkedTransferBadEnding(v,(function(e){if(u&&u.aborted){return}if(c&&c.body){destroyStream(c.body,e)}}));if(parseInt(process.version.substring(1))<14){v.on("socket",(function(e){e.addListener("close",(function(t){const a=e.listenerCount("data")>0;if(c&&a&&!t&&!(u&&u.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";c.body.emit("error",e)}}))}))}v.on("response",(function(e){clearTimeout(h);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const n=t.get("Location");let i=null;try{i=n===null?null:new D(n,p.url).toString()}catch(e){if(p.redirect!=="manual"){r(new FetchError(`uri requested responds with an invalid redirect URL: ${n}`,"invalid-redirect"));finalize();return}}switch(p.redirect){case"error":r(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${p.url}`,"no-redirect"));finalize();return;case"manual":if(i!==null){try{t.set("Location",i)}catch(e){r(e)}}break;case"follow":if(i===null){break}if(p.counter>=p.follow){r(new FetchError(`maximum redirect reached at: ${p.url}`,"max-redirect"));finalize();return}const n={headers:new Headers(p.headers),follow:p.follow,counter:p.counter+1,agent:p.agent,compress:p.compress,method:p.method,body:p.body,signal:p.signal,timeout:p.timeout,size:p.size};if(!A(p.url,i)||!L(p.url,i)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){n.headers.delete(e)}}if(e.statusCode!==303&&p.body&&getTotalBytes(p)===null){r(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&p.method==="POST"){n.method="GET";n.body=undefined;n.headers.delete("content-length")}a(fetch(new Request(i,n)));finalize();return}}e.once("end",(function(){if(u)u.removeEventListener("abort",f)}));let n=e.pipe(new I);const i={url:p.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:p.size,timeout:p.timeout,counter:p.counter};const d=t.get("Content-Encoding");if(!p.compress||p.method==="HEAD"||d===null||e.statusCode===204||e.statusCode===304){c=new Response(n,i);a(c);return}const o={flush:s.Z_SYNC_FLUSH,finishFlush:s.Z_SYNC_FLUSH};if(d=="gzip"||d=="x-gzip"){n=n.pipe(s.createGunzip(o));c=new Response(n,i);a(c);return}if(d=="deflate"||d=="x-deflate"){const t=e.pipe(new I);t.once("data",(function(e){if((e[0]&15)===8){n=n.pipe(s.createInflate())}else{n=n.pipe(s.createInflateRaw())}c=new Response(n,i);a(c)}));t.on("end",(function(){if(!c){c=new Response(n,i);a(c)}}));return}if(d=="br"&&typeof s.createBrotliDecompress==="function"){n=n.pipe(s.createBrotliDecompress());c=new Response(n,i);a(c);return}c=new Response(n,i);a(c)}));writeToStream(v,p)}))}function fixResponseChunkedTransferBadEnding(e,t){let a;e.on("socket",(function(e){a=e}));e.on("response",(function(e){const n=e.headers;if(n["transfer-encoding"]==="chunked"&&!n["content-length"]){e.once("close",(function(e){const n=a&&a.listenerCount("data")>0;if(n&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";t(e)}}))}}))}function destroyStream(e,t){if(e.destroy){e.destroy(t)}else{e.emit("error",t);e.end()}}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t["default"]=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError},8684:(e,t,a)=>{"use strict";var n=a(5477);var i=a(1229);var r={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function findStatus(e){var t=0;var a=i.length-1;while(t<=a){var n=Math.floor((t+a)/2);var r=i[n];if(r[0][0]<=e&&r[0][1]>=e){return r}else if(r[0][0]>e){a=n-1}else{t=n+1}}return null}var p=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function countSymbols(e){return e.replace(p,"_").length}function mapChars(e,t,a){var n=false;var i="";var p=countSymbols(e);for(var d=0;d<p;++d){var s=e.codePointAt(d);var o=findStatus(s);switch(o[1]){case"disallowed":n=true;i+=String.fromCodePoint(s);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,o[2]);break;case"deviation":if(a===r.TRANSITIONAL){i+=String.fromCodePoint.apply(String,o[2])}else{i+=String.fromCodePoint(s)}break;case"valid":i+=String.fromCodePoint(s);break;case"disallowed_STD3_mapped":if(t){n=true;i+=String.fromCodePoint(s)}else{i+=String.fromCodePoint.apply(String,o[2])}break;case"disallowed_STD3_valid":if(t){n=true}i+=String.fromCodePoint(s);break}}return{string:i,error:n}}var d=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function validateLabel(e,t){if(e.substr(0,4)==="xn--"){e=n.toUnicode(e);t=r.NONTRANSITIONAL}var a=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(d)===0){a=true}var i=countSymbols(e);for(var p=0;p<i;++p){var s=findStatus(e.codePointAt(p));if(processing===r.TRANSITIONAL&&s[1]!=="valid"||processing===r.NONTRANSITIONAL&&s[1]!=="valid"&&s[1]!=="deviation"){a=true;break}}return{label:e,error:a}}function processing(e,t,a){var n=mapChars(e,t,a);n.string=normalize(n.string);var i=n.string.split(".");for(var r=0;r<i.length;++r){try{var p=validateLabel(i[r]);i[r]=p.label;n.error=n.error||p.error}catch(e){n.error=true}}return{string:i.join("."),error:n.error}}e.exports.toASCII=function(e,t,a,i){var r=processing(e,t,a);var p=r.string.split(".");p=p.map((function(e){try{return n.toASCII(e)}catch(t){r.error=true;return e}}));if(i){var d=p.slice(0,p.length-1).join(".").length;if(d.length>253||d.length===0){r.error=true}for(var s=0;s<p.length;++s){if(p.length>63||p.length===0){r.error=true;break}}}if(r.error)return null;return p.join(".")};e.exports.toUnicode=function(e,t){var a=processing(e,t,r.NONTRANSITIONAL);return{domain:a.string,error:a.error}};e.exports.PROCESSING_OPTIONS=r},4249:(e,t,a)=>{e.exports=a(709)},709:(e,t,a)=>{"use strict";var n=a(1808);var i=a(4404);var r=a(3685);var p=a(5687);var d=a(2361);var s=a(9491);var o=a(3837);t.httpOverHttp=httpOverHttp;t.httpsOverHttp=httpsOverHttp;t.httpOverHttps=httpOverHttps;t.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var t=new TunnelingAgent(e);t.request=r.request;return t}function httpsOverHttp(e){var t=new TunnelingAgent(e);t.request=r.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function httpOverHttps(e){var t=new TunnelingAgent(e);t.request=p.request;return t}function httpsOverHttps(e){var t=new TunnelingAgent(e);t.request=p.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function TunnelingAgent(e){var t=this;t.options=e||{};t.proxyOptions=t.options.proxy||{};t.maxSockets=t.options.maxSockets||r.Agent.defaultMaxSockets;t.requests=[];t.sockets=[];t.on("free",(function onFree(e,a,n,i){var r=toOptions(a,n,i);for(var p=0,d=t.requests.length;p<d;++p){var s=t.requests[p];if(s.host===r.host&&s.port===r.port){t.requests.splice(p,1);s.request.onSocket(e);return}}e.destroy();t.removeSocket(e)}))}o.inherits(TunnelingAgent,d.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,t,a,n){var i=this;var r=mergeOptions({request:e},i.options,toOptions(t,a,n));if(i.sockets.length>=this.maxSockets){i.requests.push(r);return}i.createSocket(r,(function(t){t.on("free",onFree);t.on("close",onCloseOrRemove);t.on("agentRemove",onCloseOrRemove);e.onSocket(t);function onFree(){i.emit("free",t,r)}function onCloseOrRemove(e){i.removeSocket(t);t.removeListener("free",onFree);t.removeListener("close",onCloseOrRemove);t.removeListener("agentRemove",onCloseOrRemove)}}))};TunnelingAgent.prototype.createSocket=function createSocket(e,t){var a=this;var n={};a.sockets.push(n);var i=mergeOptions({},a.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){i.localAddress=e.localAddress}if(i.proxyAuth){i.headers=i.headers||{};i.headers["Proxy-Authorization"]="Basic "+new Buffer(i.proxyAuth).toString("base64")}l("making CONNECT request");var r=a.request(i);r.useChunkedEncodingByDefault=false;r.once("response",onResponse);r.once("upgrade",onUpgrade);r.once("connect",onConnect);r.once("error",onError);r.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,t,a){process.nextTick((function(){onConnect(e,t,a)}))}function onConnect(i,p,d){r.removeAllListeners();p.removeAllListeners();if(i.statusCode!==200){l("tunneling socket could not be established, statusCode=%d",i.statusCode);p.destroy();var s=new Error("tunneling socket could not be established, "+"statusCode="+i.statusCode);s.code="ECONNRESET";e.request.emit("error",s);a.removeSocket(n);return}if(d.length>0){l("got illegal response body from proxy");p.destroy();var s=new Error("got illegal response body from proxy");s.code="ECONNRESET";e.request.emit("error",s);a.removeSocket(n);return}l("tunneling connection has established");a.sockets[a.sockets.indexOf(n)]=p;return t(p)}function onError(t){r.removeAllListeners();l("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var i=new Error("tunneling socket could not be established, "+"cause="+t.message);i.code="ECONNRESET";e.request.emit("error",i);a.removeSocket(n)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var t=this.sockets.indexOf(e);if(t===-1){return}this.sockets.splice(t,1);var a=this.requests.shift();if(a){this.createSocket(a,(function(e){a.request.onSocket(e)}))}};function createSecureSocket(e,t){var a=this;TunnelingAgent.prototype.createSocket.call(a,e,(function(n){var r=e.request.getHeader("host");var p=mergeOptions({},a.options,{socket:n,servername:r?r.replace(/:.*$/,""):e.host});var d=i.connect(0,p);a.sockets[a.sockets.indexOf(n)]=d;t(d)}))}function toOptions(e,t,a){if(typeof e==="string"){return{host:e,port:t,localAddress:a}}return e}function mergeOptions(e){for(var t=1,a=arguments.length;t<a;++t){var n=arguments[t];if(typeof n==="object"){var i=Object.keys(n);for(var r=0,p=i.length;r<p;++r){var d=i[r];if(n[d]!==undefined){e[d]=n[d]}}}}return e}var l;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){l=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{l=function(){}}t.debug=l},2033:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"v1",{enumerable:true,get:function(){return n.default}});Object.defineProperty(t,"v3",{enumerable:true,get:function(){return i.default}});Object.defineProperty(t,"v4",{enumerable:true,get:function(){return r.default}});Object.defineProperty(t,"v5",{enumerable:true,get:function(){return p.default}});Object.defineProperty(t,"NIL",{enumerable:true,get:function(){return d.default}});Object.defineProperty(t,"version",{enumerable:true,get:function(){return s.default}});Object.defineProperty(t,"validate",{enumerable:true,get:function(){return o.default}});Object.defineProperty(t,"stringify",{enumerable:true,get:function(){return l.default}});Object.defineProperty(t,"parse",{enumerable:true,get:function(){return u.default}});var n=_interopRequireDefault(a(9370));var i=_interopRequireDefault(a(8638));var r=_interopRequireDefault(a(3519));var p=_interopRequireDefault(a(8239));var d=_interopRequireDefault(a(680));var s=_interopRequireDefault(a(3609));var o=_interopRequireDefault(a(6009));var l=_interopRequireDefault(a(9729));var u=_interopRequireDefault(a(8951));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}},7276:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function md5(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return n.default.createHash("md5").update(e).digest()}var i=md5;t["default"]=i},680:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a="00000000-0000-0000-0000-000000000000";t["default"]=a},8951:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(6009));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function parse(e){if(!(0,n.default)(e)){throw TypeError("Invalid UUID")}let t;const a=new Uint8Array(16);a[0]=(t=parseInt(e.slice(0,8),16))>>>24;a[1]=t>>>16&255;a[2]=t>>>8&255;a[3]=t&255;a[4]=(t=parseInt(e.slice(9,13),16))>>>8;a[5]=t&255;a[6]=(t=parseInt(e.slice(14,18),16))>>>8;a[7]=t&255;a[8]=(t=parseInt(e.slice(19,23),16))>>>8;a[9]=t&255;a[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255;a[11]=t/4294967296&255;a[12]=t>>>24&255;a[13]=t>>>16&255;a[14]=t>>>8&255;a[15]=t&255;return a}var i=parse;t["default"]=i},646:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;t["default"]=a},7548:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=rng;var n=_interopRequireDefault(a(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const i=new Uint8Array(256);let r=i.length;function rng(){if(r>i.length-16){n.default.randomFillSync(i);r=0}return i.slice(r,r+=16)}},3557:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function sha1(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return n.default.createHash("sha1").update(e).digest()}var i=sha1;t["default"]=i},9729:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(6009));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const i=[];for(let e=0;e<256;++e){i.push((e+256).toString(16).substr(1))}function stringify(e,t=0){const a=(i[e[t+0]]+i[e[t+1]]+i[e[t+2]]+i[e[t+3]]+"-"+i[e[t+4]]+i[e[t+5]]+"-"+i[e[t+6]]+i[e[t+7]]+"-"+i[e[t+8]]+i[e[t+9]]+"-"+i[e[t+10]]+i[e[t+11]]+i[e[t+12]]+i[e[t+13]]+i[e[t+14]]+i[e[t+15]]).toLowerCase();if(!(0,n.default)(a)){throw TypeError("Stringified UUID is invalid")}return a}var r=stringify;t["default"]=r},9370:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(7548));var i=_interopRequireDefault(a(9729));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}let r;let p;let d=0;let s=0;function v1(e,t,a){let o=t&&a||0;const l=t||new Array(16);e=e||{};let u=e.node||r;let c=e.clockseq!==undefined?e.clockseq:p;if(u==null||c==null){const t=e.random||(e.rng||n.default)();if(u==null){u=r=[t[0]|1,t[1],t[2],t[3],t[4],t[5]]}if(c==null){c=p=(t[6]<<8|t[7])&16383}}let m=e.msecs!==undefined?e.msecs:Date.now();let f=e.nsecs!==undefined?e.nsecs:s+1;const v=m-d+(f-s)/1e4;if(v<0&&e.clockseq===undefined){c=c+1&16383}if((v<0||m>d)&&e.nsecs===undefined){f=0}if(f>=1e4){throw new Error("uuid.v1(): Can't create more than 10M uuids/sec")}d=m;s=f;p=c;m+=122192928e5;const h=((m&268435455)*1e4+f)%4294967296;l[o++]=h>>>24&255;l[o++]=h>>>16&255;l[o++]=h>>>8&255;l[o++]=h&255;const y=m/4294967296*1e4&268435455;l[o++]=y>>>8&255;l[o++]=y&255;l[o++]=y>>>24&15|16;l[o++]=y>>>16&255;l[o++]=c>>>8|128;l[o++]=c&255;for(let e=0;e<6;++e){l[o+e]=u[e]}return t||(0,i.default)(l)}var o=v1;t["default"]=o},8638:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(6694));var i=_interopRequireDefault(a(7276));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const r=(0,n.default)("v3",48,i.default);var p=r;t["default"]=p},6694:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=_default;t.URL=t.DNS=void 0;var n=_interopRequireDefault(a(9729));var i=_interopRequireDefault(a(8951));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function stringToBytes(e){e=unescape(encodeURIComponent(e));const t=[];for(let a=0;a<e.length;++a){t.push(e.charCodeAt(a))}return t}const r="6ba7b810-9dad-11d1-80b4-00c04fd430c8";t.DNS=r;const p="6ba7b811-9dad-11d1-80b4-00c04fd430c8";t.URL=p;function _default(e,t,a){function generateUUID(e,r,p,d){if(typeof e==="string"){e=stringToBytes(e)}if(typeof r==="string"){r=(0,i.default)(r)}if(r.length!==16){throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)")}let s=new Uint8Array(16+e.length);s.set(r);s.set(e,r.length);s=a(s);s[6]=s[6]&15|t;s[8]=s[8]&63|128;if(p){d=d||0;for(let e=0;e<16;++e){p[d+e]=s[e]}return p}return(0,n.default)(s)}try{generateUUID.name=e}catch(e){}generateUUID.DNS=r;generateUUID.URL=p;return generateUUID}},3519:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(7548));var i=_interopRequireDefault(a(9729));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function v4(e,t,a){e=e||{};const r=e.random||(e.rng||n.default)();r[6]=r[6]&15|64;r[8]=r[8]&63|128;if(t){a=a||0;for(let e=0;e<16;++e){t[a+e]=r[e]}return t}return(0,i.default)(r)}var r=v4;t["default"]=r},8239:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(6694));var i=_interopRequireDefault(a(3557));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const r=(0,n.default)("v5",80,i.default);var p=r;t["default"]=p},6009:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(646));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function validate(e){return typeof e==="string"&&n.default.test(e)}var i=validate;t["default"]=i},3609:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=_interopRequireDefault(a(6009));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function version(e){if(!(0,n.default)(e)){throw TypeError("Invalid UUID")}return parseInt(e.substr(14,1),16)}var i=version;t["default"]=i},7027:e=>{"use strict";var t={};e.exports=t;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,t){if(!t.unsigned){--e}const a=t.unsigned?0:-Math.pow(2,e);const n=Math.pow(2,e)-1;const i=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e);const r=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,p){if(!p)p={};let d=+e;if(p.enforceRange){if(!Number.isFinite(d)){throw new TypeError("Argument is not a finite number")}d=sign(d)*Math.floor(Math.abs(d));if(d<a||d>n){throw new TypeError("Argument is not in byte range")}return d}if(!isNaN(d)&&p.clamp){d=evenRound(d);if(d<a)d=a;if(d>n)d=n;return d}if(!Number.isFinite(d)||d===0){return 0}d=sign(d)*Math.floor(Math.abs(d));d=d%i;if(!t.unsigned&&d>=r){return d-i}else if(t.unsigned){if(d<0){d+=i}else if(d===-0){return 0}}return d}}t["void"]=function(){return undefined};t["boolean"]=function(e){return!!e};t["byte"]=createNumberConversion(8,{unsigned:false});t["octet"]=createNumberConversion(8,{unsigned:true});t["short"]=createNumberConversion(16,{unsigned:false});t["unsigned short"]=createNumberConversion(16,{unsigned:true});t["long"]=createNumberConversion(32,{unsigned:false});t["unsigned long"]=createNumberConversion(32,{unsigned:true});t["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});t["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});t["double"]=function(e){const t=+e;if(!Number.isFinite(t)){throw new TypeError("Argument is not a finite floating-point value")}return t};t["unrestricted double"]=function(e){const t=+e;if(isNaN(t)){throw new TypeError("Argument is NaN")}return t};t["float"]=t["double"];t["unrestricted float"]=t["unrestricted double"];t["DOMString"]=function(e,t){if(!t)t={};if(t.treatNullAsEmptyString&&e===null){return""}return String(e)};t["ByteString"]=function(e,t){const a=String(e);let n=undefined;for(let e=0;(n=a.codePointAt(e))!==undefined;++e){if(n>255){throw new TypeError("Argument is not a valid bytestring")}}return a};t["USVString"]=function(e){const t=String(e);const a=t.length;const n=[];for(let e=0;e<a;++e){const i=t.charCodeAt(e);if(i<55296||i>57343){n.push(String.fromCodePoint(i))}else if(56320<=i&&i<=57343){n.push(String.fromCodePoint(65533))}else{if(e===a-1){n.push(String.fromCodePoint(65533))}else{const a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){const t=i&1023;const r=a&1023;n.push(String.fromCodePoint((2<<15)+(2<<9)*t+r));++e}else{n.push(String.fromCodePoint(65533))}}}}return n.join("")};t["Date"]=function(e,t){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};t["RegExp"]=function(e,t){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},7516:(e,t,a)=>{"use strict";const n=a(4422);t.implementation=class URLImpl{constructor(e){const t=e[0];const a=e[1];let i=null;if(a!==undefined){i=n.basicURLParse(a);if(i==="failure"){throw new TypeError("Invalid base URL")}}const r=n.basicURLParse(t,{baseURL:i});if(r==="failure"){throw new TypeError("Invalid URL")}this._url=r}get href(){return n.serializeURL(this._url)}set href(e){const t=n.basicURLParse(e);if(t==="failure"){throw new TypeError("Invalid URL")}this._url=t}get origin(){return n.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){n.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(n.cannotHaveAUsernamePasswordPort(this._url)){return}n.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(n.cannotHaveAUsernamePasswordPort(this._url)){return}n.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return n.serializeHost(e.host)}return n.serializeHost(e.host)+":"+n.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}n.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return n.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}n.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return n.serializeInteger(this._url.port)}set port(e){if(n.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{n.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];n.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const t=this._url;if(e===""){t.query=null;return}const a=e[0]==="?"?e.substring(1):e;t.query="";n.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const t=e[0]==="#"?e.substring(1):e;this._url.fragment="";n.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},2932:(e,t,a)=>{"use strict";const n=a(7027);const i=a(8494);const r=a(7516);const p=i.implSymbol;function URL(t){if(!this||this[p]||!(this instanceof URL)){throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.")}const a=[];for(let e=0;e<arguments.length&&e<2;++e){a[e]=arguments[e]}a[0]=n["USVString"](a[0]);if(a[1]!==undefined){a[1]=n["USVString"](a[1])}e.exports.setup(this,a)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const t=[];for(let e=0;e<arguments.length&&e<0;++e){t[e]=arguments[e]}return this[p].toJSON.apply(this[p],t)};Object.defineProperty(URL.prototype,"href",{get(){return this[p].href},set(e){e=n["USVString"](e);this[p].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[p].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[p].protocol},set(e){e=n["USVString"](e);this[p].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[p].username},set(e){e=n["USVString"](e);this[p].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[p].password},set(e){e=n["USVString"](e);this[p].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[p].host},set(e){e=n["USVString"](e);this[p].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[p].hostname},set(e){e=n["USVString"](e);this[p].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[p].port},set(e){e=n["USVString"](e);this[p].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[p].pathname},set(e){e=n["USVString"](e);this[p].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[p].search},set(e){e=n["USVString"](e);this[p].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[p].hash},set(e){e=n["USVString"](e);this[p].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[p]instanceof r.implementation},create(e,t){let a=Object.create(URL.prototype);this.setup(a,e,t);return a},setup(e,t,a){if(!a)a={};a.wrapper=e;e[p]=new r.implementation(t,a);e[p][i.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},9501:(e,t,a)=>{"use strict";t.URL=a(2932)["interface"];t.serializeURL=a(4422).serializeURL;t.serializeURLOrigin=a(4422).serializeURLOrigin;t.basicURLParse=a(4422).basicURLParse;t.setTheUsername=a(4422).setTheUsername;t.setThePassword=a(4422).setThePassword;t.serializeHost=a(4422).serializeHost;t.serializeInteger=a(4422).serializeInteger;t.parseURL=a(4422).parseURL},4422:(e,t,a)=>{"use strict";const n=a(5477);const i=a(8684);const r={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const p=Symbol("failure");function countSymbols(e){return n.ucs2.decode(e).length}function at(e,t){const a=e[t];return isNaN(a)?undefined:String.fromCodePoint(a)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,t){return isASCIIAlpha(e)&&(t===58||t===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function isSpecialScheme(e){return r[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return r[e]}function percentEncode(e){let t=e.toString(16).toUpperCase();if(t.length===1){t="0"+t}return"%"+t}function utf8PercentEncode(e){const t=new Buffer(e);let a="";for(let e=0;e<t.length;++e){a+=percentEncode(t[e])}return a}function utf8PercentDecode(e){const t=new Buffer(e);const a=[];for(let e=0;e<t.length;++e){if(t[e]!==37){a.push(t[e])}else if(t[e]===37&&isASCIIHex(t[e+1])&&isASCIIHex(t[e+2])){a.push(parseInt(t.slice(e+1,e+3).toString(),16));e+=2}else{a.push(t[e])}}return new Buffer(a).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const d=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||d.has(e)}const s=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||s.has(e)}function percentEncodeChar(e,t){const a=String.fromCodePoint(e);if(t(e)){return utf8PercentEncode(a)}return a}function parseIPv4Number(e){let t=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);t=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);t=8}if(e===""){return 0}const a=t===10?/[^0-9]/:t===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(a.test(e)){return p}return parseInt(e,t)}function parseIPv4(e){const t=e.split(".");if(t[t.length-1]===""){if(t.length>1){t.pop()}}if(t.length>4){return e}const a=[];for(const n of t){if(n===""){return e}const t=parseIPv4Number(n);if(t===p){return e}a.push(t)}for(let e=0;e<a.length-1;++e){if(a[e]>255){return p}}if(a[a.length-1]>=Math.pow(256,5-a.length)){return p}let n=a.pop();let i=0;for(const e of a){n+=e*Math.pow(256,3-i);++i}return n}function serializeIPv4(e){let t="";let a=e;for(let e=1;e<=4;++e){t=String(a%256)+t;if(e!==4){t="."+t}a=Math.floor(a/256)}return t}function parseIPv6(e){const t=[0,0,0,0,0,0,0,0];let a=0;let i=null;let r=0;e=n.ucs2.decode(e);if(e[r]===58){if(e[r+1]!==58){return p}r+=2;++a;i=a}while(r<e.length){if(a===8){return p}if(e[r]===58){if(i!==null){return p}++r;++a;i=a;continue}let n=0;let d=0;while(d<4&&isASCIIHex(e[r])){n=n*16+parseInt(at(e,r),16);++r;++d}if(e[r]===46){if(d===0){return p}r-=d;if(a>6){return p}let n=0;while(e[r]!==undefined){let i=null;if(n>0){if(e[r]===46&&n<4){++r}else{return p}}if(!isASCIIDigit(e[r])){return p}while(isASCIIDigit(e[r])){const t=parseInt(at(e,r));if(i===null){i=t}else if(i===0){return p}else{i=i*10+t}if(i>255){return p}++r}t[a]=t[a]*256+i;++n;if(n===2||n===4){++a}}if(n!==4){return p}break}else if(e[r]===58){++r;if(e[r]===undefined){return p}}else if(e[r]!==undefined){return p}t[a]=n;++a}if(i!==null){let e=a-i;a=7;while(a!==0&&e>0){const n=t[i+e-1];t[i+e-1]=t[a];t[a]=n;--a;--e}}else if(i===null&&a!==8){return p}return t}function serializeIPv6(e){let t="";const a=findLongestZeroSequence(e);const n=a.idx;let i=false;for(let a=0;a<=7;++a){if(i&&e[a]===0){continue}else if(i){i=false}if(n===a){const e=a===0?"::":":";t+=e;i=true;continue}t+=e[a].toString(16);if(a!==7){t+=":"}}return t}function parseHost(e,t){if(e[0]==="["){if(e[e.length-1]!=="]"){return p}return parseIPv6(e.substring(1,e.length-1))}if(!t){return parseOpaqueHost(e)}const a=utf8PercentDecode(e);const n=i.toASCII(a,false,i.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(n===null){return p}if(containsForbiddenHostCodePoint(n)){return p}const r=parseIPv4(n);if(typeof r==="number"||r===p){return r}return n}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return p}let t="";const a=n.ucs2.decode(e);for(let e=0;e<a.length;++e){t+=percentEncodeChar(a[e],isC0ControlPercentEncode)}return t}function findLongestZeroSequence(e){let t=null;let a=1;let n=null;let i=0;for(let r=0;r<e.length;++r){if(e[r]!==0){if(i>a){t=n;a=i}n=null;i=0}else{if(n===null){n=r}++i}}if(i>a){t=n;a=i}return{idx:t,len:a}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function shortenPath(e){const t=e.path;if(t.length===0){return}if(e.scheme==="file"&&t.length===1&&isNormalizedWindowsDriveLetter(t[0])){return}t.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,t,a,i,r){this.pointer=0;this.input=e;this.base=t||null;this.encodingOverride=a||"utf-8";this.stateOverride=r;this.url=i;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const d=trimTabAndNewline(this.input);if(d!==this.input){this.parseError=true}this.input=d;this.state=r||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=n.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const t=isNaN(e)?undefined:String.fromCodePoint(e);const a=this["parse "+this.state](e,t);if(!a){break}else if(a===p){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,t){if(isASCIIAlpha(e)){this.buffer+=t.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return p}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,t){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=t.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return p}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return p}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,t){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const a=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=a}else{this.url.username+=a}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return p}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=t}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,t){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return p}const e=parseHost(this.buffer,isSpecial(this.url));if(e===p){return p}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return p}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===p){return p}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=t}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,t){if(isASCIIDigit(e)){this.buffer+=t}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return p}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return p}return true};const o=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!o.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,t){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===p){return p}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=t}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,t){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e){if(t[e]<33||t[e]>126||t[e]===34||t[e]===35||t[e]===60||t[e]===62){this.url.query+=percentEncode(t[e])}else{this.url.query+=String.fromCodePoint(t[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=t}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,t){let a=e.scheme+":";if(e.host!==null){a+="//";if(e.username!==""||e.password!==""){a+=e.username;if(e.password!==""){a+=":"+e.password}a+="@"}a+=serializeHost(e.host);if(e.port!==null){a+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){a+="//"}if(e.cannotBeABaseURL){a+=e.path[0]}else{for(const t of e.path){a+="/"+t}}if(e.query!==null){a+="?"+e.query}if(!t&&e.fragment!==null){a+="#"+e.fragment}return a}function serializeOrigin(e){let t=e.scheme+"://";t+=serializeHost(e.host);if(e.port!==null){t+=":"+e.port}return t}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,t){if(t===undefined){t={}}const a=new URLStateMachine(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);if(a.failure){return"failure"}return a.url};e.exports.setTheUsername=function(e,t){e.username="";const a=n.ucs2.decode(t);for(let t=0;t<a.length;++t){e.username+=percentEncodeChar(a[t],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,t){e.password="";const a=n.ucs2.decode(t);for(let t=0;t<a.length;++t){e.password+=percentEncodeChar(a[t],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(t,a){if(a===undefined){a={}}return e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},8494:e=>{"use strict";e.exports.mixin=function mixin(e,t){const a=Object.getOwnPropertyNames(t);for(let n=0;n<a.length;++n){Object.defineProperty(e,a[n],Object.getOwnPropertyDescriptor(t,a[n]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},326:module=>{module.exports=eval("require")("encoding")},9491:e=>{"use strict";e.exports=require("assert")},6113:e=>{"use strict";e.exports=require("crypto")},2361:e=>{"use strict";e.exports=require("events")},7147:e=>{"use strict";e.exports=require("fs")},3685:e=>{"use strict";e.exports=require("http")},5687:e=>{"use strict";e.exports=require("https")},1808:e=>{"use strict";e.exports=require("net")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},5477:e=>{"use strict";e.exports=require("punycode")},2781:e=>{"use strict";e.exports=require("stream")},4404:e=>{"use strict";e.exports=require("tls")},7310:e=>{"use strict";e.exports=require("url")},3837:e=>{"use strict";e.exports=require("util")},9796:e=>{"use strict";e.exports=require("zlib")},4218:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const n=a(8254);const i=(0,n.gql)`
query repository($owner: String!, $repo: String!) {
  repository(owner: $owner, name: $repo) {
    id
  }
}
`;const r=(0,n.gql)`mutation ($base: String!, $head: String!, $repoId: ID!, $title: String!, $body: String) {
  createPullRequest(
    input: {baseRefName: $base, headRefName: $head, repositoryId: $repoId, title: $title, body: $body}
  ) {
    pullRequest {
      id
      url
      number
    }
  }
}`;class GitHubClient{client;constructor(e){this.client=new n.GraphQLClient("https://api.github.com/graphql",{headers:{authorization:`bearer ${e}`}})}async createPullRequest({owner:e,repo:t,head:a,base:n,title:p,body:d}){const{repository:s}=await this.client.request(i,{owner:e,repo:t});const o=await this.client.request(r,{base:n,head:a,repoId:s.id,title:p,body:d});return{data:o.createPullRequest.pullRequest}}}t["default"]=GitHubClient},5727:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){if(n===undefined)n=a;var i=Object.getOwnPropertyDescriptor(t,a);if(!i||("get"in i?!t.__esModule:i.writable||i.configurable)){i={enumerable:true,get:function(){return t[a]}}}Object.defineProperty(e,n,i)}:function(e,t,a,n){if(n===undefined)n=a;e[n]=t[a]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var a in e)if(a!=="default"&&Object.prototype.hasOwnProperty.call(e,a))n(t,e,a);i(t,e);return t};var p=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const d=r(a(7733));const s=p(a(4218));function run(){const errHandler=e=>{d.error(e.message);if(d.isDebug()){d.error(e)}d.setFailed(e.message)};try{const e=d.getInput("github_token");const t=d.getInput("head_branch");const a=d.getInput("base_branch");const n=d.getInput("title");const i=d.getInput("body");const r=d.getInput("owner");const p=d.getInput("repository");d.info(`owner: ${r}`);d.info(`repo: ${p}`);d.info(`HEAD: ${t}`);d.info(`BASE: ${a}`);const o={owner:r,repo:p,title:n,body:i,head:t,base:a};const l=new s.default(e);l.createPullRequest(o).then((e=>{d.setOutput("result",e)})).catch(errHandler)}catch(e){if(e instanceof Error){errHandler(e)}else{d.error(JSON.stringify(e));d.setFailed(JSON.stringify(e))}}}run()},9522:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.defaultJsonSerializer=void 0;t.defaultJsonSerializer=JSON},8090:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.GraphQLWebSocketClient=void 0;const n=a(5713);const i=a(3947);const r=`connection_init`;const p=`connection_ack`;const d=`ping`;const s=`pong`;const o=`subscribe`;const l=`next`;const u=`error`;const c=`complete`;class GraphQLWebSocketMessage{get type(){return this._type}get id(){return this._id}get payload(){return this._payload}constructor(e,t,a){this._type=e;this._payload=t;this._id=a}get text(){const e={type:this.type};if(this.id!=null&&this.id!=undefined)e.id=this.id;if(this.payload!=null&&this.payload!=undefined)e.payload=this.payload;return JSON.stringify(e)}static parse(e,t){const{type:a,payload:n,id:i}=JSON.parse(e);return new GraphQLWebSocketMessage(a,t(n),i)}}class GraphQLWebSocketClient{constructor(e,{onInit:t,onAcknowledged:a,onPing:n,onPong:r}){this.socketState={acknowledged:false,lastRequestId:0,subscriptions:{}};this.socket=e;e.addEventListener(`open`,(async a=>{this.socketState.acknowledged=false;this.socketState.subscriptions={};e.send(ConnectionInit(t?await t():null).text)}));e.addEventListener(`close`,(e=>{this.socketState.acknowledged=false;this.socketState.subscriptions={}}));e.addEventListener(`error`,(e=>{console.error(e)}));e.addEventListener(`message`,(t=>{try{const o=parseMessage(t.data);switch(o.type){case p:{if(this.socketState.acknowledged){console.warn(`Duplicate CONNECTION_ACK message ignored`)}else{this.socketState.acknowledged=true;if(a)a(o.payload)}return}case d:{if(n)n(o.payload).then((t=>e.send(Pong(t).text)));else e.send(Pong(null).text);return}case s:{if(r)r(o.payload);return}}if(!this.socketState.acknowledged){return}if(o.id===undefined||o.id===null||!this.socketState.subscriptions[o.id]){return}const{query:m,variables:f,subscriber:v}=this.socketState.subscriptions[o.id];switch(o.type){case l:{if(!o.payload.errors&&o.payload.data){v.next&&v.next(o.payload.data)}if(o.payload.errors){v.error&&v.error(new i.ClientError({...o.payload,status:200},{query:m,variables:f}))}else{}return}case u:{v.error&&v.error(new i.ClientError({errors:o.payload,status:200},{query:m,variables:f}));return}case c:{v.complete&&v.complete();delete this.socketState.subscriptions[o.id];return}}}catch(t){console.error(t);e.close(1006)}e.close(4400,`Unknown graphql-ws message.`)}))}makeSubscribe(e,t,a,n){const i=(this.socketState.lastRequestId++).toString();this.socketState.subscriptions[i]={query:e,variables:n,subscriber:a};this.socket.send(Subscribe(i,{query:e,operationName:t,variables:n}).text);return()=>{this.socket.send(Complete(i).text);delete this.socketState.subscriptions[i]}}rawRequest(e,t){return new Promise(((a,n)=>{let i;this.rawSubscribe(e,{next:(e,t)=>i={data:e,extensions:t},error:n,complete:()=>a(i)},t)}))}request(e,t){return new Promise(((a,n)=>{let i;this.subscribe(e,{next:e=>i=e,error:n,complete:()=>a(i)},t)}))}subscribe(e,t,a){const{query:i,operationName:r}=(0,n.resolveRequestDocument)(e);return this.makeSubscribe(i,r,t,a)}rawSubscribe(e,t,a){return this.makeSubscribe(e,undefined,t,a)}ping(e){this.socket.send(Ping(e).text)}close(){this.socket.close(1e3)}}GraphQLWebSocketClient.PROTOCOL=`graphql-transport-ws`;t.GraphQLWebSocketClient=GraphQLWebSocketClient;function parseMessage(e,t=(e=>e)){const a=GraphQLWebSocketMessage.parse(e,t);return a}function ConnectionInit(e){return new GraphQLWebSocketMessage(r,e)}function Ping(e){return new GraphQLWebSocketMessage(d,e,undefined)}function Pong(e){return new GraphQLWebSocketMessage(s,e,undefined)}function Subscribe(e,t){return new GraphQLWebSocketMessage(o,t,e)}function Complete(e){return new GraphQLWebSocketMessage(c,undefined,e)}},5224:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.HeadersInstanceToPlainObject=t.uppercase=void 0;const uppercase=e=>e.toUpperCase();t.uppercase=uppercase;const HeadersInstanceToPlainObject=e=>{const t={};e.forEach(((e,a)=>{t[a]=e}));return t};t.HeadersInstanceToPlainObject=HeadersInstanceToPlainObject},8254:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){if(n===undefined)n=a;var i=Object.getOwnPropertyDescriptor(t,a);if(!i||("get"in i?!t.__esModule:i.writable||i.configurable)){i={enumerable:true,get:function(){return t[a]}}}Object.defineProperty(e,n,i)}:function(e,t,a,n){if(n===undefined)n=a;e[n]=t[a]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var a in e)if(a!=="default"&&Object.prototype.hasOwnProperty.call(e,a))n(t,e,a);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.request=t.rawRequest=t.GraphQLClient=t.ClientError=t.batchRequests=t.resolveRequestDocument=t.GraphQLWebSocketClient=t.gql=void 0;const p=a(9522);const d=a(5224);const s=a(3793);const o=a(5713);const l=a(3947);Object.defineProperty(t,"ClientError",{enumerable:true,get:function(){return l.ClientError}});const u=r(a(1248)),c=u;const resolveHeaders=e=>{let t={};if(e){if(typeof Headers!==`undefined`&&e instanceof Headers||c&&c.Headers&&e instanceof c.Headers){t=(0,d.HeadersInstanceToPlainObject)(e)}else if(Array.isArray(e)){e.forEach((([e,a])=>{if(e&&a!==undefined){t[e]=a}}))}else{t=e}}return t};const cleanQuery=e=>e.replace(/([\s,]|#[^\n\r]+)+/g,` `).trim();const buildRequestConfig=e=>{if(!Array.isArray(e.query)){const t=e;const a=[`query=${encodeURIComponent(cleanQuery(t.query))}`];if(e.variables){a.push(`variables=${encodeURIComponent(t.jsonSerializer.stringify(t.variables))}`)}if(t.operationName){a.push(`operationName=${encodeURIComponent(t.operationName)}`)}return a.join(`&`)}if(typeof e.variables!==`undefined`&&!Array.isArray(e.variables)){throw new Error(`Cannot create query with given variable type, array expected`)}const t=e;const a=e.query.reduce(((e,a,n)=>{e.push({query:cleanQuery(a),variables:t.variables?t.jsonSerializer.stringify(t.variables[n]):undefined});return e}),[]);return`query=${encodeURIComponent(t.jsonSerializer.stringify(a))}`};const createHttpMethodFetcher=e=>async t=>{const{url:a,query:n,variables:i,operationName:r,fetch:d,fetchOptions:s,middleware:o}=t;const l={...t.headers};let u=``;let c=undefined;if(e===`POST`){c=createRequestBody(n,i,r,s.jsonSerializer);if(typeof c===`string`){l[`Content-Type`]=`application/json`}}else{u=buildRequestConfig({query:n,variables:i,operationName:r,jsonSerializer:s.jsonSerializer??p.defaultJsonSerializer})}const m={method:e,headers:l,body:c,...s};let f=a;let v=m;if(o){const e=await Promise.resolve(o({...m,url:a,operationName:r,variables:i}));const{url:t,...n}=e;f=t;v=n}if(u){f=`${f}?${u}`}return await d(f,v)};class GraphQLClient{constructor(e,t={}){this.url=e;this.requestConfig=t;this.rawRequest=async(...e)=>{const[t,a,n]=e;const i=(0,s.parseRawRequestArgs)(t,a,n);const{headers:r,fetch:p=u.default,method:d=`POST`,requestMiddleware:l,responseMiddleware:c,...m}=this.requestConfig;const{url:f}=this;if(i.signal!==undefined){m.signal=i.signal}const{operationName:v}=(0,o.resolveRequestDocument)(i.query);return makeRequest({url:f,query:i.query,variables:i.variables,headers:{...resolveHeaders(callOrIdentity(r)),...resolveHeaders(i.requestHeaders)},operationName:v,fetch:p,method:d,fetchOptions:m,middleware:l}).then((e=>{if(c){c(e)}return e})).catch((e=>{if(c){c(e)}throw e}))}}async request(e,...t){const[a,n]=t;const i=(0,s.parseRequestArgs)(e,a,n);const{headers:r,fetch:p=u.default,method:d=`POST`,requestMiddleware:l,responseMiddleware:c,...m}=this.requestConfig;const{url:f}=this;if(i.signal!==undefined){m.signal=i.signal}const{query:v,operationName:h}=(0,o.resolveRequestDocument)(i.document);return makeRequest({url:f,query:v,variables:i.variables,headers:{...resolveHeaders(callOrIdentity(r)),...resolveHeaders(i.requestHeaders)},operationName:h,fetch:p,method:d,fetchOptions:m,middleware:l}).then((e=>{if(c){c(e)}return e.data})).catch((e=>{if(c){c(e)}throw e}))}batchRequests(e,t){const a=(0,s.parseBatchRequestArgs)(e,t);const{headers:n,...i}=this.requestConfig;if(a.signal!==undefined){i.signal=a.signal}const r=a.documents.map((({document:e})=>(0,o.resolveRequestDocument)(e).query));const p=a.documents.map((({variables:e})=>e));return makeRequest({url:this.url,query:r,variables:p,headers:{...resolveHeaders(callOrIdentity(n)),...resolveHeaders(a.requestHeaders)},operationName:undefined,fetch:this.requestConfig.fetch??u.default,method:this.requestConfig.method||`POST`,fetchOptions:i,middleware:this.requestConfig.requestMiddleware}).then((e=>{if(this.requestConfig.responseMiddleware){this.requestConfig.responseMiddleware(e)}return e.data})).catch((e=>{if(this.requestConfig.responseMiddleware){this.requestConfig.responseMiddleware(e)}throw e}))}setHeaders(e){this.requestConfig.headers=e;return this}setHeader(e,t){const{headers:a}=this.requestConfig;if(a){a[e]=t}else{this.requestConfig.headers={[e]:t}}return this}setEndpoint(e){this.url=e;return this}}t.GraphQLClient=GraphQLClient;const makeRequest=async e=>{const{query:t,variables:a,fetchOptions:n}=e;const i=createHttpMethodFetcher((0,d.uppercase)(e.method??`post`));const r=Array.isArray(e.query);const s=await i(e);const o=await getResult(s,n.jsonSerializer??p.defaultJsonSerializer);const u=Array.isArray(o)?!o.some((({data:e})=>!e)):Boolean(o.data);const c=Array.isArray(o)||!o.errors||Array.isArray(o.errors)&&!o.errors.length||n.errorPolicy===`all`||n.errorPolicy===`ignore`;if(s.ok&&c&&u){const{errors:e,...t}=Array.isArray(o)?o:o;const a=n.errorPolicy===`ignore`?t:o;const i=r?{data:a}:a;return{...i,headers:s.headers,status:s.status}}else{const e=typeof o===`string`?{error:o}:o;throw new l.ClientError({...e,status:s.status,headers:s.headers},{query:t,variables:a})}};const rawRequest=async(...e)=>{const[t,a,...n]=e;const i=(0,s.parseRawRequestExtendedArgs)(t,a,...n);const r=new GraphQLClient(i.url);return r.rawRequest({...i})};t.rawRequest=rawRequest;async function request(e,t,...a){const n=(0,s.parseRequestExtendedArgs)(e,t,...a);const i=new GraphQLClient(n.url);return i.request({...n})}t.request=request;const batchRequests=async(...e)=>{const t=parseBatchRequestsArgsExtended(e);const a=new GraphQLClient(t.url);return a.batchRequests(t)};t.batchRequests=batchRequests;const parseBatchRequestsArgsExtended=e=>{if(e.length===1){return e[0]}else{return{url:e[0],documents:e[1],requestHeaders:e[2],signal:undefined}}};const createRequestBody=(e,t,a,n)=>{const i=n??p.defaultJsonSerializer;if(!Array.isArray(e)){return i.stringify({query:e,variables:t,operationName:a})}if(typeof t!==`undefined`&&!Array.isArray(t)){throw new Error(`Cannot create request body with given variable type, array expected`)}const r=e.reduce(((e,a,n)=>{e.push({query:a,variables:t?t[n]:undefined});return e}),[]);return i.stringify(r)};const getResult=async(e,t)=>{let a;e.headers.forEach(((e,t)=>{if(t.toLowerCase()===`content-type`){a=e}}));if(a&&(a.toLowerCase().startsWith(`application/json`)||a.toLowerCase().startsWith(`application/graphql+json`)||a.toLowerCase().startsWith(`application/graphql-response+json`))){return t.parse(await e.text())}else{return e.text()}};const callOrIdentity=e=>typeof e===`function`?e():e;const gql=(e,...t)=>e.reduce(((e,a,n)=>`${e}${a}${n in t?String(t[n]):``}`),``);t.gql=gql;var m=a(8090);Object.defineProperty(t,"GraphQLWebSocketClient",{enumerable:true,get:function(){return m.GraphQLWebSocketClient}});var f=a(5713);Object.defineProperty(t,"resolveRequestDocument",{enumerable:true,get:function(){return f.resolveRequestDocument}});t["default"]=request},3793:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.parseRawRequestExtendedArgs=t.parseRequestExtendedArgs=t.parseBatchRequestArgs=t.parseRawRequestArgs=t.parseRequestArgs=void 0;const parseRequestArgs=(e,t,a)=>e.document?e:{document:e,variables:t,requestHeaders:a,signal:undefined};t.parseRequestArgs=parseRequestArgs;const parseRawRequestArgs=(e,t,a)=>e.query?e:{query:e,variables:t,requestHeaders:a,signal:undefined};t.parseRawRequestArgs=parseRawRequestArgs;const parseBatchRequestArgs=(e,t)=>e.documents?e:{documents:e,requestHeaders:t,signal:undefined};t.parseBatchRequestArgs=parseBatchRequestArgs;const parseRequestExtendedArgs=(e,t,...a)=>{const[n,i]=a;return e.document?e:{url:e,document:t,variables:n,requestHeaders:i,signal:undefined}};t.parseRequestExtendedArgs=parseRequestExtendedArgs;const parseRawRequestExtendedArgs=(e,t,...a)=>{const[n,i]=a;return e.query?e:{url:e,query:t,variables:n,requestHeaders:i,signal:undefined}};t.parseRawRequestExtendedArgs=parseRawRequestExtendedArgs},5713:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.resolveRequestDocument=void 0;const n=a(1320);const extractOperationName=e=>{let t=undefined;const a=e.definitions.filter((e=>e.kind===`OperationDefinition`));if(a.length===1){t=a[0]?.name?.value}return t};const resolveRequestDocument=e=>{if(typeof e===`string`){let t=undefined;try{const a=(0,n.parse)(e);t=extractOperationName(a)}catch(e){}return{query:e,operationName:t}}const t=extractOperationName(e);return{query:(0,n.print)(e),operationName:t}};t.resolveRequestDocument=resolveRequestDocument},3947:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ClientError=void 0;class ClientError extends Error{constructor(e,t){const a=`${ClientError.extractMessage(e)}: ${JSON.stringify({response:e,request:t})}`;super(a);Object.setPrototypeOf(this,ClientError.prototype);this.response=e;this.request=t;if(typeof Error.captureStackTrace===`function`){Error.captureStackTrace(this,ClientError)}}static extractMessage(e){return e.errors?.[0]?.message??`GraphQL Error (Code: ${e.status})`}}t.ClientError=ClientError},1229:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var a=__webpack_module_cache__[e]={exports:{}};var n=true;try{__webpack_modules__[e].call(a.exports,a,a.exports,__nccwpck_require__);n=false}finally{if(n)delete __webpack_module_cache__[e]}return a.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__=__nccwpck_require__(5727);module.exports=__webpack_exports__})();
//# sourceMappingURL=index.js.map