name: CI

on:
  pull_request:
    branches: 
      - 'main'
      - '!test-base-*'

  workflow_dispatch:

jobs:
  build:

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.2.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build and lint
        run: |
          yarn install
          yarn build
          yarn test

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.2.0
        with:
          node-version: 16.x
          cache: 'yarn'

      - name: Build and lint
        run: |
          yarn install
          yarn lint

  test:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.2.0
        with:
          node-version: 16.x
          cache: 'yarn'

      - name: Git config
        run: |
          git config --local user.email "ken-yo@mbr.nifty.com"
          git config --local user.name "Kenji Saito"

      - name: Create base branch
        run: |
          BASE_BRANCH_NAME="test-base-$(date "+%Y%m%d-%H%M%S")"
          git switch -c "${BASE_BRANCH_NAME}"
          touch test.txt
          git add test.txt
          git commit -m "Test $(date)"
          echo "BASE_BRANCH_NAME=${BASE_BRANCH_NAME}" >> $GITHUB_ENV

      - name: Push Base
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
          branch: ${{ env.BASE_BRANCH_NAME }}

      - name: Create head branch
        run: |
          BRANCH_NAME="test-$(date "+%Y%m%d-%H%M%S")"
          git switch -c "${BRANCH_NAME}"
          touch test1.txt
          git add test1.txt
          git commit -m "Test $(date)"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Push Changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
          branch: ${{ env.BRANCH_NAME }}

      - name: Create pull request
        uses: ./
        id: create-pull-request
        with:
          head_branch: ${{ env.BRANCH_NAME }}
          base_branch: ${{ env.BASE_BRANCH_NAME }}
          github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
          repository: github-pull-requester
          owner: poad

      - name: Close pull request for test
        env:
          RESULT: ${{ steps.create-pull-request.outputs.result }}
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        run: |
          URL=$(echo ${RESULT} | jq -r .data.url)
          echo ${URL}

          REQUEST_BODY='{ "state": "closed" }'

          curl -sSL -X PATCH \
            --url ${URL} \
            --header 'content-type: application/vnd.github.sailor-v-preview+json' \
            --header "authorization: bearer ${GH_TOKEN}" \
            --data "${REQUEST_BODY}"

          git push origin :${{ env.BRANCH_NAME }}
          git push origin :${{ env.BASE_BRANCH_NAME }}

  configure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
    - name: Pull request auto merge enabler
      if: github.event_name == 'pull_request'
      uses: poad/github-pull-request-auto-merge-enable-action@v1.0.1
      with:
        pull_request_id: ${{ github.event.pull_request.node_id }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ github.event.repository.name }}
        owner: ${{ github.repository_owner }}
        merge_method: SQUASH
